#
# Metil Interface: Geometry_met
#
# Description: informations relatives a la geometrie
#
#
# Author: Pled Florent <pled@lmt.ens-cachan.fr>, (C) 2009
#
# Copyright: See COPYING file that comes with this distribution
#
#

# Methode qui genere un fichier construct_correspondance_node_to_vertex_node_$(f->name).$(e->dim).$(e->name).h pour Ã©tablir la correspondance entre les noeuds et les noeuds sommets du maillage
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
def construct_correspondance_node_to_vertex_node( list_f, rep )
    file_names := Vec[String]()
    for f in list_f
        e := child_cast( f->pe )
        file_name := "construct_correspondance_node_to_vertex_node_$(f->name).$(e->dim).$(e->name).h"
        file_names.push_back( file_name )
        file_ := File( rep + "/construct_correspondance_node_to_vertex_node_$(f->name).$(e->dim).$(e->name).h", "w" )
        file_ <<< "#ifndef construct_correspondance_node_to_vertex_node_$(f->name)_$(e->dim)_$(e->name)_h"
        file_ <<< "#define construct_correspondance_node_to_vertex_node_$(f->name)_$(e->dim)_$(e->name)_h"
        file_ <<< "namespace LMT {"
        file_ <<< "template<class TN, class TNG, class TD, unsigned NET>"
        file_ <<< "void construct_correspondance_node_to_vertex_node( const Element<$(e->name),TN,TNG,TD,NET> &elem, Vec<bool> &correspondance_node_to_vertex_node ) {"
        for i in 0 .. e->nb_nodes
            if e->node_number_is_a_vertex( i )
                file_ <<< "    correspondance_node_to_vertex_node[ elem.node( $i )->number ] = true;"
        file_ <<< "}"
        file_ <<< "}"
        file_ <<< "#endif"
    return file_names
