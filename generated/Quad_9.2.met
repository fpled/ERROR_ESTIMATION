static const nvi := 2
static const nb_nodes := 9
static const nb_vertex_nodes := 4
static const center_of_var_inter := [ 1.0/2.0, 1.0/2.0 ]
#
def interpolation( var_inter, val, interpolation_base )
    if interpolation_base == "lagrange"
        return val[7]*var_inter[1]*(4+var_inter[0]*(8*var_inter[0]-12))*(1-var_inter[1])+val[6]*var_inter[0]*var_inter[1]*(-8*var_inter[1]*(var_inter[0]-1)-4*(1-var_inter[0]))+val[5]*var_inter[0]*var_inter[1]*(1-var_inter[1])*(8*var_inter[0]-4)+val[4]*var_inter[0]*(1-var_inter[0])*(4+var_inter[1]*(8*var_inter[1]-12))+val[3]*var_inter[1]*(var_inter[0]*(3+var_inter[0]*(4*var_inter[1]-2)-6*var_inter[1])+2*var_inter[1]-1)+val[1]*var_inter[0]*(var_inter[1]*(3+var_inter[0]*(4*var_inter[1]-6)-2*var_inter[1])+2*var_inter[0]-1)+val[0]*(1+var_inter[0]*(2*var_inter[0]-3)+var_inter[1]*(var_inter[0]*(9+var_inter[0]*(4*var_inter[1]-6)-6*var_inter[1])+2*var_inter[1]-3))+val[2]*var_inter[0]*var_inter[1]*(1+var_inter[0]*(4*var_inter[1]-2)-2*var_inter[1])+16*val[8]*var_inter[0]*var_inter[1]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])
    else if interpolation_base == "hierarchical"
        return 4*val[6]*var_inter[0]*var_inter[1]*(1-var_inter[0])+val[0]*(1+var_inter[0]*(var_inter[1]-1)-var_inter[1])+val[1]*var_inter[0]*(1-var_inter[1])+val[2]*var_inter[0]*var_inter[1]+val[3]*var_inter[1]*(1-var_inter[0])+4*val[4]*var_inter[0]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])+4*val[7]*var_inter[1]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])+16*val[8]*var_inter[0]*var_inter[1]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])-4*val[5]*var_inter[0]*var_inter[1]*(var_inter[1]-1)

#
def interpolation_deg( var_inter, val, interpolation_base, deg ) when deg == 2
    if interpolation_base == "lagrange"
        return val[7]*var_inter[0]*var_inter[1]*(-8*var_inter[1]*(var_inter[0]-1)-4*(1-var_inter[0]))+val[6]*var_inter[1]*(var_inter[0]*(3+var_inter[0]*(4*var_inter[1]-2)-6*var_inter[1])+2*var_inter[1]-1)+16*val[4]*var_inter[1]*var_inter[0]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])+var_inter[0]*(var_inter[1]*(3+var_inter[0]*(4*var_inter[1]-6)-2*var_inter[1])+2*var_inter[0]-1)*val[2]+val[1]*var_inter[0]*(var_inter[1]*(-8*var_inter[1]*(var_inter[0]-1)-12*(1-var_inter[0]))+4*(1-var_inter[0]))+val[0]*(1+var_inter[1]*(var_inter[0]*(9+4*var_inter[0]*var_inter[1]-6*(var_inter[0]+var_inter[1]))+2*var_inter[1]-3)+var_inter[0]*(2*var_inter[0]-3))+val[3]*var_inter[1]*(4+var_inter[0]*(8*var_inter[0]-12))*(1-var_inter[1])+val[5]*var_inter[0]*var_inter[1]*(1-var_inter[1])*(8*var_inter[0]-4)+val[8]*var_inter[0]*var_inter[1]*(1+var_inter[0]*(4*var_inter[1]-2)-2*var_inter[1])
    else if interpolation_base == "hierarchical"
        return var_inter[0]*var_inter[1]*val[8]+4*val[7]*var_inter[0]*var_inter[1]*(1-var_inter[0])+val[6]*var_inter[1]*(1-var_inter[0])+4*val[3]*var_inter[1]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])+var_inter[0]*(1-var_inter[1])*val[2]+(1+var_inter[0]*(var_inter[1]-1)-var_inter[1])*val[0]+4*var_inter[0]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])*val[1]+16*val[4]*var_inter[0]*var_inter[1]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])-4*val[5]*var_inter[0]*var_inter[1]*(var_inter[1]-1)

#
def interpolation_deg( var_inter, val, interpolation_base, deg ) when deg == 3
    if interpolation_base == "lagrange"
        return val[12]*var_inter[1]*(1+var_inter[0]*(var_inter[0]*(9-9.0/2.0*var_inter[0])+var_inter[1]*(1-var_inter[1])*(99.0/4.0+var_inter[0]*(81.0/4.0*var_inter[0]-81.0/2.0))-11.0/2.0)-9.0/2.0*var_inter[1]*(1-var_inter[1]))+val[8]*var_inter[1]*(var_inter[0]*(99.0/4.0+var_inter[1]*(297.0/4.0*var_inter[1]-99)+var_inter[0]*(81.0/4.0*var_inter[0]+var_inter[1]*(162+var_inter[0]*(243.0/4.0*var_inter[1]-81)-243.0/2.0*var_inter[1])-81.0/2.0))+var_inter[1]*(18-27.0/2.0*var_inter[1])-9.0/2.0)+val[5]*var_inter[1]*var_inter[0]*(81+var_inter[1]*(243.0/2.0*var_inter[1]-405.0/2.0)+var_inter[0]*(243.0/2.0*var_inter[0]+var_inter[1]*(2025.0/4.0+var_inter[0]*(729.0/4.0*var_inter[1]-1215.0/4.0)-1215.0/4.0*var_inter[1])-405.0/2.0))+var_inter[0]*(1+var_inter[1]*(var_inter[1]*(9-9.0/2.0*var_inter[1])+var_inter[0]*(1-var_inter[0])*(99.0/4.0+var_inter[1]*(81.0/4.0*var_inter[1]-81.0/2.0))-11.0/2.0)-9.0/2.0*var_inter[0]*(1-var_inter[0]))*val[3]+val[0]*(1+var_inter[1]*(var_inter[1]*(9-9.0/2.0*var_inter[1])+var_inter[0]*(121.0/4.0+var_inter[1]*(99.0/4.0*var_inter[1]+var_inter[0]*(81+var_inter[0]*(81.0/4.0*var_inter[1]-81.0/2.0)-81.0/2.0*var_inter[1])-99.0/2.0)+var_inter[0]*(99.0/4.0*var_inter[0]-99.0/2.0))-11.0/2.0)+var_inter[0]*(var_inter[0]*(9-9.0/2.0*var_inter[0])-11.0/2.0))+val[1]*var_inter[0]*(9+var_inter[0]*(27.0/2.0*var_inter[0]-45.0/2.0)+var_inter[1]*(var_inter[0]*(495.0/4.0-297.0/4.0*var_inter[0])+var_inter[1]*(81+var_inter[0]*(243.0/2.0*var_inter[0]+var_inter[1]*(405.0/4.0-243.0/4.0*var_inter[0])-405.0/2.0)-81.0/2.0*var_inter[1])-99.0/2.0))+val[2]*var_inter[0]*(var_inter[0]*(18-27.0/2.0*var_inter[0])+var_inter[1]*(99.0/4.0+var_inter[1]*(81.0/4.0*var_inter[1]-81.0/2.0)+var_inter[0]*(297.0/4.0*var_inter[0]+var_inter[1]*(162+var_inter[0]*(243.0/4.0*var_inter[1]-243.0/2.0)-81*var_inter[1])-99))-9.0/2.0)+val[4]*var_inter[1]*(9+var_inter[1]*(27.0/2.0*var_inter[1]-45.0/2.0)+var_inter[0]*(var_inter[0]*(81-81.0/2.0*var_inter[0])+var_inter[1]*(495.0/4.0+var_inter[0]*(243.0/2.0*var_inter[1]+var_inter[0]*(405.0/4.0-243.0/4.0*var_inter[1])-405.0/2.0)-297.0/4.0*var_inter[1])-99.0/2.0))+val[6]*var_inter[0]*var_inter[1]*(var_inter[1]*(405.0/4.0-243.0/4.0*var_inter[1])+var_inter[0]*(162+var_inter[1]*(243*var_inter[1]+var_inter[0]*(1215.0/4.0-729.0/4.0*var_inter[1])-405)-243.0/2.0*var_inter[0])-81.0/2.0)+val[7]*var_inter[0]*var_inter[1]*(9+81.0/2.0*var_inter[0]*(var_inter[0]-1)+var_inter[1]*(27.0/2.0*var_inter[1]+var_inter[0]*(405.0/4.0*(1-var_inter[0])+243.0/4.0*var_inter[1]*(var_inter[0]-1))-45.0/2.0))+val[9]*var_inter[0]*var_inter[1]*(var_inter[1]*(162-243.0/2.0*var_inter[1])+var_inter[0]*(405.0/4.0+var_inter[1]*(1215.0/4.0*var_inter[1]+var_inter[0]*(243-729.0/4.0*var_inter[1])-405)-243.0/4.0*var_inter[0])-81.0/2.0)+val[10]*var_inter[0]*var_inter[1]*(81.0/4.0+var_inter[1]*(243.0/4.0*var_inter[1]-81)+var_inter[0]*(243.0/4.0*var_inter[0]+var_inter[1]*(324+729.0/4.0*var_inter[0]*var_inter[1]-243*(var_inter[0]+var_inter[1]))-81))+val[11]*var_inter[0]*var_inter[1]*(var_inter[1]*(18-27.0/2.0*var_inter[1])+var_inter[0]*(1-var_inter[0])*(81.0/4.0+var_inter[1]*(243.0/4.0*var_inter[1]-81))-9.0/2.0)+val[13]*var_inter[0]*var_inter[1]*(9+var_inter[0]*(var_inter[1]*(405.0/4.0*(1-var_inter[1])+243.0/4.0*var_inter[0]*(var_inter[1]-1))+27.0/2.0*var_inter[0]-45.0/2.0)-81.0/2.0*var_inter[1]*(1-var_inter[1]))+val[14]*var_inter[0]*var_inter[1]*(var_inter[0]*(18+var_inter[1]*(-81*(1-var_inter[1])-243.0/4.0*var_inter[0]*(var_inter[1]-1))-27.0/2.0*var_inter[0])+81.0/4.0*var_inter[1]*(1-var_inter[1])-9.0/2.0)+val[15]*var_inter[0]*var_inter[1]*(1+var_inter[0]*(81.0/4.0*var_inter[1]*(1+var_inter[1]*(var_inter[0]-1)-var_inter[0])-9.0/2.0*(1-var_inter[0]))-9.0/2.0*var_inter[1]*(1-var_inter[1]))
    else if interpolation_base == "hierarchical"
        return val[13]*var_inter[0]*var_inter[1]*(9+var_inter[0]*(27.0/2.0*var_inter[0]-45.0/2.0))+val[11]*var_inter[0]*var_inter[1]*(var_inter[1]*(18-27.0/2.0*var_inter[1])-9.0/2.0)+val[9]*var_inter[0]*var_inter[1]*(var_inter[1]*(162+var_inter[0]*(1215.0/4.0*var_inter[1]+var_inter[0]*(243-729.0/4.0*var_inter[1])-405)-243.0/2.0*var_inter[1])+var_inter[0]*(405.0/4.0-243.0/4.0*var_inter[0])-81.0/2.0)+val[8]*var_inter[1]*(var_inter[1]*(18*(1-var_inter[0])+27.0/2.0*var_inter[1]*(var_inter[0]-1))-9.0/2.0*(1-var_inter[0]))+val[5]*var_inter[1]*var_inter[0]*(81+var_inter[0]*(243.0/2.0*var_inter[0]-405.0/2.0)+var_inter[1]*(var_inter[0]*(2025.0/4.0+729.0/4.0*var_inter[0]*var_inter[1]-1215.0/4.0*(var_inter[0]+var_inter[1]))+243.0/2.0*var_inter[1]-405.0/2.0))+val[4]*var_inter[1]*(1-var_inter[0])*(9+var_inter[1]*(27.0/2.0*var_inter[1]-45.0/2.0))+var_inter[0]*(var_inter[0]*(18*(1-var_inter[1])+27.0/2.0*var_inter[0]*(var_inter[1]-1))-9.0/2.0*(1-var_inter[1]))*val[2]+val[1]*var_inter[0]*(1-var_inter[1])*(9+var_inter[0]*(27.0/2.0*var_inter[0]-45.0/2.0))+(1+var_inter[0]*(var_inter[1]-1)-var_inter[1])*val[0]+var_inter[0]*(1-var_inter[1])*val[3]+val[6]*var_inter[0]*var_inter[1]*(var_inter[0]*(162-243.0/2.0*var_inter[0])+var_inter[1]*(405.0/4.0+var_inter[0]*(243*var_inter[1]+var_inter[0]*(1215.0/4.0-729.0/4.0*var_inter[1])-405)-243.0/4.0*var_inter[1])-81.0/2.0)+val[7]*var_inter[0]*var_inter[1]*(9+var_inter[1]*(27.0/2.0*var_inter[1]-45.0/2.0))+val[10]*var_inter[0]*var_inter[1]*(81.0/4.0+var_inter[0]*(243.0/4.0*var_inter[0]-81)+var_inter[1]*(var_inter[0]*(324+729.0/4.0*var_inter[0]*var_inter[1]-243*(var_inter[0]+var_inter[1]))+243.0/4.0*var_inter[1]-81))+val[12]*var_inter[1]*(1-var_inter[0])+var_inter[1]*var_inter[0]*(var_inter[0]*(18-27.0/2.0*var_inter[0])-9.0/2.0)*val[14]+var_inter[0]*var_inter[1]*val[15]

#
def interpolation_deg( var_inter, val, interpolation_base, deg ) when deg == 4
    if interpolation_base == "lagrange"
        return var_inter[0]*var_inter[1]*(1+var_inter[1]*(var_inter[1]*(16-32.0/3.0*var_inter[1])-22.0/3.0)+var_inter[0]*(var_inter[0]*(16-32.0/3.0*var_inter[0])+var_inter[1]*(484.0/9.0+var_inter[0]*(704.0/9.0*var_inter[0]-352.0/3.0)+var_inter[1]*(704.0/9.0*var_inter[1]+var_inter[0]*(256+1024.0/9.0*var_inter[0]*var_inter[1]-512.0/3.0*(var_inter[0]+var_inter[1]))-352.0/3.0))-22.0/3.0))*val[24]+var_inter[0]*var_inter[1]*(var_inter[0]*(208.0/3.0+var_inter[0]*(128.0/3.0*var_inter[0]-96))+var_inter[1]*(352.0/3.0+var_inter[0]*(var_inter[1]*(3328.0/3.0-6656.0/9.0*var_inter[1])+var_inter[0]*(704+var_inter[1]*(2048.0/3.0*var_inter[0]+var_inter[1]*(1024-4096.0/9.0*var_inter[0])-1536)-2816.0/9.0*var_inter[0])-4576.0/9.0)+var_inter[1]*(512.0/3.0*var_inter[1]-256))-16)*val[21]+var_inter[0]*var_inter[1]*(var_inter[1]*(448+var_inter[1]*(512*var_inter[1]-896))+var_inter[0]*(1216.0/3.0+var_inter[0]*(1024.0/3.0*var_inter[0]-2048.0/3.0)+var_inter[1]*(var_inter[0]*(14336.0/3.0-7168.0/3.0*var_inter[0])+var_inter[1]*(17024.0/3.0+var_inter[0]*(16384.0/3.0*var_inter[1]+var_inter[0]*(14336.0/3.0-8192.0/3.0*var_inter[1])-28672.0/3.0)-9728.0/3.0*var_inter[1])-8512.0/3.0))-64)*val[17]+var_inter[1]*(16.0/3.0+var_inter[1]*(var_inter[1]*(224.0/3.0-128.0/3.0*var_inter[1])-112.0/3.0)+var_inter[0]*(var_inter[0]*(1120.0/9.0+var_inter[0]*(512.0/9.0*var_inter[0]-1280.0/9.0)+var_inter[1]*(var_inter[1]*(15680.0/9.0-8960.0/9.0*var_inter[1])+var_inter[0]*(8960.0/9.0+var_inter[1]*(7168.0/9.0*var_inter[0]+var_inter[1]*(10240.0/9.0-4096.0/9.0*var_inter[0])-17920.0/9.0)-3584.0/9.0*var_inter[0])-7840.0/9.0))+var_inter[1]*(2800.0/9.0+var_inter[1]*(3200.0/9.0*var_inter[1]-5600.0/9.0))-400.0/9.0))*val[15]+var_inter[1]*var_inter[0]*(var_inter[1]*(1216.0/3.0+var_inter[1]*(1024.0/3.0*var_inter[1]-2048.0/3.0)+var_inter[0]*(var_inter[1]*(14336.0/3.0-7168.0/3.0*var_inter[1])+var_inter[0]*(17024.0/3.0+var_inter[1]*(16384.0/3.0*var_inter[0]+var_inter[1]*(14336.0/3.0-8192.0/3.0*var_inter[0])-28672.0/3.0)-9728.0/3.0*var_inter[0])-8512.0/3.0))+var_inter[0]*(448+var_inter[0]*(512*var_inter[0]-896))-64)*val[13]+var_inter[0]*var_inter[1]*(var_inter[0]*(832+var_inter[0]*(512*var_inter[0]-1152))+var_inter[1]*(1216+var_inter[1]*(1024*var_inter[1]-2048)+var_inter[0]*(var_inter[1]*(26624.0/3.0-13312.0/3.0*var_inter[1])+var_inter[0]*(7296+var_inter[1]*(6144*var_inter[1]+var_inter[0]*(16384.0/3.0-8192.0/3.0*var_inter[1])-12288)-9728.0/3.0*var_inter[0])-15808.0/3.0))-192)*val[11]+var_inter[1]*var_inter[0]*(256+var_inter[1]*(var_inter[0]*(43264.0/9.0+var_inter[0]*(26624.0/9.0*var_inter[0]-6656)+var_inter[1]*(26624.0/9.0*var_inter[1]+var_inter[0]*(9216+16384.0/9.0*var_inter[0]*var_inter[1]-4096*(var_inter[0]+var_inter[1]))-6656))+var_inter[1]*(1536-2048.0/3.0*var_inter[1])-3328.0/3.0)+var_inter[0]*(var_inter[0]*(1536-2048.0/3.0*var_inter[0])-3328.0/3.0))*val[6]+var_inter[0]*(16.0/3.0+var_inter[1]*(var_inter[0]*(2800.0/9.0+var_inter[0]*(3200.0/9.0*var_inter[0]-5600.0/9.0)+var_inter[1]*(var_inter[1]*(8960.0/9.0+var_inter[0]*(var_inter[0]*(10240.0/9.0-4096.0/9.0*var_inter[1])+7168.0/9.0*var_inter[1]-17920.0/9.0)-3584.0/9.0*var_inter[1])+var_inter[0]*(15680.0/9.0-8960.0/9.0*var_inter[0])-7840.0/9.0))+var_inter[1]*(1120.0/9.0+var_inter[1]*(512.0/9.0*var_inter[1]-1280.0/9.0))-400.0/9.0)+var_inter[0]*(var_inter[0]*(224.0/3.0-128.0/3.0*var_inter[0])-112.0/3.0))*val[3]+val[1]*var_inter[0]*(16+var_inter[0]*(var_inter[0]*(96-128.0/3.0*var_inter[0])-208.0/3.0)+var_inter[1]*(var_inter[0]*(5200.0/9.0+var_inter[0]*(3200.0/9.0*var_inter[0]-800))+var_inter[1]*(1120.0/3.0+var_inter[1]*(512.0/3.0*var_inter[1]-1280.0/3.0)+var_inter[0]*(var_inter[0]*(2240-8960.0/9.0*var_inter[0])+var_inter[1]*(16640.0/9.0+var_inter[0]*(1024*var_inter[1]+var_inter[0]*(10240.0/9.0-4096.0/9.0*var_inter[1])-2560)-6656.0/9.0*var_inter[1])-14560.0/9.0))-400.0/3.0))+(1+var_inter[0]*(var_inter[0]*(70.0/3.0+var_inter[0]*(32.0/3.0*var_inter[0]-80.0/3.0))+var_inter[1]*(625.0/9.0+var_inter[1]*(var_inter[1]*(2000.0/9.0-800.0/9.0*var_inter[1])-1750.0/9.0)+var_inter[0]*(var_inter[1]*(4900.0/9.0+var_inter[0]*(2240.0/9.0*var_inter[0]-5600.0/9.0)+var_inter[1]*(2240.0/9.0*var_inter[1]+var_inter[0]*(6400.0/9.0+var_inter[0]*(1024.0/9.0*var_inter[1]-2560.0/9.0)-2560.0/9.0*var_inter[1])-5600.0/9.0))+var_inter[0]*(2000.0/9.0-800.0/9.0*var_inter[0])-1750.0/9.0))-25.0/3.0)+var_inter[1]*(var_inter[1]*(70.0/3.0+var_inter[1]*(32.0/3.0*var_inter[1]-80.0/3.0))-25.0/3.0))*val[0]+val[2]*var_inter[0]*(var_inter[1]*(100+var_inter[1]*(var_inter[1]*(320-128*var_inter[1])+var_inter[0]*(5320.0/3.0+var_inter[0]*(4480.0/3.0*var_inter[0]-8960.0/3.0)+var_inter[1]*(2432.0/3.0*var_inter[1]+var_inter[0]*(10240.0/3.0+var_inter[1]*(2048.0/3.0*var_inter[0]-4096.0/3.0)-5120.0/3.0*var_inter[0])-6080.0/3.0))-280)+var_inter[0]*(var_inter[0]*(3200.0/3.0-1600.0/3.0*var_inter[0])-1900.0/3.0))+var_inter[0]*(76+var_inter[0]*(64*var_inter[0]-128))-12)+var_inter[0]*(var_inter[1]*(25.0/3.0+var_inter[0]*(var_inter[0]*(400.0/3.0-800.0/9.0*var_inter[0])-550.0/9.0)+var_inter[1]*(var_inter[1]*(80.0/3.0-32.0/3.0*var_inter[1])+var_inter[0]*(1540.0/9.0+var_inter[0]*(2240.0/9.0*var_inter[0]-1120.0/3.0)+var_inter[1]*(704.0/9.0*var_inter[1]+var_inter[0]*(1280.0/3.0+var_inter[0]*(1024.0/9.0*var_inter[1]-2560.0/9.0)-512.0/3.0*var_inter[1])-1760.0/9.0))-70.0/3.0))+var_inter[0]*(22.0/3.0+var_inter[0]*(32.0/3.0*var_inter[0]-16))-1)*val[4]+val[5]*var_inter[1]*(16+var_inter[0]*(var_inter[1]*(5200.0/9.0+var_inter[1]*(3200.0/9.0*var_inter[1]-800)+var_inter[0]*(var_inter[0]*(16640.0/9.0-6656.0/9.0*var_inter[0])+var_inter[1]*(2240+var_inter[0]*(10240.0/9.0*var_inter[1]+var_inter[0]*(1024-4096.0/9.0*var_inter[1])-2560)-8960.0/9.0*var_inter[1])-14560.0/9.0))+var_inter[0]*(1120.0/3.0+var_inter[0]*(512.0/3.0*var_inter[0]-1280.0/3.0))-400.0/3.0)+var_inter[1]*(var_inter[1]*(96-128.0/3.0*var_inter[1])-208.0/3.0))+var_inter[0]*var_inter[1]*(var_inter[0]*(1216+var_inter[0]*(1024*var_inter[0]-2048))+var_inter[1]*(832+var_inter[1]*(512*var_inter[1]-1152)+var_inter[0]*(var_inter[1]*(7296-9728.0/3.0*var_inter[1])+var_inter[0]*(26624.0/3.0+var_inter[1]*(6144*var_inter[0]+var_inter[1]*(16384.0/3.0-8192.0/3.0*var_inter[0])-12288)-13312.0/3.0*var_inter[0])-15808.0/3.0))-192)*val[7]+var_inter[1]*var_inter[0]*(256.0/3.0+var_inter[0]*(var_inter[0]*(3584.0/3.0-2048.0/3.0*var_inter[0])+var_inter[1]*(23296.0/9.0+var_inter[0]*(26624.0/9.0*var_inter[0]-46592.0/9.0)+var_inter[1]*(14336.0/9.0*var_inter[1]+var_inter[0]*(7168+var_inter[0]*(16384.0/9.0*var_inter[1]-4096)-28672.0/9.0*var_inter[1])-3584))-1792.0/3.0)+var_inter[1]*(var_inter[1]*(512-2048.0/9.0*var_inter[1])-3328.0/9.0))*val[8]+var_inter[1]*var_inter[0]*(var_inter[1]*(208.0/3.0+var_inter[1]*(128.0/3.0*var_inter[1]-96))+var_inter[0]*(352.0/3.0+var_inter[1]*(var_inter[0]*(3328.0/3.0-6656.0/9.0*var_inter[0])+var_inter[1]*(704+var_inter[0]*(var_inter[0]*(1024-4096.0/9.0*var_inter[1])+2048.0/3.0*var_inter[1]-1536)-2816.0/9.0*var_inter[1])-4576.0/9.0)+var_inter[0]*(512.0/3.0*var_inter[0]-256))-16)*val[9]+var_inter[1]*(var_inter[1]*(76+var_inter[1]*(64*var_inter[1]-128))+var_inter[0]*(100+var_inter[0]*(var_inter[0]*(320-128*var_inter[0])-280)+var_inter[1]*(var_inter[1]*(3200.0/3.0-1600.0/3.0*var_inter[1])+var_inter[0]*(5320.0/3.0+var_inter[1]*(4480.0/3.0*var_inter[1]-8960.0/3.0)+var_inter[0]*(2432.0/3.0*var_inter[0]+var_inter[1]*(10240.0/3.0+var_inter[0]*(2048.0/3.0*var_inter[1]-4096.0/3.0)-5120.0/3.0*var_inter[1])-6080.0/3.0))-1900.0/3.0))-12)*val[10]+var_inter[0]*var_inter[1]*(144+var_inter[1]*(var_inter[1]*(1536-768*var_inter[1])-912)+var_inter[0]*(var_inter[0]*(1536-768*var_inter[0])+var_inter[1]*(5776+var_inter[0]*(4864*var_inter[0]-9728)+var_inter[1]*(4864*var_inter[1]+var_inter[0]*(16384+var_inter[0]*(4096*var_inter[1]-8192)-8192*var_inter[1])-9728))-912))*val[12]+var_inter[1]*var_inter[0]*(12+var_inter[1]*(var_inter[1]*(128-64*var_inter[1])-76)+var_inter[0]*(var_inter[0]*(192-128*var_inter[0])+var_inter[1]*(1672.0/3.0+var_inter[1]*(1408.0/3.0*var_inter[1]-2816.0/3.0)+var_inter[0]*(2432.0/3.0*var_inter[0]+var_inter[1]*(2048+var_inter[1]*(2048.0/3.0*var_inter[0]-1024)-4096.0/3.0*var_inter[0])-1216))-88))*val[14]+var_inter[0]*var_inter[1]*(256.0/3.0+var_inter[1]*(var_inter[1]*(3584.0/3.0-2048.0/3.0*var_inter[1])-1792.0/3.0)+var_inter[0]*(var_inter[0]*(512-2048.0/9.0*var_inter[0])+var_inter[1]*(23296.0/9.0+var_inter[0]*(14336.0/9.0*var_inter[0]-3584)+var_inter[1]*(26624.0/9.0*var_inter[1]+var_inter[0]*(7168+var_inter[1]*(16384.0/9.0*var_inter[0]-4096)-28672.0/9.0*var_inter[0])-46592.0/9.0))-3328.0/9.0))*val[16]+var_inter[0]*var_inter[1]*(256.0/9.0+var_inter[0]*(var_inter[0]*(3584.0/9.0-2048.0/9.0*var_inter[0])-1792.0/9.0)+var_inter[1]*(var_inter[1]*(3584.0/9.0-2048.0/9.0*var_inter[1])+var_inter[0]*(12544.0/9.0+var_inter[1]*(14336.0/9.0*var_inter[1]-25088.0/9.0)+var_inter[0]*(14336.0/9.0*var_inter[0]+var_inter[1]*(50176.0/9.0+16384.0/9.0*var_inter[0]*var_inter[1]-28672.0/9.0*(var_inter[0]+var_inter[1]))-25088.0/9.0))-1792.0/9.0))*val[18]+var_inter[1]*var_inter[0]*(var_inter[0]*(352.0/9.0+var_inter[0]*(512.0/9.0*var_inter[0]-256.0/3.0))+var_inter[1]*(112.0/3.0+var_inter[0]*(var_inter[1]*(4928.0/9.0-2816.0/9.0*var_inter[1])+var_inter[0]*(1792.0/3.0+var_inter[1]*(7168.0/9.0*var_inter[0]+var_inter[1]*(2048.0/3.0-4096.0/9.0*var_inter[0])-3584.0/3.0)-3584.0/9.0*var_inter[0])-2464.0/9.0)+var_inter[1]*(128.0/3.0*var_inter[1]-224.0/3.0))-16.0/3.0)*val[19]+var_inter[1]*(var_inter[0]*(25.0/3.0+var_inter[1]*(var_inter[1]*(400.0/3.0-800.0/9.0*var_inter[1])-550.0/9.0)+var_inter[0]*(var_inter[0]*(80.0/3.0-32.0/3.0*var_inter[0])+var_inter[1]*(1540.0/9.0+var_inter[1]*(2240.0/9.0*var_inter[1]-1120.0/3.0)+var_inter[0]*(704.0/9.0*var_inter[0]+var_inter[1]*(1280.0/3.0+var_inter[0]*(1024.0/9.0*var_inter[1]-512.0/3.0)-2560.0/9.0*var_inter[1])-1760.0/9.0))-70.0/3.0))+var_inter[1]*(22.0/3.0+var_inter[1]*(32.0/3.0*var_inter[1]-16))-1)*val[20]+var_inter[0]*var_inter[1]*(12+var_inter[0]*(var_inter[0]*(128-64*var_inter[0])-76)+var_inter[1]*(var_inter[1]*(192-128*var_inter[1])+var_inter[0]*(1672.0/3.0+var_inter[0]*(1408.0/3.0*var_inter[0]-2816.0/3.0)+var_inter[1]*(2432.0/3.0*var_inter[1]+var_inter[0]*(2048+var_inter[1]*(2048.0/3.0*var_inter[0]-4096.0/3.0)-1024*var_inter[0])-1216))-88))*val[22]+var_inter[0]*var_inter[1]*(var_inter[0]*(112.0/3.0+var_inter[0]*(128.0/3.0*var_inter[0]-224.0/3.0))+var_inter[1]*(352.0/9.0+var_inter[1]*(512.0/9.0*var_inter[1]-256.0/3.0)+var_inter[0]*(var_inter[0]*(4928.0/9.0+var_inter[1]*(7168.0/9.0*var_inter[1]+var_inter[0]*(2048.0/3.0-4096.0/9.0*var_inter[1])-3584.0/3.0)-2816.0/9.0*var_inter[0])+var_inter[1]*(1792.0/3.0-3584.0/9.0*var_inter[1])-2464.0/9.0))-16.0/3.0)*val[23]
    else if interpolation_base == "hierarchical"
        return var_inter[0]*var_inter[1]*val[24]+var_inter[0]*var_inter[1]*(var_inter[0]*(76+var_inter[0]*(64*var_inter[0]-128))-12)*val[22]+var_inter[1]*(1-var_inter[0])*val[20]+var_inter[0]*var_inter[1]*(16.0/3.0+var_inter[1]*(var_inter[1]*(224.0/3.0-128.0/3.0*var_inter[1])-112.0/3.0))*val[19]+var_inter[0]*var_inter[1]*(var_inter[1]*(448+var_inter[1]*(512*var_inter[1]-896))+var_inter[0]*(1216.0/3.0+var_inter[0]*(1024.0/3.0*var_inter[0]-2048.0/3.0)+var_inter[1]*(var_inter[1]*(17024.0/3.0-9728.0/3.0*var_inter[1])+var_inter[0]*(14336.0/3.0+var_inter[1]*(16384.0/3.0*var_inter[1]+var_inter[0]*(14336.0/3.0-8192.0/3.0*var_inter[1])-28672.0/3.0)-7168.0/3.0*var_inter[0])-8512.0/3.0))-64)*val[17]+var_inter[1]*(var_inter[1]*(var_inter[1]*(128.0/3.0*var_inter[1]*(var_inter[0]-1)+224.0/3.0*(1-var_inter[0]))-112.0/3.0*(1-var_inter[0]))+16.0/3.0*(1-var_inter[0]))*val[15]+var_inter[1]*var_inter[0]*(256.0/3.0+var_inter[1]*(var_inter[1]*(512-2048.0/9.0*var_inter[1])+var_inter[0]*(23296.0/9.0+var_inter[1]*(14336.0/9.0*var_inter[1]-3584)+var_inter[0]*(26624.0/9.0*var_inter[0]+var_inter[1]*(7168+var_inter[0]*(16384.0/9.0*var_inter[1]-4096)-28672.0/9.0*var_inter[1])-46592.0/9.0))-3328.0/9.0)+var_inter[0]*(var_inter[0]*(3584.0/3.0-2048.0/3.0*var_inter[0])-1792.0/3.0))*val[8]+var_inter[1]*(16*(1-var_inter[0])+var_inter[1]*(var_inter[1]*(128.0/3.0*var_inter[1]*(var_inter[0]-1)+96*(1-var_inter[0]))-208.0/3.0*(1-var_inter[0])))*val[5]+(1+var_inter[0]*(var_inter[1]-1)-var_inter[1])*val[0]+var_inter[0]*(1-var_inter[1])*(16+var_inter[0]*(var_inter[0]*(96-128.0/3.0*var_inter[0])-208.0/3.0))*val[1]+var_inter[0]*(var_inter[0]*(76*(1-var_inter[1])+var_inter[0]*(-64*var_inter[0]*(var_inter[1]-1)-128*(1-var_inter[1])))-12*(1-var_inter[1]))*val[2]+var_inter[0]*(1-var_inter[1])*(16.0/3.0+var_inter[0]*(var_inter[0]*(224.0/3.0-128.0/3.0*var_inter[0])-112.0/3.0))*val[3]+var_inter[0]*(1-var_inter[1])*val[4]+var_inter[1]*var_inter[0]*(256+var_inter[1]*(var_inter[1]*(1536-2048.0/3.0*var_inter[1])-3328.0/3.0)+var_inter[0]*(var_inter[1]*(43264.0/9.0+var_inter[1]*(26624.0/9.0*var_inter[1]-6656)+var_inter[0]*(26624.0/9.0*var_inter[0]+var_inter[1]*(9216+var_inter[0]*(16384.0/9.0*var_inter[1]-4096)-4096*var_inter[1])-6656))+var_inter[0]*(1536-2048.0/3.0*var_inter[0])-3328.0/3.0))*val[6]+var_inter[0]*var_inter[1]*(var_inter[1]*(832+var_inter[1]*(512*var_inter[1]-1152))+var_inter[0]*(1216+var_inter[0]*(1024*var_inter[0]-2048)+var_inter[1]*(var_inter[1]*(7296-9728.0/3.0*var_inter[1])+var_inter[0]*(26624.0/3.0+var_inter[1]*(16384.0/3.0*var_inter[1]+var_inter[0]*(6144-8192.0/3.0*var_inter[1])-12288)-13312.0/3.0*var_inter[0])-15808.0/3.0))-192)*val[7]+val[9]*var_inter[0]*var_inter[1]*(16+var_inter[1]*(var_inter[1]*(96-128.0/3.0*var_inter[1])-208.0/3.0))+var_inter[1]*(var_inter[1]*(76*(1-var_inter[0])+var_inter[1]*(-64*var_inter[1]*(var_inter[0]-1)-128*(1-var_inter[0])))-12*(1-var_inter[0]))*val[10]+var_inter[0]*var_inter[1]*(var_inter[1]*(1216+var_inter[1]*(1024*var_inter[1]-2048))+var_inter[0]*(832+var_inter[0]*(512*var_inter[0]-1152)+var_inter[1]*(var_inter[1]*(26624.0/3.0-13312.0/3.0*var_inter[1])+var_inter[0]*(7296+var_inter[1]*(16384.0/3.0*var_inter[0]+var_inter[1]*(6144-8192.0/3.0*var_inter[0])-12288)-9728.0/3.0*var_inter[0])-15808.0/3.0))-192)*val[11]+var_inter[0]*var_inter[1]*(144+var_inter[1]*(var_inter[1]*(1536-768*var_inter[1])-912)+var_inter[0]*(var_inter[0]*(1536-768*var_inter[0])+var_inter[1]*(5776+var_inter[0]*(4864*var_inter[0]-9728)+var_inter[1]*(4864*var_inter[1]+var_inter[0]*(16384+4096*var_inter[0]*var_inter[1]-8192*(var_inter[0]+var_inter[1]))-9728))-912))*val[12]+var_inter[1]*var_inter[0]*(var_inter[0]*(448+var_inter[0]*(512*var_inter[0]-896))+var_inter[1]*(1216.0/3.0+var_inter[1]*(1024.0/3.0*var_inter[1]-2048.0/3.0)+var_inter[0]*(var_inter[1]*(14336.0/3.0-7168.0/3.0*var_inter[1])+var_inter[0]*(17024.0/3.0+var_inter[1]*(var_inter[0]*(16384.0/3.0-8192.0/3.0*var_inter[1])+14336.0/3.0*var_inter[1]-28672.0/3.0)-9728.0/3.0*var_inter[0])-8512.0/3.0))-64)*val[13]+var_inter[0]*var_inter[1]*(var_inter[1]*(76+var_inter[1]*(64*var_inter[1]-128))-12)*val[14]+var_inter[0]*var_inter[1]*(256.0/3.0+var_inter[0]*(var_inter[0]*(512-2048.0/9.0*var_inter[0])-3328.0/9.0)+var_inter[1]*(var_inter[1]*(3584.0/3.0-2048.0/3.0*var_inter[1])+var_inter[0]*(23296.0/9.0+var_inter[0]*(14336.0/9.0*var_inter[0]-3584)+var_inter[1]*(26624.0/9.0*var_inter[1]+var_inter[0]*(7168+var_inter[1]*(16384.0/9.0*var_inter[0]-4096)-28672.0/9.0*var_inter[0])-46592.0/9.0))-1792.0/3.0))*val[16]+var_inter[0]*var_inter[1]*(256.0/9.0+var_inter[0]*(var_inter[0]*(3584.0/9.0-2048.0/9.0*var_inter[0])+var_inter[1]*(12544.0/9.0+var_inter[1]*(14336.0/9.0*var_inter[1]+var_inter[0]*(50176.0/9.0+16384.0/9.0*var_inter[0]*var_inter[1]-28672.0/9.0*(var_inter[0]+var_inter[1]))-25088.0/9.0)+var_inter[0]*(14336.0/9.0*var_inter[0]-25088.0/9.0))-1792.0/9.0)+var_inter[1]*(var_inter[1]*(3584.0/9.0-2048.0/9.0*var_inter[1])-1792.0/9.0))*val[18]+var_inter[0]*var_inter[1]*(16+var_inter[0]*(var_inter[0]*(96-128.0/3.0*var_inter[0])-208.0/3.0))*val[21]+var_inter[1]*var_inter[0]*(16.0/3.0+var_inter[0]*(var_inter[0]*(224.0/3.0-128.0/3.0*var_inter[0])-112.0/3.0))*val[23]

#
def interpolation_deg( var_inter, val, interpolation_base, deg ) when deg == 5
    if interpolation_base == "lagrange"
        return val[35]*var_inter[0]*var_inter[1]*(1+var_inter[0]*(var_inter[0]*(875.0/24.0+var_inter[0]*(625.0/24.0*var_inter[0]-625.0/12.0))+var_inter[1]*(15625.0/144.0+var_inter[1]*(var_inter[1]*(78125.0/144.0-78125.0/288.0*var_inter[1])-109375.0/288.0)+var_inter[0]*(var_inter[0]*(78125.0/144.0-78125.0/288.0*var_inter[0])+var_inter[1]*(765625.0/576.0+var_inter[0]*(546875.0/576.0*var_inter[0]-546875.0/288.0)+var_inter[1]*(546875.0/576.0*var_inter[1]+var_inter[0]*(390625.0/144.0+390625.0/576.0*var_inter[0]*var_inter[1]-390625.0/288.0*(var_inter[0]+var_inter[1]))-546875.0/288.0))-109375.0/288.0))-125.0/12.0)+var_inter[1]*(var_inter[1]*(875.0/24.0+var_inter[1]*(625.0/24.0*var_inter[1]-625.0/12.0))-125.0/12.0))+var_inter[1]*var_inter[0]*(50.0/3.0+var_inter[0]*(var_inter[0]*(6125.0/12.0+var_inter[0]*(3125.0/12.0*var_inter[0]-625))+var_inter[1]*(40625.0/24.0+var_inter[0]*(var_inter[0]*(78125.0/12.0-390625.0/144.0*var_inter[0])+var_inter[1]*(5359375.0/288.0+var_inter[1]*(3828125.0/288.0*var_inter[1]-3828125.0/144.0)+var_inter[0]*(2734375.0/288.0*var_inter[0]+var_inter[1]*(390625.0/12.0+var_inter[0]*(1953125.0/288.0*var_inter[1]-1953125.0/144.0)-390625.0/24.0*var_inter[1])-546875.0/24.0))-765625.0/144.0)+var_inter[1]*(var_inter[1]*(203125.0/24.0-203125.0/48.0*var_inter[1])-284375.0/48.0))-325.0/2.0)+var_inter[1]*(var_inter[1]*(21875.0/36.0+var_inter[1]*(15625.0/36.0*var_inter[1]-15625.0/18.0))-3125.0/18.0))*val[33]+val[30]*var_inter[1]*(1+var_inter[0]*(var_inter[1]*(17125.0/144.0+var_inter[1]*(var_inter[1]*(85625.0/144.0-85625.0/288.0*var_inter[1])-119875.0/288.0))+var_inter[0]*(375.0/8.0+var_inter[0]*(var_inter[0]*(625.0/8.0-625.0/24.0*var_inter[0])-2125.0/24.0)+var_inter[1]*(var_inter[0]*(265625.0/288.0+var_inter[0]*(78125.0/288.0*var_inter[0]-78125.0/96.0))+var_inter[1]*(109375.0/64.0+var_inter[1]*(78125.0/64.0*var_inter[1]-78125.0/32.0)+var_inter[0]*(var_inter[0]*(546875.0/192.0-546875.0/576.0*var_inter[0])+var_inter[1]*(1328125.0/288.0+var_inter[0]*(390625.0/192.0*var_inter[1]+var_inter[0]*(390625.0/288.0-390625.0/576.0*var_inter[1])-390625.0/96.0)-1328125.0/576.0*var_inter[1])-1859375.0/576.0))-15625.0/32.0))-137.0/12.0)+var_inter[1]*(var_inter[1]*(875.0/24.0+var_inter[1]*(625.0/24.0*var_inter[1]-625.0/12.0))-125.0/12.0))+var_inter[0]*var_inter[1]*(var_inter[1]*(1525.0/24.0+var_inter[1]*(var_inter[1]*(6875.0/24.0-3125.0/24.0*var_inter[1])-5125.0/24.0))+var_inter[0]*(3125.0/48.0+var_inter[0]*(var_inter[0]*(15625.0/48.0-15625.0/96.0*var_inter[0])-21875.0/96.0)+var_inter[1]*(var_inter[1]*(640625.0/288.0+var_inter[1]*(390625.0/288.0*var_inter[1]-859375.0/288.0)+var_inter[0]*(var_inter[0]*(3203125.0/288.0-3203125.0/576.0*var_inter[0])+var_inter[1]*(6015625.0/576.0+var_inter[0]*(4296875.0/576.0*var_inter[0]+var_inter[1]*(1953125.0/288.0-1953125.0/576.0*var_inter[0])-4296875.0/288.0)-2734375.0/576.0*var_inter[1])-4484375.0/576.0))+var_inter[0]*(1334375.0/576.0+var_inter[0]*(953125.0/576.0*var_inter[0]-953125.0/288.0))-190625.0/288.0))-25.0/4.0)*val[29]+var_inter[0]*var_inter[1]*(var_inter[1]*(38125.0/36.0+var_inter[0]*(var_inter[0]*(9340625.0/288.0+var_inter[0]*(4765625.0/288.0*var_inter[0]-953125.0/24.0))+var_inter[1]*(1665625.0/48.0+var_inter[1]*(1015625.0/48.0*var_inter[1]-2234375.0/48.0)+var_inter[0]*(var_inter[0]*(3203125.0/24.0-16015625.0/288.0*var_inter[0])+var_inter[1]*(42109375.0/288.0+var_inter[0]*(21484375.0/288.0*var_inter[0]+var_inter[1]*(1953125.0/24.0-9765625.0/288.0*var_inter[0])-4296875.0/24.0)-19140625.0/288.0*var_inter[1])-31390625.0/288.0))-495625.0/48.0)+var_inter[1]*(var_inter[1]*(171875.0/36.0-78125.0/36.0*var_inter[1])-128125.0/36.0))+var_inter[0]*(8125.0/8.0+var_inter[0]*(var_inter[0]*(15625.0/4.0-78125.0/48.0*var_inter[0])-153125.0/48.0))-625.0/6.0)*val[27]+var_inter[0]*var_inter[1]*(625.0/4.0+var_inter[0]*(var_inter[0]*(184375.0/48.0+var_inter[0]*(78125.0/48.0*var_inter[0]-203125.0/48.0))-66875.0/48.0)+var_inter[1]*(var_inter[0]*(4079375.0/288.0+var_inter[0]*(var_inter[0]*(12390625.0/288.0-4765625.0/288.0*var_inter[0])-11246875.0/288.0)+var_inter[1]*(var_inter[1]*(18390625.0/288.0-8359375.0/288.0*var_inter[1])+var_inter[0]*(37796875.0/288.0+var_inter[1]*(23046875.0/288.0*var_inter[1]-50703125.0/288.0)+var_inter[0]*(16015625.0/288.0*var_inter[0]+var_inter[1]*(55859375.0/288.0+var_inter[0]*(9765625.0/288.0*var_inter[1]-21484375.0/288.0)-25390625.0/288.0*var_inter[1])-41640625.0/288.0))-13709375.0/288.0))+var_inter[1]*(128125.0/24.0+var_inter[1]*(78125.0/24.0*var_inter[1]-171875.0/24.0))-38125.0/24.0))*val[26]+var_inter[1]*var_inter[0]*(var_inter[1]*(38125.0/24.0+var_inter[1]*(var_inter[1]*(171875.0/24.0-78125.0/24.0*var_inter[1])-128125.0/24.0)+var_inter[0]*(var_inter[0]*(13534375.0/576.0+var_inter[0]*(4765625.0/576.0*var_inter[0]-6671875.0/288.0))+var_inter[1]*(9865625.0/288.0+var_inter[1]*(6015625.0/288.0*var_inter[1]-13234375.0/288.0)+var_inter[0]*(var_inter[0]*(22421875.0/288.0-16015625.0/576.0*var_inter[0])+var_inter[1]*(61015625.0/576.0+var_inter[0]*(13671875.0/288.0*var_inter[1]+var_inter[0]*(21484375.0/576.0-9765625.0/576.0*var_inter[1])-30078125.0/288.0)-27734375.0/576.0*var_inter[1])-45484375.0/576.0))-2935625.0/288.0))+var_inter[0]*(48125.0/48.0+var_inter[0]*(var_inter[0]*(109375.0/48.0-78125.0/96.0*var_inter[0])-221875.0/96.0))-625.0/4.0)*val[25]+var_inter[1]*(var_inter[1]*(1525.0/24.0+var_inter[1]*(var_inter[1]*(6875.0/24.0-3125.0/24.0*var_inter[1])-5125.0/24.0))+var_inter[0]*(3425.0/48.0+var_inter[0]*(var_inter[0]*(53125.0/96.0+var_inter[0]*(15625.0/96.0*var_inter[0]-15625.0/32.0))+var_inter[1]*(190625.0/64.0+var_inter[0]*(var_inter[0]*(953125.0/192.0-953125.0/576.0*var_inter[0])-3240625.0/576.0)+var_inter[1]*(var_inter[1]*(859375.0/64.0-390625.0/64.0*var_inter[1])+var_inter[0]*(10890625.0/576.0+var_inter[1]*(6640625.0/576.0*var_inter[1]-14609375.0/576.0)+var_inter[0]*(3203125.0/576.0*var_inter[0]+var_inter[1]*(4296875.0/192.0+var_inter[0]*(1953125.0/576.0*var_inter[1]-4296875.0/576.0)-1953125.0/192.0*var_inter[1])-3203125.0/192.0))-640625.0/64.0))-9375.0/32.0)+var_inter[1]*(var_inter[1]*(702125.0/288.0+var_inter[1]*(428125.0/288.0*var_inter[1]-941875.0/288.0))-208925.0/288.0))-25.0/4.0)*val[24]+var_inter[0]*var_inter[1]*(1250.0/3.0+var_inter[1]*(var_inter[1]*(153125.0/12.0+var_inter[1]*(78125.0/12.0*var_inter[1]-15625))-8125.0/2.0)+var_inter[0]*(var_inter[1]*(625625.0/24.0+var_inter[1]*(var_inter[1]*(1203125.0/12.0-6015625.0/144.0*var_inter[1])+var_inter[0]*(54359375.0/288.0+var_inter[0]*(19140625.0/288.0*var_inter[0]-26796875.0/144.0)+var_inter[1]*(27734375.0/288.0*var_inter[1]+var_inter[0]*(2734375.0/12.0+var_inter[1]*(9765625.0/288.0*var_inter[0]-13671875.0/144.0)-1953125.0/24.0*var_inter[0])-5546875.0/24.0))-11790625.0/144.0)+var_inter[0]*(var_inter[0]*(1421875.0/24.0-1015625.0/48.0*var_inter[0])-2884375.0/48.0))+var_inter[0]*(221875.0/36.0+var_inter[0]*(78125.0/36.0*var_inter[0]-109375.0/18.0))-48125.0/18.0))*val[19]+val[18]*var_inter[1]*(50.0/3.0+var_inter[0]*(var_inter[0]*(3125.0/4.0+var_inter[0]*(var_inter[0]*(15625.0/12.0-15625.0/36.0*var_inter[0])-53125.0/36.0))+var_inter[1]*(44525.0/24.0+var_inter[0]*(var_inter[0]*(690625.0/48.0+var_inter[0]*(203125.0/48.0*var_inter[0]-203125.0/16.0))+var_inter[1]*(765625.0/32.0+var_inter[1]*(390625.0/32.0*var_inter[1]-234375.0/8.0)+var_inter[0]*(var_inter[1]*(1328125.0/24.0-6640625.0/288.0*var_inter[1])+var_inter[0]*(3828125.0/96.0+var_inter[1]*(390625.0/24.0*var_inter[0]+var_inter[1]*(1953125.0/96.0-1953125.0/288.0*var_inter[0])-390625.0/8.0)-3828125.0/288.0*var_inter[0])-13015625.0/288.0))-121875.0/16.0)+var_inter[1]*(var_inter[1]*(85625.0/12.0-428125.0/144.0*var_inter[1])-839125.0/144.0))-3425.0/18.0)+var_inter[1]*(var_inter[1]*(6125.0/12.0+var_inter[1]*(3125.0/12.0*var_inter[1]-625))-325.0/2.0))+val[15]*var_inter[0]*var_inter[1]*(var_inter[1]*(66875.0/18.0+var_inter[1]*(var_inter[1]*(203125.0/18.0-78125.0/18.0*var_inter[1])-184375.0/18.0))+var_inter[0]*(8125.0/2.0+var_inter[0]*(var_inter[0]*(15625-78125.0/12.0*var_inter[0])-153125.0/12.0)+var_inter[1]*(var_inter[1]*(2396875.0/24.0+var_inter[1]*(1015625.0/24.0*var_inter[1]-2640625.0/24.0))+var_inter[0]*(16384375.0/144.0+var_inter[0]*(8359375.0/144.0*var_inter[0]-1671875.0/12.0)+var_inter[1]*(var_inter[0]*(4609375.0/12.0-23046875.0/144.0*var_inter[0])+var_inter[1]*(49765625.0/144.0+var_inter[0]*(1953125.0/12.0*var_inter[1]+var_inter[0]*(25390625.0/144.0-9765625.0/144.0*var_inter[1])-5078125.0/12.0)-19140625.0/144.0*var_inter[1])-45171875.0/144.0))-869375.0/24.0))-1250.0/3.0)+val[14]*var_inter[0]*var_inter[1]*(625+var_inter[1]*(var_inter[0]*(7155625.0/144.0+var_inter[0]*(var_inter[0]*(21734375.0/144.0-8359375.0/144.0*var_inter[0])+var_inter[1]*(54390625.0/144.0+var_inter[0]*(23046875.0/144.0*var_inter[0]+var_inter[1]*(66015625.0/144.0+9765625.0/144.0*var_inter[0]*var_inter[1]-25390625.0/144.0*(var_inter[0]+var_inter[1]))-59921875.0/144.0)+var_inter[1]*(23046875.0/144.0*var_inter[1]-59921875.0/144.0))-19728125.0/144.0)+var_inter[1]*(var_inter[1]*(21734375.0/144.0-8359375.0/144.0*var_inter[1])-19728125.0/144.0))+var_inter[1]*(184375.0/12.0+var_inter[1]*(78125.0/12.0*var_inter[1]-203125.0/12.0))-66875.0/12.0)+var_inter[0]*(var_inter[0]*(184375.0/12.0+var_inter[0]*(78125.0/12.0*var_inter[0]-203125.0/12.0))-66875.0/12.0))+val[11]*var_inter[1]*var_inter[0]*(25+var_inter[1]*(var_inter[1]*(8875.0/24.0+var_inter[1]*(3125.0/24.0*var_inter[1]-4375.0/12.0))-1925.0/12.0)+var_inter[0]*(var_inter[0]*(21875.0/24.0+var_inter[0]*(15625.0/24.0*var_inter[0]-15625.0/12.0))+var_inter[1]*(240625.0/144.0+var_inter[1]*(var_inter[1]*(546875.0/144.0-390625.0/288.0*var_inter[1])+var_inter[0]*(7765625.0/576.0+var_inter[1]*(2734375.0/576.0*var_inter[1]-3828125.0/288.0)+var_inter[0]*(5546875.0/576.0*var_inter[0]+var_inter[1]*(2734375.0/144.0+var_inter[1]*(1953125.0/576.0*var_inter[0]-1953125.0/288.0)-2734375.0/288.0*var_inter[0])-5546875.0/288.0))-1109375.0/288.0)+var_inter[0]*(var_inter[0]*(1203125.0/144.0-1203125.0/288.0*var_inter[0])-1684375.0/288.0))-3125.0/12.0))+val[9]*var_inter[0]*var_inter[1]*(1250.0/3.0+var_inter[0]*(var_inter[0]*(153125.0/12.0+var_inter[0]*(78125.0/12.0*var_inter[0]-15625))+var_inter[1]*(625625.0/24.0+var_inter[1]*(var_inter[1]*(1421875.0/24.0-1015625.0/48.0*var_inter[1])-2884375.0/48.0)+var_inter[0]*(var_inter[0]*(1203125.0/12.0-6015625.0/144.0*var_inter[0])+var_inter[1]*(54359375.0/288.0+var_inter[0]*(27734375.0/288.0*var_inter[0]-5546875.0/24.0)+var_inter[1]*(19140625.0/288.0*var_inter[1]+var_inter[0]*(2734375.0/12.0+var_inter[1]*(9765625.0/288.0*var_inter[0]-1953125.0/24.0)-13671875.0/144.0*var_inter[0])-26796875.0/144.0))-11790625.0/144.0))-8125.0/2.0)+var_inter[1]*(var_inter[1]*(221875.0/36.0+var_inter[1]*(78125.0/36.0*var_inter[1]-109375.0/18.0))-48125.0/18.0))+var_inter[0]*var_inter[1]*(var_inter[1]*(48125.0/12.0+var_inter[0]*(var_inter[0]*(14196875.0/144.0+var_inter[0]*(6015625.0/144.0*var_inter[0]-15640625.0/144.0))+var_inter[1]*(23740625.0/288.0+var_inter[1]*(8359375.0/288.0*var_inter[1]-11703125.0/144.0)+var_inter[0]*(var_inter[0]*(72109375.0/288.0-27734375.0/288.0*var_inter[0])+var_inter[1]*(32265625.0/144.0+var_inter[0]*(25390625.0/288.0*var_inter[1]+var_inter[0]*(13671875.0/144.0-9765625.0/288.0*var_inter[1])-35546875.0/144.0)-23046875.0/288.0*var_inter[1])-65453125.0/288.0))-5149375.0/144.0)+var_inter[1]*(var_inter[1]*(109375.0/12.0-78125.0/24.0*var_inter[1])-221875.0/24.0))+var_inter[0]*(66875.0/12.0+var_inter[0]*(var_inter[0]*(203125.0/12.0-78125.0/12.0*var_inter[0])-184375.0/12.0))-625)*val[8]+val[6]*var_inter[1]*(25+var_inter[0]*(var_inter[1]*(263725.0/144.0+var_inter[1]*(var_inter[1]*(599375.0/144.0-428125.0/288.0*var_inter[1])-1215875.0/288.0)+var_inter[0]*(var_inter[0]*(4090625.0/288.0+var_inter[0]*(1203125.0/288.0*var_inter[0]-1203125.0/96.0)+var_inter[1]*(var_inter[0]*(5546875.0/192.0-5546875.0/576.0*var_inter[0])+var_inter[1]*(9296875.0/288.0+var_inter[0]*(2734375.0/288.0*var_inter[0]+var_inter[1]*(1953125.0/192.0-1953125.0/576.0*var_inter[0])-2734375.0/96.0)-6640625.0/576.0*var_inter[1])-18859375.0/576.0))+var_inter[1]*(1109375.0/64.0+var_inter[1]*(390625.0/64.0*var_inter[1]-546875.0/32.0))-240625.0/32.0))+var_inter[0]*(9375.0/8.0+var_inter[0]*(var_inter[0]*(15625.0/8.0-15625.0/24.0*var_inter[0])-53125.0/24.0))-3425.0/12.0)+var_inter[1]*(var_inter[1]*(8875.0/24.0+var_inter[1]*(3125.0/24.0*var_inter[1]-4375.0/12.0))-1925.0/12.0))+var_inter[0]*(var_inter[0]*(1525.0/24.0+var_inter[0]*(var_inter[0]*(6875.0/24.0-3125.0/24.0*var_inter[0])-5125.0/24.0))+var_inter[1]*(3425.0/48.0+var_inter[0]*(var_inter[0]*(702125.0/288.0+var_inter[0]*(428125.0/288.0*var_inter[0]-941875.0/288.0))-208925.0/288.0)+var_inter[1]*(var_inter[0]*(190625.0/64.0+var_inter[0]*(var_inter[0]*(859375.0/64.0-390625.0/64.0*var_inter[0])+var_inter[1]*(10890625.0/576.0+var_inter[1]*(3203125.0/576.0*var_inter[1]+var_inter[0]*(4296875.0/192.0+var_inter[1]*(1953125.0/576.0*var_inter[0]-4296875.0/576.0)-1953125.0/192.0*var_inter[0])-3203125.0/192.0)+var_inter[0]*(6640625.0/576.0*var_inter[0]-14609375.0/576.0))-640625.0/64.0)+var_inter[1]*(var_inter[1]*(953125.0/192.0-953125.0/576.0*var_inter[1])-3240625.0/576.0))+var_inter[1]*(53125.0/96.0+var_inter[1]*(15625.0/96.0*var_inter[1]-15625.0/32.0))-9375.0/32.0))-25.0/4.0)*val[4]+var_inter[0]*(var_inter[0]*(2675.0/12.0+var_inter[0]*(var_inter[0]*(8125.0/12.0-3125.0/12.0*var_inter[0])-7375.0/12.0))+var_inter[1]*(3425.0/12.0+var_inter[0]*(var_inter[0]*(1010375.0/144.0+var_inter[0]*(428125.0/144.0*var_inter[0]-1113125.0/144.0))+var_inter[1]*(334375.0/32.0+var_inter[0]*(var_inter[0]*(1015625.0/32.0-390625.0/32.0*var_inter[0])-921875.0/32.0)+var_inter[1]*(var_inter[1]*(1671875.0/96.0-1671875.0/288.0*var_inter[1])+var_inter[0]*(15671875.0/288.0+var_inter[1]*(4609375.0/288.0*var_inter[1]+var_inter[0]*(5078125.0/96.0+var_inter[0]*(1953125.0/288.0*var_inter[1]-1953125.0/96.0)-5078125.0/288.0*var_inter[1])-4609375.0/96.0)+var_inter[0]*(6640625.0/288.0*var_inter[0]-17265625.0/288.0))-5684375.0/288.0))-366475.0/144.0)+var_inter[1]*(var_inter[1]*(53125.0/24.0+var_inter[1]*(15625.0/24.0*var_inter[1]-15625.0/8.0))-9375.0/8.0))-25)*val[2]+val[0]*(1+var_inter[0]*(var_inter[1]*(18769.0/144.0+var_inter[1]*(var_inter[1]*(291125.0/288.0+var_inter[1]*(85625.0/288.0*var_inter[1]-85625.0/96.0))-17125.0/32.0)+var_inter[0]*(var_inter[0]*(291125.0/288.0+var_inter[0]*(85625.0/288.0*var_inter[0]-85625.0/96.0))+var_inter[1]*(140625.0/64.0+var_inter[0]*(var_inter[0]*(234375.0/64.0-78125.0/64.0*var_inter[0])+var_inter[1]*(4515625.0/576.0+var_inter[1]*(1328125.0/576.0*var_inter[1]+var_inter[0]*(390625.0/64.0+390625.0/576.0*var_inter[0]*var_inter[1]-390625.0/192.0*(var_inter[0]+var_inter[1]))-1328125.0/192.0)+var_inter[0]*(1328125.0/576.0*var_inter[0]-1328125.0/192.0))-265625.0/64.0)+var_inter[1]*(var_inter[1]*(234375.0/64.0-78125.0/64.0*var_inter[1])-265625.0/64.0))-17125.0/32.0))+var_inter[0]*(375.0/8.0+var_inter[0]*(var_inter[0]*(625.0/8.0-625.0/24.0*var_inter[0])-2125.0/24.0))-137.0/12.0)+var_inter[1]*(var_inter[1]*(375.0/8.0+var_inter[1]*(var_inter[1]*(625.0/8.0-625.0/24.0*var_inter[1])-2125.0/24.0))-137.0/12.0))+var_inter[0]*(25+var_inter[0]*(var_inter[0]*(8875.0/24.0+var_inter[0]*(3125.0/24.0*var_inter[0]-4375.0/12.0))-1925.0/12.0)+var_inter[1]*(var_inter[0]*(263725.0/144.0+var_inter[0]*(var_inter[0]*(599375.0/144.0-428125.0/288.0*var_inter[0])-1215875.0/288.0))+var_inter[1]*(9375.0/8.0+var_inter[1]*(var_inter[1]*(15625.0/8.0-15625.0/24.0*var_inter[1])-53125.0/24.0)+var_inter[0]*(var_inter[1]*(4090625.0/288.0+var_inter[1]*(1203125.0/288.0*var_inter[1]-1203125.0/96.0))+var_inter[0]*(1109375.0/64.0+var_inter[0]*(390625.0/64.0*var_inter[0]-546875.0/32.0)+var_inter[1]*(var_inter[0]*(9296875.0/288.0-6640625.0/576.0*var_inter[0])+var_inter[1]*(5546875.0/192.0+var_inter[0]*(var_inter[0]*(1953125.0/192.0-1953125.0/576.0*var_inter[1])+2734375.0/288.0*var_inter[1]-2734375.0/96.0)-5546875.0/576.0*var_inter[1])-18859375.0/576.0))-240625.0/32.0))-3425.0/12.0))*val[1]+val[3]*var_inter[0]*(50.0/3.0+var_inter[0]*(var_inter[0]*(6125.0/12.0+var_inter[0]*(3125.0/12.0*var_inter[0]-625))-325.0/2.0)+var_inter[1]*(var_inter[1]*(3125.0/4.0+var_inter[1]*(var_inter[1]*(15625.0/12.0-15625.0/36.0*var_inter[1])-53125.0/36.0))+var_inter[0]*(44525.0/24.0+var_inter[0]*(var_inter[0]*(85625.0/12.0-428125.0/144.0*var_inter[0])-839125.0/144.0)+var_inter[1]*(var_inter[0]*(765625.0/32.0+var_inter[0]*(390625.0/32.0*var_inter[0]-234375.0/8.0)+var_inter[1]*(var_inter[1]*(3828125.0/96.0-3828125.0/288.0*var_inter[1])+var_inter[0]*(1328125.0/24.0+var_inter[1]*(390625.0/24.0*var_inter[1]+var_inter[0]*(1953125.0/96.0-1953125.0/288.0*var_inter[1])-390625.0/8.0)-6640625.0/288.0*var_inter[0])-13015625.0/288.0))+var_inter[1]*(690625.0/48.0+var_inter[1]*(203125.0/48.0*var_inter[1]-203125.0/16.0))-121875.0/16.0))-3425.0/18.0))+val[5]*var_inter[0]*(1+var_inter[1]*(var_inter[0]*(17125.0/144.0+var_inter[0]*(var_inter[0]*(85625.0/144.0-85625.0/288.0*var_inter[0])-119875.0/288.0))+var_inter[1]*(375.0/8.0+var_inter[1]*(var_inter[1]*(625.0/8.0-625.0/24.0*var_inter[1])-2125.0/24.0)+var_inter[0]*(var_inter[1]*(265625.0/288.0+var_inter[1]*(78125.0/288.0*var_inter[1]-78125.0/96.0))+var_inter[0]*(109375.0/64.0+var_inter[1]*(var_inter[0]*(1328125.0/288.0-1328125.0/576.0*var_inter[0])+var_inter[1]*(546875.0/192.0+var_inter[0]*(390625.0/192.0*var_inter[0]+var_inter[1]*(390625.0/288.0-390625.0/576.0*var_inter[0])-390625.0/96.0)-546875.0/576.0*var_inter[1])-1859375.0/576.0)+var_inter[0]*(78125.0/64.0*var_inter[0]-78125.0/32.0))-15625.0/32.0))-137.0/12.0)+var_inter[0]*(var_inter[0]*(875.0/24.0+var_inter[0]*(625.0/24.0*var_inter[0]-625.0/12.0))-125.0/12.0))+val[7]*var_inter[0]*var_inter[1]*(625+var_inter[0]*(var_inter[0]*(221875.0/24.0+var_inter[0]*(78125.0/24.0*var_inter[0]-109375.0/12.0))-48125.0/12.0)+var_inter[1]*(var_inter[1]*(221875.0/24.0+var_inter[1]*(78125.0/24.0*var_inter[1]-109375.0/12.0))+var_inter[0]*(3705625.0/144.0+var_inter[0]*(var_inter[0]*(8421875.0/144.0-6015625.0/288.0*var_inter[0])+var_inter[1]*(78765625.0/576.0+var_inter[0]*(27734375.0/576.0*var_inter[0]+var_inter[1]*(19140625.0/144.0+9765625.0/576.0*var_inter[0]*var_inter[1]-13671875.0/288.0*(var_inter[0]+var_inter[1]))-38828125.0/288.0)+var_inter[1]*(27734375.0/576.0*var_inter[1]-38828125.0/288.0))-17084375.0/288.0)+var_inter[1]*(var_inter[1]*(8421875.0/144.0-6015625.0/288.0*var_inter[1])-17084375.0/288.0))-48125.0/12.0))+var_inter[0]*var_inter[1]*(var_inter[1]*(48125.0/48.0+var_inter[1]*(var_inter[1]*(109375.0/48.0-78125.0/96.0*var_inter[1])-221875.0/96.0))+var_inter[0]*(38125.0/24.0+var_inter[1]*(var_inter[1]*(13534375.0/576.0+var_inter[1]*(4765625.0/576.0*var_inter[1]-6671875.0/288.0))+var_inter[0]*(9865625.0/288.0+var_inter[0]*(6015625.0/288.0*var_inter[0]-13234375.0/288.0)+var_inter[1]*(var_inter[1]*(22421875.0/288.0+var_inter[0]*(13671875.0/288.0*var_inter[0]+var_inter[1]*(21484375.0/576.0-9765625.0/576.0*var_inter[0])-30078125.0/288.0)-16015625.0/576.0*var_inter[1])+var_inter[0]*(61015625.0/576.0-27734375.0/576.0*var_inter[0])-45484375.0/576.0))-2935625.0/288.0)+var_inter[0]*(var_inter[0]*(171875.0/24.0-78125.0/24.0*var_inter[0])-128125.0/24.0))-625.0/4.0)*val[10]+var_inter[1]*(var_inter[1]*(2675.0/12.0+var_inter[1]*(var_inter[1]*(8125.0/12.0-3125.0/12.0*var_inter[1])-7375.0/12.0))+var_inter[0]*(3425.0/12.0+var_inter[1]*(var_inter[1]*(1010375.0/144.0+var_inter[1]*(428125.0/144.0*var_inter[1]-1113125.0/144.0))-366475.0/144.0)+var_inter[0]*(var_inter[0]*(53125.0/24.0+var_inter[0]*(15625.0/24.0*var_inter[0]-15625.0/8.0))+var_inter[1]*(334375.0/32.0+var_inter[0]*(var_inter[0]*(1671875.0/96.0-1671875.0/288.0*var_inter[0])+var_inter[1]*(15671875.0/288.0+var_inter[0]*(4609375.0/288.0*var_inter[0]-4609375.0/96.0)+var_inter[1]*(6640625.0/288.0*var_inter[1]+var_inter[0]*(5078125.0/96.0+var_inter[1]*(1953125.0/288.0*var_inter[0]-1953125.0/96.0)-5078125.0/288.0*var_inter[0])-17265625.0/288.0))-5684375.0/288.0)+var_inter[1]*(var_inter[1]*(1015625.0/32.0-390625.0/32.0*var_inter[1])-921875.0/32.0))-9375.0/8.0))-25)*val[12]+var_inter[0]*var_inter[1]*(var_inter[0]*(48125.0/12.0+var_inter[0]*(var_inter[0]*(109375.0/12.0-78125.0/24.0*var_inter[0])-221875.0/24.0))+var_inter[1]*(66875.0/12.0+var_inter[1]*(var_inter[1]*(203125.0/12.0-78125.0/12.0*var_inter[1])-184375.0/12.0)+var_inter[0]*(var_inter[1]*(14196875.0/144.0+var_inter[1]*(6015625.0/144.0*var_inter[1]-15640625.0/144.0))+var_inter[0]*(23740625.0/288.0+var_inter[0]*(8359375.0/288.0*var_inter[0]-11703125.0/144.0)+var_inter[1]*(var_inter[1]*(72109375.0/288.0-27734375.0/288.0*var_inter[1])+var_inter[0]*(32265625.0/144.0+var_inter[1]*(13671875.0/144.0*var_inter[1]+var_inter[0]*(25390625.0/288.0-9765625.0/288.0*var_inter[1])-35546875.0/144.0)-23046875.0/288.0*var_inter[0])-65453125.0/288.0))-5149375.0/144.0))-625)*val[13]+val[16]*var_inter[0]*var_inter[1]*(625.0/4.0+var_inter[1]*(var_inter[1]*(184375.0/48.0+var_inter[1]*(78125.0/48.0*var_inter[1]-203125.0/48.0))-66875.0/48.0)+var_inter[0]*(var_inter[1]*(4079375.0/288.0+var_inter[1]*(var_inter[1]*(12390625.0/288.0-4765625.0/288.0*var_inter[1])+var_inter[0]*(37796875.0/288.0+var_inter[1]*(16015625.0/288.0*var_inter[1]-41640625.0/288.0)+var_inter[0]*(23046875.0/288.0*var_inter[0]+var_inter[1]*(55859375.0/288.0+var_inter[0]*(9765625.0/288.0*var_inter[1]-25390625.0/288.0)-21484375.0/288.0*var_inter[1])-50703125.0/288.0))-11246875.0/288.0)+var_inter[0]*(var_inter[0]*(18390625.0/288.0-8359375.0/288.0*var_inter[0])-13709375.0/288.0))+var_inter[0]*(128125.0/24.0+var_inter[0]*(78125.0/24.0*var_inter[0]-171875.0/24.0))-38125.0/24.0))+val[17]*var_inter[1]*var_inter[0]*(var_inter[1]*(2675.0/12.0+var_inter[1]*(var_inter[1]*(8125.0/12.0-3125.0/12.0*var_inter[1])-7375.0/12.0))+var_inter[0]*(3125.0/12.0+var_inter[1]*(var_inter[0]*(2340625.0/288.0+var_inter[0]*(1671875.0/288.0*var_inter[0]-1671875.0/144.0))+var_inter[1]*(921875.0/144.0+var_inter[1]*(390625.0/144.0*var_inter[1]-1015625.0/144.0)+var_inter[0]*(var_inter[0]*(4609375.0/144.0-4609375.0/288.0*var_inter[0])+var_inter[1]*(7109375.0/288.0+var_inter[0]*(5078125.0/288.0*var_inter[0]+var_inter[1]*(1953125.0/144.0-1953125.0/288.0*var_inter[0])-5078125.0/144.0)-2734375.0/288.0*var_inter[1])-6453125.0/288.0))-334375.0/144.0)+var_inter[0]*(var_inter[0]*(15625.0/12.0-15625.0/24.0*var_inter[0])-21875.0/24.0))-25)+val[20]*var_inter[1]*var_inter[0]*(var_inter[1]*(8125.0/2.0+var_inter[0]*(var_inter[1]*(16384375.0/144.0+var_inter[1]*(8359375.0/144.0*var_inter[1]-1671875.0/12.0))+var_inter[0]*(2396875.0/24.0+var_inter[0]*(1015625.0/24.0*var_inter[0]-2640625.0/24.0)+var_inter[1]*(var_inter[1]*(4609375.0/12.0-23046875.0/144.0*var_inter[1])+var_inter[0]*(49765625.0/144.0+var_inter[1]*(25390625.0/144.0*var_inter[1]+var_inter[0]*(1953125.0/12.0-9765625.0/144.0*var_inter[1])-5078125.0/12.0)-19140625.0/144.0*var_inter[0])-45171875.0/144.0))-869375.0/24.0)+var_inter[1]*(var_inter[1]*(15625-78125.0/12.0*var_inter[1])-153125.0/12.0))+var_inter[0]*(66875.0/18.0+var_inter[0]*(var_inter[0]*(203125.0/18.0-78125.0/18.0*var_inter[0])-184375.0/18.0))-1250.0/3.0)+val[21]*var_inter[1]*var_inter[0]*(2500.0/9.0+var_inter[0]*(var_inter[0]*(153125.0/18.0+var_inter[0]*(78125.0/18.0*var_inter[0]-31250.0/3.0))+var_inter[1]*(105625.0/4.0+var_inter[0]*(var_inter[0]*(203125.0/2.0-1015625.0/24.0*var_inter[0])+var_inter[1]*(37515625.0/144.0+var_inter[0]*(19140625.0/144.0*var_inter[0]-3828125.0/12.0)+var_inter[1]*(19140625.0/144.0*var_inter[1]+var_inter[0]*(390625+var_inter[0]*(9765625.0/144.0*var_inter[1]-1953125.0/12.0)-1953125.0/12.0*var_inter[1])-3828125.0/12.0))-1990625.0/24.0)+var_inter[1]*(var_inter[1]*(203125.0/2.0-1015625.0/24.0*var_inter[1])-1990625.0/24.0))-8125.0/3.0)+var_inter[1]*(var_inter[1]*(153125.0/18.0+var_inter[1]*(78125.0/18.0*var_inter[1]-31250.0/3.0))-8125.0/3.0))+val[22]*var_inter[0]*var_inter[1]*(var_inter[1]*(8125.0/8.0+var_inter[1]*(var_inter[1]*(15625.0/4.0-78125.0/48.0*var_inter[1])-153125.0/48.0))+var_inter[0]*(38125.0/36.0+var_inter[0]*(var_inter[0]*(171875.0/36.0-78125.0/36.0*var_inter[0])-128125.0/36.0)+var_inter[1]*(var_inter[0]*(1665625.0/48.0+var_inter[0]*(1015625.0/48.0*var_inter[0]-2234375.0/48.0))+var_inter[1]*(9340625.0/288.0+var_inter[1]*(4765625.0/288.0*var_inter[1]-953125.0/24.0)+var_inter[0]*(var_inter[0]*(42109375.0/288.0+var_inter[1]*(1953125.0/24.0*var_inter[0]+var_inter[1]*(21484375.0/288.0-9765625.0/288.0*var_inter[0])-4296875.0/24.0)-19140625.0/288.0*var_inter[0])+var_inter[1]*(3203125.0/24.0-16015625.0/288.0*var_inter[1])-31390625.0/288.0))-495625.0/48.0))-625.0/6.0)+var_inter[1]*var_inter[0]*(50.0/3.0+var_inter[0]*(var_inter[0]*(21875.0/36.0+var_inter[0]*(15625.0/36.0*var_inter[0]-15625.0/18.0))-3125.0/18.0)+var_inter[1]*(var_inter[1]*(6125.0/12.0+var_inter[1]*(3125.0/12.0*var_inter[1]-625))+var_inter[0]*(40625.0/24.0+var_inter[1]*(var_inter[1]*(78125.0/12.0-390625.0/144.0*var_inter[1])-765625.0/144.0)+var_inter[0]*(var_inter[0]*(203125.0/24.0-203125.0/48.0*var_inter[0])+var_inter[1]*(5359375.0/288.0+var_inter[1]*(2734375.0/288.0*var_inter[1]-546875.0/24.0)+var_inter[0]*(3828125.0/288.0*var_inter[0]+var_inter[1]*(390625.0/12.0+var_inter[0]*(1953125.0/288.0*var_inter[1]-390625.0/24.0)-1953125.0/144.0*var_inter[1])-3828125.0/144.0))-284375.0/48.0))-325.0/2.0))*val[23]+var_inter[0]*var_inter[1]*(625.0/16.0+var_inter[0]*(var_inter[0]*(128125.0/96.0+var_inter[0]*(78125.0/96.0*var_inter[0]-171875.0/96.0))-38125.0/96.0)+var_inter[1]*(var_inter[1]*(128125.0/96.0+var_inter[1]*(78125.0/96.0*var_inter[1]-171875.0/96.0))+var_inter[0]*(2325625.0/576.0+var_inter[1]*(var_inter[1]*(10484375.0/576.0-4765625.0/576.0*var_inter[1])-7815625.0/576.0)+var_inter[0]*(var_inter[0]*(10484375.0/576.0-4765625.0/576.0*var_inter[0])+var_inter[1]*(26265625.0/576.0+var_inter[0]*(16015625.0/576.0*var_inter[0]-35234375.0/576.0)+var_inter[1]*(16015625.0/576.0*var_inter[1]+var_inter[0]*(47265625.0/576.0+var_inter[0]*(9765625.0/576.0*var_inter[1]-21484375.0/576.0)-21484375.0/576.0*var_inter[1])-35234375.0/576.0))-7815625.0/576.0))-38125.0/96.0))*val[28]+val[31]*var_inter[0]*var_inter[1]*(25+var_inter[1]*(var_inter[1]*(21875.0/24.0+var_inter[1]*(15625.0/24.0*var_inter[1]-15625.0/12.0))+var_inter[0]*(240625.0/144.0+var_inter[0]*(var_inter[0]*(546875.0/144.0-390625.0/288.0*var_inter[0])+var_inter[1]*(7765625.0/576.0+var_inter[0]*(2734375.0/576.0*var_inter[0]-3828125.0/288.0)+var_inter[1]*(5546875.0/576.0*var_inter[1]+var_inter[0]*(2734375.0/144.0+var_inter[1]*(1953125.0/576.0*var_inter[0]-2734375.0/288.0)-1953125.0/288.0*var_inter[0])-5546875.0/288.0))-1109375.0/288.0)+var_inter[1]*(var_inter[1]*(1203125.0/144.0-1203125.0/288.0*var_inter[1])-1684375.0/288.0))-3125.0/12.0)+var_inter[0]*(var_inter[0]*(8875.0/24.0+var_inter[0]*(3125.0/24.0*var_inter[0]-4375.0/12.0))-1925.0/12.0))+var_inter[0]*var_inter[1]*(var_inter[1]*(3125.0/12.0+var_inter[1]*(var_inter[1]*(15625.0/12.0-15625.0/24.0*var_inter[1])-21875.0/24.0))+var_inter[0]*(2675.0/12.0+var_inter[0]*(var_inter[0]*(8125.0/12.0-3125.0/12.0*var_inter[0])-7375.0/12.0)+var_inter[1]*(var_inter[0]*(921875.0/144.0+var_inter[0]*(390625.0/144.0*var_inter[0]-1015625.0/144.0))+var_inter[1]*(2340625.0/288.0+var_inter[0]*(var_inter[0]*(7109375.0/288.0-2734375.0/288.0*var_inter[0])+var_inter[1]*(4609375.0/144.0+var_inter[0]*(1953125.0/144.0*var_inter[0]+var_inter[1]*(5078125.0/288.0-1953125.0/288.0*var_inter[0])-5078125.0/144.0)-4609375.0/288.0*var_inter[1])-6453125.0/288.0)+var_inter[1]*(1671875.0/288.0*var_inter[1]-1671875.0/144.0))-334375.0/144.0))-25)*val[32]+var_inter[0]*var_inter[1]*(var_inter[0]*(1525.0/24.0+var_inter[0]*(var_inter[0]*(6875.0/24.0-3125.0/24.0*var_inter[0])-5125.0/24.0))+var_inter[1]*(3125.0/48.0+var_inter[1]*(var_inter[1]*(15625.0/48.0-15625.0/96.0*var_inter[1])-21875.0/96.0)+var_inter[0]*(var_inter[0]*(640625.0/288.0+var_inter[0]*(390625.0/288.0*var_inter[0]-859375.0/288.0)+var_inter[1]*(var_inter[0]*(6015625.0/576.0-2734375.0/576.0*var_inter[0])+var_inter[1]*(3203125.0/288.0+var_inter[0]*(4296875.0/576.0*var_inter[1]+var_inter[0]*(1953125.0/288.0-1953125.0/576.0*var_inter[1])-4296875.0/288.0)-3203125.0/576.0*var_inter[1])-4484375.0/576.0))+var_inter[1]*(1334375.0/576.0+var_inter[1]*(953125.0/576.0*var_inter[1]-953125.0/288.0))-190625.0/288.0))-25.0/4.0)*val[34]
    else if interpolation_base == "hierarchical"
        return var_inter[0]*var_inter[1]*val[35]+var_inter[1]*var_inter[0]*(50.0/3.0+var_inter[0]*(var_inter[0]*(6125.0/12.0+var_inter[0]*(3125.0/12.0*var_inter[0]-625))-325.0/2.0))*val[33]+var_inter[1]*var_inter[0]*(var_inter[0]*(2675.0/12.0+var_inter[0]*(var_inter[0]*(8125.0/12.0-3125.0/12.0*var_inter[0])-7375.0/12.0))-25)*val[32]+var_inter[0]*var_inter[1]*(625.0/16.0+var_inter[0]*(var_inter[0]*(128125.0/96.0+var_inter[0]*(78125.0/96.0*var_inter[0]-171875.0/96.0))-38125.0/96.0)+var_inter[1]*(var_inter[1]*(128125.0/96.0+var_inter[1]*(78125.0/96.0*var_inter[1]-171875.0/96.0))+var_inter[0]*(2325625.0/576.0+var_inter[1]*(var_inter[1]*(10484375.0/576.0-4765625.0/576.0*var_inter[1])-7815625.0/576.0)+var_inter[0]*(var_inter[0]*(10484375.0/576.0-4765625.0/576.0*var_inter[0])+var_inter[1]*(26265625.0/576.0+var_inter[1]*(16015625.0/576.0*var_inter[1]-35234375.0/576.0)+var_inter[0]*(16015625.0/576.0*var_inter[0]+var_inter[1]*(47265625.0/576.0+9765625.0/576.0*var_inter[0]*var_inter[1]-21484375.0/576.0*(var_inter[0]+var_inter[1]))-35234375.0/576.0))-7815625.0/576.0))-38125.0/96.0))*val[28]+var_inter[0]*var_inter[1]*(var_inter[0]*(8125.0/8.0+var_inter[0]*(var_inter[0]*(15625.0/4.0-78125.0/48.0*var_inter[0])-153125.0/48.0)+var_inter[1]*(var_inter[0]*(9340625.0/288.0+var_inter[0]*(4765625.0/288.0*var_inter[0]-953125.0/24.0))+var_inter[1]*(1665625.0/48.0+var_inter[1]*(1015625.0/48.0*var_inter[1]-2234375.0/48.0)+var_inter[0]*(var_inter[1]*(42109375.0/288.0-19140625.0/288.0*var_inter[1])+var_inter[0]*(3203125.0/24.0+var_inter[1]*(21484375.0/288.0*var_inter[0]+var_inter[1]*(1953125.0/24.0-9765625.0/288.0*var_inter[0])-4296875.0/24.0)-16015625.0/288.0*var_inter[0])-31390625.0/288.0))-495625.0/48.0))+var_inter[1]*(38125.0/36.0+var_inter[1]*(var_inter[1]*(171875.0/36.0-78125.0/36.0*var_inter[1])-128125.0/36.0))-625.0/6.0)*val[27]+var_inter[0]*var_inter[1]*(625.0/4.0+var_inter[0]*(var_inter[0]*(184375.0/48.0+var_inter[0]*(78125.0/48.0*var_inter[0]-203125.0/48.0))+var_inter[1]*(4079375.0/288.0+var_inter[0]*(var_inter[0]*(12390625.0/288.0-4765625.0/288.0*var_inter[0])-11246875.0/288.0)+var_inter[1]*(var_inter[1]*(18390625.0/288.0-8359375.0/288.0*var_inter[1])+var_inter[0]*(37796875.0/288.0+var_inter[0]*(16015625.0/288.0*var_inter[0]-41640625.0/288.0)+var_inter[1]*(23046875.0/288.0*var_inter[1]+var_inter[0]*(55859375.0/288.0+var_inter[1]*(9765625.0/288.0*var_inter[0]-25390625.0/288.0)-21484375.0/288.0*var_inter[0])-50703125.0/288.0))-13709375.0/288.0))-66875.0/48.0)+var_inter[1]*(var_inter[1]*(128125.0/24.0+var_inter[1]*(78125.0/24.0*var_inter[1]-171875.0/24.0))-38125.0/24.0))*val[26]+val[22]*var_inter[0]*var_inter[1]*(var_inter[1]*(8125.0/8.0+var_inter[1]*(var_inter[1]*(15625.0/4.0-78125.0/48.0*var_inter[1])-153125.0/48.0))+var_inter[0]*(38125.0/36.0+var_inter[1]*(var_inter[1]*(9340625.0/288.0+var_inter[1]*(4765625.0/288.0*var_inter[1]-953125.0/24.0))+var_inter[0]*(1665625.0/48.0+var_inter[0]*(1015625.0/48.0*var_inter[0]-2234375.0/48.0)+var_inter[1]*(var_inter[1]*(3203125.0/24.0-16015625.0/288.0*var_inter[1])+var_inter[0]*(42109375.0/288.0+var_inter[1]*(21484375.0/288.0*var_inter[1]+var_inter[0]*(1953125.0/24.0-9765625.0/288.0*var_inter[1])-4296875.0/24.0)-19140625.0/288.0*var_inter[0])-31390625.0/288.0))-495625.0/48.0)+var_inter[0]*(var_inter[0]*(171875.0/36.0-78125.0/36.0*var_inter[0])-128125.0/36.0))-625.0/6.0)+val[19]*var_inter[0]*var_inter[1]*(1250.0/3.0+var_inter[1]*(var_inter[1]*(153125.0/12.0+var_inter[1]*(78125.0/12.0*var_inter[1]-15625))-8125.0/2.0)+var_inter[0]*(var_inter[0]*(221875.0/36.0+var_inter[0]*(78125.0/36.0*var_inter[0]-109375.0/18.0))+var_inter[1]*(625625.0/24.0+var_inter[0]*(var_inter[0]*(1421875.0/24.0-1015625.0/48.0*var_inter[0])-2884375.0/48.0)+var_inter[1]*(var_inter[1]*(1203125.0/12.0-6015625.0/144.0*var_inter[1])+var_inter[0]*(54359375.0/288.0+var_inter[1]*(27734375.0/288.0*var_inter[1]-5546875.0/24.0)+var_inter[0]*(19140625.0/288.0*var_inter[0]+var_inter[1]*(2734375.0/12.0+var_inter[0]*(9765625.0/288.0*var_inter[1]-1953125.0/24.0)-13671875.0/144.0*var_inter[1])-26796875.0/144.0))-11790625.0/144.0))-48125.0/18.0))+var_inter[1]*(1-var_inter[0])*(50.0/3.0+var_inter[1]*(var_inter[1]*(6125.0/12.0+var_inter[1]*(3125.0/12.0*var_inter[1]-625))-325.0/2.0))*val[18]+val[16]*var_inter[0]*var_inter[1]*(625.0/4.0+var_inter[1]*(var_inter[1]*(184375.0/48.0+var_inter[1]*(78125.0/48.0*var_inter[1]-203125.0/48.0))-66875.0/48.0)+var_inter[0]*(var_inter[0]*(128125.0/24.0+var_inter[0]*(78125.0/24.0*var_inter[0]-171875.0/24.0))+var_inter[1]*(4079375.0/288.0+var_inter[0]*(var_inter[0]*(18390625.0/288.0-8359375.0/288.0*var_inter[0])-13709375.0/288.0)+var_inter[1]*(var_inter[1]*(12390625.0/288.0-4765625.0/288.0*var_inter[1])+var_inter[0]*(37796875.0/288.0+var_inter[0]*(23046875.0/288.0*var_inter[0]-50703125.0/288.0)+var_inter[1]*(16015625.0/288.0*var_inter[1]+var_inter[0]*(55859375.0/288.0+var_inter[1]*(9765625.0/288.0*var_inter[0]-21484375.0/288.0)-25390625.0/288.0*var_inter[0])-41640625.0/288.0))-11246875.0/288.0))-38125.0/24.0))+val[15]*var_inter[0]*var_inter[1]*(var_inter[0]*(8125.0/2.0+var_inter[0]*(var_inter[0]*(15625-78125.0/12.0*var_inter[0])-153125.0/12.0))+var_inter[1]*(66875.0/18.0+var_inter[0]*(var_inter[1]*(2396875.0/24.0+var_inter[1]*(1015625.0/24.0*var_inter[1]-2640625.0/24.0))+var_inter[0]*(16384375.0/144.0+var_inter[0]*(8359375.0/144.0*var_inter[0]-1671875.0/12.0)+var_inter[1]*(var_inter[0]*(4609375.0/12.0-23046875.0/144.0*var_inter[0])+var_inter[1]*(49765625.0/144.0+var_inter[0]*(25390625.0/144.0*var_inter[0]+var_inter[1]*(1953125.0/12.0-9765625.0/144.0*var_inter[0])-5078125.0/12.0)-19140625.0/144.0*var_inter[1])-45171875.0/144.0))-869375.0/24.0)+var_inter[1]*(var_inter[1]*(203125.0/18.0-78125.0/18.0*var_inter[1])-184375.0/18.0))-1250.0/3.0)+var_inter[0]*var_inter[1]*(var_inter[0]*(48125.0/12.0+var_inter[0]*(var_inter[0]*(109375.0/12.0-78125.0/24.0*var_inter[0])-221875.0/24.0))+var_inter[1]*(66875.0/12.0+var_inter[1]*(var_inter[1]*(203125.0/12.0-78125.0/12.0*var_inter[1])-184375.0/12.0)+var_inter[0]*(var_inter[1]*(14196875.0/144.0+var_inter[1]*(6015625.0/144.0*var_inter[1]-15640625.0/144.0))+var_inter[0]*(23740625.0/288.0+var_inter[0]*(8359375.0/288.0*var_inter[0]-11703125.0/144.0)+var_inter[1]*(var_inter[0]*(32265625.0/144.0-23046875.0/288.0*var_inter[0])+var_inter[1]*(72109375.0/288.0+var_inter[0]*(25390625.0/288.0*var_inter[0]+var_inter[1]*(13671875.0/144.0-9765625.0/288.0*var_inter[0])-35546875.0/144.0)-27734375.0/288.0*var_inter[1])-65453125.0/288.0))-5149375.0/144.0))-625)*val[13]+val[11]*var_inter[0]*var_inter[1]*(25+var_inter[1]*(var_inter[1]*(8875.0/24.0+var_inter[1]*(3125.0/24.0*var_inter[1]-4375.0/12.0))-1925.0/12.0))+val[7]*var_inter[0]*var_inter[1]*(625+var_inter[1]*(var_inter[1]*(221875.0/24.0+var_inter[1]*(78125.0/24.0*var_inter[1]-109375.0/12.0))-48125.0/12.0)+var_inter[0]*(var_inter[0]*(221875.0/24.0+var_inter[0]*(78125.0/24.0*var_inter[0]-109375.0/12.0))+var_inter[1]*(3705625.0/144.0+var_inter[1]*(var_inter[1]*(8421875.0/144.0-6015625.0/288.0*var_inter[1])-17084375.0/288.0)+var_inter[0]*(var_inter[0]*(8421875.0/144.0-6015625.0/288.0*var_inter[0])+var_inter[1]*(78765625.0/576.0+var_inter[0]*(27734375.0/576.0*var_inter[0]-38828125.0/288.0)+var_inter[1]*(27734375.0/576.0*var_inter[1]+var_inter[0]*(19140625.0/144.0+var_inter[0]*(9765625.0/576.0*var_inter[1]-13671875.0/288.0)-13671875.0/288.0*var_inter[1])-38828125.0/288.0))-17084375.0/288.0))-48125.0/12.0))+var_inter[0]*(var_inter[0]*(var_inter[0]*(var_inter[0]*(3125.0/24.0*var_inter[0]*(var_inter[1]-1)+6875.0/24.0*(1-var_inter[1]))-5125.0/24.0*(1-var_inter[1]))+1525.0/24.0*(1-var_inter[1]))-25.0/4.0*(1-var_inter[1]))*val[4]+val[3]*var_inter[0]*(1-var_inter[1])*(50.0/3.0+var_inter[0]*(var_inter[0]*(6125.0/12.0+var_inter[0]*(3125.0/12.0*var_inter[0]-625))-325.0/2.0))+(1+var_inter[0]*(var_inter[1]-1)-var_inter[1])*val[0]+var_inter[0]*(1-var_inter[1])*(25+var_inter[0]*(var_inter[0]*(8875.0/24.0+var_inter[0]*(3125.0/24.0*var_inter[0]-4375.0/12.0))-1925.0/12.0))*val[1]+val[2]*var_inter[0]*(var_inter[0]*(var_inter[0]*(var_inter[0]*(8125.0/12.0*(1-var_inter[1])+3125.0/12.0*var_inter[0]*(var_inter[1]-1))-7375.0/12.0*(1-var_inter[1]))+2675.0/12.0*(1-var_inter[1]))-25*(1-var_inter[1]))+var_inter[0]*(1-var_inter[1])*val[5]+val[6]*var_inter[1]*(1-var_inter[0])*(25+var_inter[1]*(var_inter[1]*(8875.0/24.0+var_inter[1]*(3125.0/24.0*var_inter[1]-4375.0/12.0))-1925.0/12.0))+val[8]*var_inter[0]*var_inter[1]*(var_inter[1]*(48125.0/12.0+var_inter[1]*(var_inter[1]*(109375.0/12.0-78125.0/24.0*var_inter[1])-221875.0/24.0))+var_inter[0]*(66875.0/12.0+var_inter[0]*(var_inter[0]*(203125.0/12.0-78125.0/12.0*var_inter[0])-184375.0/12.0)+var_inter[1]*(var_inter[0]*(14196875.0/144.0+var_inter[0]*(6015625.0/144.0*var_inter[0]-15640625.0/144.0))+var_inter[1]*(23740625.0/288.0+var_inter[1]*(8359375.0/288.0*var_inter[1]-11703125.0/144.0)+var_inter[0]*(var_inter[0]*(72109375.0/288.0-27734375.0/288.0*var_inter[0])+var_inter[1]*(32265625.0/144.0+var_inter[0]*(13671875.0/144.0*var_inter[0]+var_inter[1]*(25390625.0/288.0-9765625.0/288.0*var_inter[0])-35546875.0/144.0)-23046875.0/288.0*var_inter[1])-65453125.0/288.0))-5149375.0/144.0))-625)+val[9]*var_inter[0]*var_inter[1]*(1250.0/3.0+var_inter[1]*(var_inter[1]*(221875.0/36.0+var_inter[1]*(78125.0/36.0*var_inter[1]-109375.0/18.0))+var_inter[0]*(625625.0/24.0+var_inter[1]*(var_inter[1]*(1421875.0/24.0-1015625.0/48.0*var_inter[1])-2884375.0/48.0)+var_inter[0]*(var_inter[0]*(1203125.0/12.0-6015625.0/144.0*var_inter[0])+var_inter[1]*(54359375.0/288.0+var_inter[1]*(19140625.0/288.0*var_inter[1]-26796875.0/144.0)+var_inter[0]*(27734375.0/288.0*var_inter[0]+var_inter[1]*(2734375.0/12.0+var_inter[0]*(9765625.0/288.0*var_inter[1]-13671875.0/144.0)-1953125.0/24.0*var_inter[1])-5546875.0/24.0))-11790625.0/144.0))-48125.0/18.0)+var_inter[0]*(var_inter[0]*(153125.0/12.0+var_inter[0]*(78125.0/12.0*var_inter[0]-15625))-8125.0/2.0))+var_inter[0]*var_inter[1]*(var_inter[1]*(48125.0/48.0+var_inter[1]*(var_inter[1]*(109375.0/48.0-78125.0/96.0*var_inter[1])-221875.0/96.0))+var_inter[0]*(38125.0/24.0+var_inter[0]*(var_inter[0]*(171875.0/24.0-78125.0/24.0*var_inter[0])-128125.0/24.0)+var_inter[1]*(var_inter[1]*(13534375.0/576.0+var_inter[1]*(4765625.0/576.0*var_inter[1]-6671875.0/288.0))+var_inter[0]*(9865625.0/288.0+var_inter[0]*(6015625.0/288.0*var_inter[0]-13234375.0/288.0)+var_inter[1]*(var_inter[1]*(22421875.0/288.0-16015625.0/576.0*var_inter[1])+var_inter[0]*(61015625.0/576.0+var_inter[1]*(21484375.0/576.0*var_inter[1]+var_inter[0]*(13671875.0/288.0-9765625.0/576.0*var_inter[1])-30078125.0/288.0)-27734375.0/576.0*var_inter[0])-45484375.0/576.0))-2935625.0/288.0))-625.0/4.0)*val[10]+var_inter[1]*(1-var_inter[0])*(var_inter[1]*(2675.0/12.0+var_inter[1]*(var_inter[1]*(8125.0/12.0-3125.0/12.0*var_inter[1])-7375.0/12.0))-25)*val[12]+val[14]*var_inter[0]*var_inter[1]*(625+var_inter[1]*(var_inter[1]*(184375.0/12.0+var_inter[1]*(78125.0/12.0*var_inter[1]-203125.0/12.0))-66875.0/12.0)+var_inter[0]*(var_inter[0]*(184375.0/12.0+var_inter[0]*(78125.0/12.0*var_inter[0]-203125.0/12.0))+var_inter[1]*(7155625.0/144.0+var_inter[1]*(var_inter[1]*(21734375.0/144.0-8359375.0/144.0*var_inter[1])-19728125.0/144.0)+var_inter[0]*(var_inter[0]*(21734375.0/144.0-8359375.0/144.0*var_inter[0])+var_inter[1]*(54390625.0/144.0+var_inter[0]*(23046875.0/144.0*var_inter[0]-59921875.0/144.0)+var_inter[1]*(23046875.0/144.0*var_inter[1]+var_inter[0]*(66015625.0/144.0+var_inter[0]*(9765625.0/144.0*var_inter[1]-25390625.0/144.0)-25390625.0/144.0*var_inter[1])-59921875.0/144.0))-19728125.0/144.0))-66875.0/12.0))+val[17]*var_inter[0]*var_inter[1]*(var_inter[1]*(2675.0/12.0+var_inter[1]*(var_inter[1]*(8125.0/12.0-3125.0/12.0*var_inter[1])-7375.0/12.0))-25)+var_inter[1]*var_inter[0]*(var_inter[0]*(66875.0/18.0+var_inter[0]*(var_inter[0]*(203125.0/18.0-78125.0/18.0*var_inter[0])-184375.0/18.0)+var_inter[1]*(var_inter[1]*(16384375.0/144.0+var_inter[1]*(8359375.0/144.0*var_inter[1]-1671875.0/12.0))+var_inter[0]*(2396875.0/24.0+var_inter[0]*(1015625.0/24.0*var_inter[0]-2640625.0/24.0)+var_inter[1]*(var_inter[1]*(4609375.0/12.0-23046875.0/144.0*var_inter[1])+var_inter[0]*(49765625.0/144.0+var_inter[1]*(1953125.0/12.0*var_inter[0]+var_inter[1]*(25390625.0/144.0-9765625.0/144.0*var_inter[0])-5078125.0/12.0)-19140625.0/144.0*var_inter[0])-45171875.0/144.0))-869375.0/24.0))+var_inter[1]*(8125.0/2.0+var_inter[1]*(var_inter[1]*(15625-78125.0/12.0*var_inter[1])-153125.0/12.0))-1250.0/3.0)*val[20]+val[21]*var_inter[1]*var_inter[0]*(2500.0/9.0+var_inter[1]*(var_inter[1]*(153125.0/18.0+var_inter[1]*(78125.0/18.0*var_inter[1]-31250.0/3.0))-8125.0/3.0)+var_inter[0]*(var_inter[0]*(153125.0/18.0+var_inter[0]*(78125.0/18.0*var_inter[0]-31250.0/3.0))+var_inter[1]*(105625.0/4.0+var_inter[1]*(var_inter[1]*(203125.0/2.0-1015625.0/24.0*var_inter[1])+var_inter[0]*(37515625.0/144.0+var_inter[1]*(19140625.0/144.0*var_inter[1]-3828125.0/12.0)+var_inter[0]*(19140625.0/144.0*var_inter[0]+var_inter[1]*(390625+9765625.0/144.0*var_inter[0]*var_inter[1]-1953125.0/12.0*(var_inter[0]+var_inter[1]))-3828125.0/12.0))-1990625.0/24.0)+var_inter[0]*(var_inter[0]*(203125.0/2.0-1015625.0/24.0*var_inter[0])-1990625.0/24.0))-8125.0/3.0))+var_inter[0]*var_inter[1]*(50.0/3.0+var_inter[1]*(var_inter[1]*(6125.0/12.0+var_inter[1]*(3125.0/12.0*var_inter[1]-625))-325.0/2.0))*val[23]+var_inter[1]*(1-var_inter[0])*(var_inter[1]*(1525.0/24.0+var_inter[1]*(var_inter[1]*(6875.0/24.0-3125.0/24.0*var_inter[1])-5125.0/24.0))-25.0/4.0)*val[24]+var_inter[1]*var_inter[0]*(var_inter[0]*(48125.0/48.0+var_inter[0]*(var_inter[0]*(109375.0/48.0-78125.0/96.0*var_inter[0])-221875.0/96.0))+var_inter[1]*(38125.0/24.0+var_inter[1]*(var_inter[1]*(171875.0/24.0-78125.0/24.0*var_inter[1])-128125.0/24.0)+var_inter[0]*(var_inter[0]*(13534375.0/576.0+var_inter[0]*(4765625.0/576.0*var_inter[0]-6671875.0/288.0))+var_inter[1]*(9865625.0/288.0+var_inter[1]*(6015625.0/288.0*var_inter[1]-13234375.0/288.0)+var_inter[0]*(var_inter[1]*(61015625.0/576.0-27734375.0/576.0*var_inter[1])+var_inter[0]*(22421875.0/288.0+var_inter[1]*(13671875.0/288.0*var_inter[1]+var_inter[0]*(21484375.0/576.0-9765625.0/576.0*var_inter[1])-30078125.0/288.0)-16015625.0/576.0*var_inter[0])-45484375.0/576.0))-2935625.0/288.0))-625.0/4.0)*val[25]+val[29]*var_inter[0]*var_inter[1]*(var_inter[1]*(1525.0/24.0+var_inter[1]*(var_inter[1]*(6875.0/24.0-3125.0/24.0*var_inter[1])-5125.0/24.0))-25.0/4.0)+var_inter[1]*(1-var_inter[0])*val[30]+val[31]*var_inter[1]*var_inter[0]*(25+var_inter[0]*(var_inter[0]*(8875.0/24.0+var_inter[0]*(3125.0/24.0*var_inter[0]-4375.0/12.0))-1925.0/12.0))+var_inter[1]*var_inter[0]*(var_inter[0]*(1525.0/24.0+var_inter[0]*(var_inter[0]*(6875.0/24.0-3125.0/24.0*var_inter[0])-5125.0/24.0))-25.0/4.0)*val[34]

#
def interpolation_vertex( var_inter, val_vertex )
    return val_vertex[3]*var_inter[1]*(1-var_inter[0])+val_vertex[0]*(1+var_inter[0]*(var_inter[1]-1)-var_inter[1])+val_vertex[1]*var_inter[0]*(1-var_inter[1])+val_vertex[2]*var_inter[0]*var_inter[1]
#
def nb_children( sub_nvi ) when sub_nvi==0
    return 1
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==0
    return child_var_inter
def type_child( sub_nvi, num_child ) when sub_nvi==0
    return Quad_9
def node_number_child( sub_nvi, num_child ) when sub_nvi==0
    return 0 .. 9
#
def nb_children( sub_nvi ) when sub_nvi==1
    return 4
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==1 and num_child==0
    return [(2*child_var_inter[0]-1)*child_var_inter[0]-2*(child_var_inter[0]-1)*child_var_inter[0],0]
def type_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==0
    return Bar_3
def node_number_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==0
    return [0,1,4]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==1 and num_child==1
    return [1+child_var_inter[0]*(2*child_var_inter[0]-1)+child_var_inter[0]*(2*child_var_inter[0]-3)-4*child_var_inter[0]*(child_var_inter[0]-1),child_var_inter[0]*(2*child_var_inter[0]-1)-2*child_var_inter[0]*(child_var_inter[0]-1)]
def type_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==1
    return Bar_3
def node_number_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==1
    return [1,2,5]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==1 and num_child==2
    return [1+(2*child_var_inter[0]-3)*child_var_inter[0]-2*(child_var_inter[0]-1)*child_var_inter[0],1+child_var_inter[0]*(2*child_var_inter[0]-1)+(2*child_var_inter[0]-3)*child_var_inter[0]-4*(child_var_inter[0]-1)*child_var_inter[0]]
def type_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==2
    return Bar_3
def node_number_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==2
    return [2,3,6]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==1 and num_child==3
    return [0,1+child_var_inter[0]*(2*child_var_inter[0]-3)-2*(child_var_inter[0]-1)*child_var_inter[0]]
def type_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==3
    return Bar_3
def node_number_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==3
    return [3,0,7]
#
def nb_children( sub_nvi ) when sub_nvi==2
    return 8
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==2 and num_child==0
    return [0,0]
def type_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==0
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==0
    return [0]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==2 and num_child==1
    return [1/2,0]
def type_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==1
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==1
    return [4]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==2 and num_child==2
    return [1,0]
def type_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==2
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==2
    return [1]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==2 and num_child==3
    return [1,1/2]
def type_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==3
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==3
    return [5]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==2 and num_child==4
    return [1,1]
def type_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==4
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==4
    return [2]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==2 and num_child==5
    return [1/2,1]
def type_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==5
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==5
    return [6]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==2 and num_child==6
    return [0,1]
def type_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==6
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==6
    return [3]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==2 and num_child==7
    return [0,1/2]
def type_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==7
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==2 and num_child==7
    return [7]
def normal( var_inter, pos_nodes )
    assert( 0, "normal is defined only for nb_dim == nvi + 1" )
#
def jac_mat( var_inter, pos_nodes )
    res := Mat[ type_promote(var_inter[0],pos_nodes[0][0],mul), Gen[ 2, 2 ] ]()
    R_0 := pos_nodes[8][1]; R_1 := pos_nodes[7][1]; R_2 := pos_nodes[5][1]; R_3 := pos_nodes[1][1];
    R_4 := pos_nodes[0][1]; R_5 := pos_nodes[2][1]; R_6 := pos_nodes[3][1]; R_7 := pos_nodes[4][1];
    R_8 := pos_nodes[6][1]; R_9 := pos_nodes[8][0]; R_10 := pos_nodes[6][0]; R_11 := pos_nodes[4][0];
    R_12 := pos_nodes[3][0]; R_13 := pos_nodes[2][0]; R_14 := pos_nodes[1][0]; R_15 := pos_nodes[0][0];
    R_16 := pos_nodes[5][0]; R_17 := var_inter[0]; R_18 := 8.0*R_17; R_19 := (-4.0)+R_18;
    R_18 = (-12.0)+R_18; R_18 = R_17*R_18; R_18 = 4.0+R_18; R_20 := (-1.0)*R_17;
    R_21 := 1.0+R_20; R_22 := (-4.0)*R_21; R_23 := 4.0*R_21; R_24 := (-12.0)*R_21;
    R_25 := (-1.0)+R_17; R_26 := 4.0*R_17; R_27 := (-6.0)+R_26; R_27 = R_17*R_27;
    R_27 = 4.0+R_27; R_28 := 16.0*R_17; R_29 := (-4.0)+R_28; R_28 = (-12.0)+R_28;
    R_30 := var_inter[1]; R_31 := R_17*R_30; R_31 = 4.0*R_31; R_27 = R_30*R_27;
    R_21 = R_30*R_21; R_21 = (-4.0)*R_21; R_32 := 8.0*R_30; R_32 = (-6.0)+R_32;
    R_32 = R_17*R_32; R_33 := R_17+R_30; R_33 = (-6.0)*R_33; R_31 = R_31+R_33;
    R_31 = 9.0+R_31; R_31 = R_17*R_31; R_31 = R_31+R_27; R_31 = (-3.0)+R_31;
    R_31 = R_4*R_31; R_32 = R_33+R_32; R_32 = 9.0+R_32; R_32 = R_30*R_32;
    R_32 = R_26+R_32; R_32 = (-3.0)+R_32; R_32 = R_4*R_32; R_4 = (-2.0)+R_30;
    R_4 = R_17*R_4; R_25 = R_30*R_25; R_33 = 2.0*R_25; R_33 = R_20+R_33;
    R_33 = 1.0+R_33; R_33 = R_17*R_33; R_20 = R_0*R_33; R_20 = 16.0*R_20;
    R_33 = R_9*R_33; R_33 = 16.0*R_33; R_34 := (-16.0)*R_25; R_35 := R_22+R_34;
    R_35 = R_17*R_35; R_36 := R_8*R_35; R_35 = R_10*R_35; R_34 = R_24+R_34;
    R_34 = R_17*R_34; R_37 := R_7*R_34; R_34 = R_11*R_34; R_4 = R_25+R_4;
    R_4 = 1.0+R_4; R_4 = R_30*R_4; R_0 = R_0*R_4; R_0 = 16.0*R_0;
    R_4 = R_9*R_4; R_4 = 16.0*R_4; R_25 = (-8.0)*R_25; R_22 = R_25+R_22;
    R_24 = R_25+R_24; R_24 = R_30*R_24; R_23 = R_24+R_23; R_24 = (-8.0)*R_30;
    R_25 = 4.0+R_24; R_25 = R_17*R_25; R_25 = R_22+R_25; R_25 = R_30*R_25;
    R_8 = R_8*R_25; R_25 = R_10*R_25; R_24 = 12.0+R_24; R_24 = R_30*R_24;
    R_24 = (-4.0)+R_24; R_24 = R_17*R_24; R_23 = R_24+R_23; R_7 = R_7*R_23;
    R_23 = R_11*R_23; R_11 = (-2.0)*R_30; R_24 = 1.0+R_11; R_19 = R_19*R_24;
    R_19 = R_17*R_19; R_10 = R_2*R_19; R_19 = R_16*R_19; R_24 = R_18*R_24;
    R_18 = R_1*R_24; R_22 = 4.0*R_30; R_9 = (-2.0)+R_22; R_9 = R_17*R_9;
    R_38 := R_9+R_21; R_38 = 1.0+R_38; R_38 = R_17*R_38; R_39 := R_5*R_38;
    R_38 = R_13*R_38; R_40 := 2.0*R_9; R_22 = (-6.0)+R_22; R_41 := R_30*R_22;
    R_41 = 4.0+R_41; R_41 = R_17*R_41; R_22 = R_17*R_22; R_21 = R_22+R_21;
    R_21 = 3.0+R_21; R_21 = R_17*R_21; R_42 := R_3*R_21; R_31 = R_42+R_31;
    R_31 = R_39+R_31; R_21 = R_14*R_21; R_11 = R_22+R_11; R_11 = 3.0+R_11;
    R_11 = R_30*R_11; R_41 = R_11+R_41; R_41 = (-1.0)+R_41; R_3 = R_3*R_41;
    R_3 = R_32+R_3; R_41 = R_14*R_41; R_14 = 2.0*R_22; R_32 = (-6.0)*R_30;
    R_11 = R_9+R_32; R_11 = 3.0+R_11; R_11 = R_17*R_11; R_11 = R_11+R_27;
    R_11 = (-1.0)+R_11; R_39 = R_6*R_11; R_39 = R_31+R_39; R_39 = R_37+R_39;
    R_39 = R_10+R_39; R_39 = R_36+R_39; R_18 = R_39+R_18; R_18 = R_20+R_18;
    res(1,1) = R_18; R_11 = R_12*R_11; R_22 = R_22+R_32; R_22 = 9.0+R_22;
    R_22 = R_17*R_22; R_27 = R_22+R_27; R_27 = (-3.0)+R_27; R_27 = R_15*R_27;
    R_27 = R_21+R_27; R_27 = R_38+R_27; R_11 = R_27+R_11; R_11 = R_34+R_11;
    R_19 = R_11+R_19; R_35 = R_19+R_35; R_40 = R_32+R_40; R_40 = 3.0+R_40;
    R_40 = R_30*R_40; R_6 = R_6*R_40; R_40 = R_12*R_40; R_14 = R_32+R_14;
    R_14 = 9.0+R_14; R_14 = R_30*R_14; R_14 = R_26+R_14; R_14 = (-3.0)+R_14;
    R_14 = R_15*R_14; R_41 = R_14+R_41; R_14 = (-1.0)*R_30; R_9 = R_14+R_9;
    R_9 = 2.0*R_9; R_9 = 1.0+R_9; R_9 = R_30*R_9; R_5 = R_5*R_9;
    R_3 = R_5+R_3; R_3 = R_6+R_3; R_3 = R_7+R_3; R_9 = R_13*R_9;
    R_9 = R_41+R_9; R_40 = R_9+R_40; R_23 = R_40+R_23; R_14 = 1.0+R_14;
    R_29 = R_14*R_29; R_29 = R_30*R_29; R_2 = R_2*R_29; R_2 = R_3+R_2;
    R_2 = R_8+R_2; R_29 = R_16*R_29; R_23 = R_29+R_23; R_25 = R_23+R_25;
    R_28 = R_14*R_28; R_28 = R_30*R_28; R_1 = R_1*R_28; R_1 = R_2+R_1;
    R_0 = R_1+R_0; res(0,1) = R_0; R_0 = pos_nodes[7][0]; R_24 = R_0*R_24;
    R_35 = R_24+R_35; R_33 = R_35+R_33; res(1,0) = R_33; R_28 = R_0*R_28;
    R_25 = R_28+R_25; R_4 = R_25+R_4; res(0,0) = R_4; 
    return res
#
def jac( var_inter, pos_nodes )
    R_0 := pos_nodes[1][1]; R_1 := pos_nodes[4][1]; R_2 := pos_nodes[0][1]; R_3 := pos_nodes[6][1];
    R_4 := pos_nodes[2][1]; R_5 := pos_nodes[8][1]; R_6 := pos_nodes[3][1]; R_7 := pos_nodes[5][1];
    R_8 := pos_nodes[7][1]; R_9 := pos_nodes[5][0]; R_10 := pos_nodes[6][0]; R_11 := pos_nodes[2][0];
    R_12 := pos_nodes[8][0]; R_13 := pos_nodes[1][0]; R_14 := pos_nodes[4][0]; R_15 := pos_nodes[0][0];
    R_16 := pos_nodes[3][0]; R_17 := var_inter[1]; R_18 := 8.0*R_17; R_18 = (-6.0)+R_18;
    R_19 := (-8.0)*R_17; R_20 := 12.0+R_19; R_20 = R_17*R_20; R_20 = (-4.0)+R_20;
    R_19 = 4.0+R_19; R_21 := (-2.0)+R_17; R_22 := (-1.0)*R_17; R_23 := 1.0+R_22;
    R_24 := (-6.0)*R_17; R_25 := 4.0*R_17; R_26 := (-6.0)+R_25; R_27 := R_17*R_26;
    R_27 = 4.0+R_27; R_25 = (-2.0)+R_25; R_28 := (-2.0)*R_17; R_29 := 1.0+R_28;
    R_30 := var_inter[0]; R_31 := R_30*R_17; R_31 = 4.0*R_31; R_27 = R_30*R_27;
    R_20 = R_30*R_20; R_18 = R_30*R_18; R_32 := R_30+R_17; R_32 = (-6.0)*R_32;
    R_31 = R_31+R_32; R_31 = 9.0+R_31; R_31 = R_30*R_31; R_18 = R_32+R_18;
    R_18 = 9.0+R_18; R_18 = R_17*R_18; R_19 = R_30*R_19; R_21 = R_30*R_21;
    R_32 = 16.0*R_30; R_33 := (-4.0)+R_32; R_34 := R_9*R_33; R_33 = R_7*R_33;
    R_32 = (-12.0)+R_32; R_35 := R_8*R_32; R_33 = R_35+R_33; R_33 = R_23*R_33;
    R_35 = (-1.0)+R_30; R_35 = R_17*R_35; R_36 := (-8.0)*R_35; R_21 = R_35+R_21;
    R_21 = 1.0+R_21; R_37 := R_12*R_21; R_37 = 16.0*R_37; R_21 = R_5*R_21;
    R_21 = 16.0*R_21; R_38 := 2.0*R_35; R_35 = (-16.0)*R_35; R_39 := (-1.0)*R_30;
    R_38 = R_39+R_38; R_38 = 1.0+R_38; R_5 = R_5*R_38; R_5 = 16.0*R_5;
    R_38 = R_12*R_38; R_38 = 16.0*R_38; R_39 = 1.0+R_39; R_12 = 4.0*R_39;
    R_40 := (-4.0)*R_39; R_41 := R_36+R_40; R_19 = R_41+R_19; R_41 = R_10*R_19;
    R_19 = R_3*R_19; R_40 = R_40+R_35; R_3 = R_3*R_40; R_40 = R_10*R_40;
    R_10 = R_17*R_39; R_10 = (-4.0)*R_10; R_39 = (-12.0)*R_39; R_36 = R_36+R_39;
    R_36 = R_17*R_36; R_12 = R_36+R_12; R_12 = R_20+R_12; R_20 = R_14*R_12;
    R_12 = R_1*R_12; R_35 = R_39+R_35; R_1 = R_1*R_35; R_35 = R_14*R_35;
    R_26 = R_30*R_26; R_14 = 2.0*R_26; R_14 = R_24+R_14; R_14 = 9.0+R_14;
    R_14 = R_17*R_14; R_28 = R_26+R_28; R_28 = 3.0+R_28; R_28 = R_17*R_28;
    R_27 = R_28+R_27; R_27 = (-1.0)+R_27; R_28 = R_13*R_27; R_27 = R_0*R_27;
    R_39 = R_26+R_10; R_39 = 3.0+R_39; R_0 = R_0*R_39; R_39 = R_13*R_39;
    R_26 = R_26+R_24; R_26 = 9.0+R_26; R_26 = R_30*R_26; R_13 = 4.0*R_30;
    R_14 = R_13+R_14; R_14 = (-3.0)+R_14; R_14 = R_15*R_14; R_20 = R_14+R_20;
    R_28 = R_20+R_28; R_18 = R_13+R_18; R_18 = (-3.0)+R_18; R_18 = R_2*R_18;
    R_12 = R_18+R_12; R_27 = R_12+R_27; R_13 = (-6.0)+R_13; R_13 = R_30*R_13;
    R_13 = 4.0+R_13; R_13 = R_17*R_13; R_31 = R_31+R_13; R_31 = (-3.0)+R_31;
    R_31 = R_2*R_31; R_26 = R_26+R_13; R_26 = (-3.0)+R_26; R_26 = R_15*R_26;
    R_25 = R_30*R_25; R_22 = R_22+R_25; R_22 = 2.0*R_22; R_22 = 1.0+R_22;
    R_15 = R_11*R_22; R_22 = R_4*R_22; R_22 = R_21+R_22; R_21 = 2.0*R_25;
    R_21 = R_24+R_21; R_21 = 3.0+R_21; R_2 = R_16*R_21; R_2 = R_15+R_2;
    R_2 = R_41+R_2; R_37 = R_2+R_37; R_21 = R_6*R_21; R_22 = R_21+R_22;
    R_19 = R_22+R_19; R_19 = R_33+R_19; R_19 = R_17*R_19; R_27 = R_19+R_27;
    R_10 = R_25+R_10; R_10 = 1.0+R_10; R_4 = R_4*R_10; R_10 = R_11*R_10;
    R_10 = R_38+R_10; R_10 = R_39+R_10; R_40 = R_10+R_40; R_24 = R_25+R_24;
    R_24 = 3.0+R_24; R_24 = R_30*R_24; R_13 = R_24+R_13; R_13 = (-1.0)+R_13;
    R_6 = R_6*R_13; R_13 = R_16*R_13; R_16 = 8.0*R_30; R_24 = (-4.0)+R_16;
    R_7 = R_7*R_24; R_7 = R_7*R_29; R_4 = R_7+R_4; R_0 = R_4+R_0;
    R_0 = R_5+R_0; R_0 = R_1+R_0; R_3 = R_0+R_3; R_3 = R_30*R_3;
    R_24 = R_9*R_24; R_24 = R_24*R_29; R_24 = R_40+R_24; R_24 = R_35+R_24;
    R_24 = R_30*R_24; R_16 = (-12.0)+R_16; R_16 = R_30*R_16; R_16 = 4.0+R_16;
    R_29 = R_16*R_29; R_8 = R_8*R_29; R_8 = R_31+R_8; R_6 = R_8+R_6;
    R_3 = R_6+R_3; R_6 = pos_nodes[7][0]; R_32 = R_6*R_32; R_34 = R_32+R_34;
    R_34 = R_23*R_34; R_34 = R_37+R_34; R_34 = R_17*R_34; R_34 = R_28+R_34;
    R_3 = R_34*R_3; R_29 = R_6*R_29; R_13 = R_29+R_13; R_26 = R_13+R_26;
    R_24 = R_26+R_24; R_27 = R_24*R_27; R_27 = (-1.0)*R_27; R_3 = R_27+R_3;
    res := R_3; 
    return res
#
def inv_jac_mat( var_inter, pos_nodes )
    res := Mat[ type_promote(var_inter[0],pos_nodes[0][0],mul), Gen[ 2, 2 ] ]()
    R_0 := pos_nodes[1][1]; R_1 := pos_nodes[4][1]; R_2 := pos_nodes[0][1]; R_3 := pos_nodes[6][1];
    R_4 := pos_nodes[2][1]; R_5 := pos_nodes[8][1]; R_6 := pos_nodes[3][1]; R_7 := pos_nodes[5][1];
    R_8 := pos_nodes[7][1]; R_9 := pos_nodes[5][0]; R_10 := pos_nodes[6][0]; R_11 := pos_nodes[2][0];
    R_12 := pos_nodes[8][0]; R_13 := pos_nodes[1][0]; R_14 := pos_nodes[4][0]; R_15 := pos_nodes[0][0];
    R_16 := pos_nodes[3][0]; R_17 := var_inter[1]; R_18 := 8.0*R_17; R_18 = (-6.0)+R_18;
    R_19 := (-8.0)*R_17; R_20 := 12.0+R_19; R_20 = R_17*R_20; R_20 = (-4.0)+R_20;
    R_19 = 4.0+R_19; R_21 := (-2.0)+R_17; R_22 := (-1.0)*R_17; R_23 := 1.0+R_22;
    R_24 := (-6.0)*R_17; R_25 := 4.0*R_17; R_26 := (-6.0)+R_25; R_27 := R_17*R_26;
    R_27 = 4.0+R_27; R_25 = (-2.0)+R_25; R_28 := (-2.0)*R_17; R_29 := 1.0+R_28;
    R_30 := var_inter[0]; R_31 := R_30*R_17; R_31 = 4.0*R_31; R_27 = R_30*R_27;
    R_20 = R_30*R_20; R_18 = R_30*R_18; R_32 := R_30+R_17; R_32 = (-6.0)*R_32;
    R_31 = R_31+R_32; R_31 = 9.0+R_31; R_31 = R_30*R_31; R_18 = R_32+R_18;
    R_18 = 9.0+R_18; R_18 = R_17*R_18; R_19 = R_30*R_19; R_21 = R_30*R_21;
    R_32 = 16.0*R_30; R_33 := (-4.0)+R_32; R_34 := R_9*R_33; R_33 = R_7*R_33;
    R_32 = (-12.0)+R_32; R_35 := R_8*R_32; R_33 = R_35+R_33; R_33 = R_23*R_33;
    R_35 = (-1.0)+R_30; R_35 = R_17*R_35; R_36 := (-8.0)*R_35; R_21 = R_35+R_21;
    R_21 = 1.0+R_21; R_37 := R_12*R_21; R_37 = 16.0*R_37; R_21 = R_5*R_21;
    R_21 = 16.0*R_21; R_38 := 2.0*R_35; R_35 = (-16.0)*R_35; R_39 := (-1.0)*R_30;
    R_38 = R_39+R_38; R_38 = 1.0+R_38; R_5 = R_5*R_38; R_5 = 16.0*R_5;
    R_38 = R_12*R_38; R_38 = 16.0*R_38; R_39 = 1.0+R_39; R_12 = 4.0*R_39;
    R_40 := (-4.0)*R_39; R_41 := R_36+R_40; R_19 = R_41+R_19; R_41 = R_10*R_19;
    R_19 = R_3*R_19; R_40 = R_40+R_35; R_3 = R_3*R_40; R_40 = R_10*R_40;
    R_10 = R_17*R_39; R_10 = (-4.0)*R_10; R_39 = (-12.0)*R_39; R_36 = R_36+R_39;
    R_36 = R_17*R_36; R_12 = R_36+R_12; R_12 = R_20+R_12; R_20 = R_14*R_12;
    R_12 = R_1*R_12; R_35 = R_39+R_35; R_1 = R_1*R_35; R_35 = R_14*R_35;
    R_26 = R_30*R_26; R_14 = 2.0*R_26; R_14 = R_24+R_14; R_14 = 9.0+R_14;
    R_14 = R_17*R_14; R_28 = R_26+R_28; R_28 = 3.0+R_28; R_28 = R_17*R_28;
    R_27 = R_28+R_27; R_27 = (-1.0)+R_27; R_28 = R_13*R_27; R_27 = R_0*R_27;
    R_39 = R_26+R_10; R_39 = 3.0+R_39; R_0 = R_0*R_39; R_39 = R_13*R_39;
    R_26 = R_26+R_24; R_26 = 9.0+R_26; R_26 = R_30*R_26; R_13 = 4.0*R_30;
    R_14 = R_13+R_14; R_14 = (-3.0)+R_14; R_14 = R_15*R_14; R_20 = R_14+R_20;
    R_28 = R_20+R_28; R_18 = R_13+R_18; R_18 = (-3.0)+R_18; R_18 = R_2*R_18;
    R_12 = R_18+R_12; R_27 = R_12+R_27; R_13 = (-6.0)+R_13; R_13 = R_30*R_13;
    R_13 = 4.0+R_13; R_13 = R_17*R_13; R_31 = R_31+R_13; R_31 = (-3.0)+R_31;
    R_31 = R_2*R_31; R_26 = R_26+R_13; R_26 = (-3.0)+R_26; R_26 = R_15*R_26;
    R_25 = R_30*R_25; R_22 = R_22+R_25; R_22 = 2.0*R_22; R_22 = 1.0+R_22;
    R_15 = R_11*R_22; R_22 = R_4*R_22; R_22 = R_21+R_22; R_21 = 2.0*R_25;
    R_21 = R_24+R_21; R_21 = 3.0+R_21; R_2 = R_16*R_21; R_2 = R_15+R_2;
    R_2 = R_41+R_2; R_37 = R_2+R_37; R_21 = R_6*R_21; R_22 = R_21+R_22;
    R_19 = R_22+R_19; R_19 = R_33+R_19; R_19 = R_17*R_19; R_27 = R_19+R_27;
    R_10 = R_25+R_10; R_10 = 1.0+R_10; R_4 = R_4*R_10; R_10 = R_11*R_10;
    R_10 = R_38+R_10; R_10 = R_39+R_10; R_40 = R_10+R_40; R_24 = R_25+R_24;
    R_24 = 3.0+R_24; R_24 = R_30*R_24; R_13 = R_24+R_13; R_13 = (-1.0)+R_13;
    R_6 = R_6*R_13; R_13 = R_16*R_13; R_16 = 8.0*R_30; R_24 = (-4.0)+R_16;
    R_7 = R_7*R_24; R_7 = R_7*R_29; R_4 = R_7+R_4; R_0 = R_4+R_0;
    R_0 = R_5+R_0; R_0 = R_1+R_0; R_3 = R_0+R_3; R_3 = R_30*R_3;
    R_24 = R_9*R_24; R_24 = R_24*R_29; R_24 = R_40+R_24; R_24 = R_35+R_24;
    R_24 = R_30*R_24; R_16 = (-12.0)+R_16; R_16 = R_30*R_16; R_16 = 4.0+R_16;
    R_29 = R_16*R_29; R_8 = R_8*R_29; R_8 = R_31+R_8; R_6 = R_8+R_6;
    R_3 = R_6+R_3; R_6 = pos_nodes[7][0]; R_32 = R_6*R_32; R_34 = R_32+R_34;
    R_34 = R_23*R_34; R_34 = R_37+R_34; R_34 = R_17*R_34; R_34 = R_28+R_34;
    R_28 = R_34*R_3; R_29 = R_6*R_29; R_13 = R_29+R_13; R_26 = R_13+R_26;
    R_24 = R_26+R_24; R_26 = R_24*R_27; R_26 = (-1.0)*R_26; R_28 = R_26+R_28;
    R_28 = 1/R_28; R_34 = R_28*R_34; res(1,1) = R_34; R_24 = R_28*R_24;
    R_24 = (-1.0)*R_24; res(1,0) = R_24; R_27 = R_28*R_27; R_27 = (-1.0)*R_27;
    res(0,1) = R_27; R_3 = R_28*R_3; res(0,0) = R_3; 
    return res
#
def measure( var_inter, pos_nodes )
    R_0 := pos_nodes[8][1]; R_1 := 32.0*R_0; R_0 = (-8.0)*R_0; R_2 := pos_nodes[4][0];
    R_3 := (-1.0)*R_2; R_4 := pos_nodes[6][0]; R_5 := (-1.0)*R_4; R_5 = R_2+R_5;
    R_5 = 8.0*R_5; R_6 := R_2+R_4; R_7 := 4.0*R_6; R_3 = R_4+R_3;
    R_8 := (-4.0)*R_3; R_9 := pos_nodes[2][0]; R_10 := (-1.0)*R_9; R_11 := pos_nodes[1][0];
    R_12 := R_11+R_9; R_13 := (-1.0)*R_11; R_13 = R_9+R_13; R_14 := pos_nodes[0][0];
    R_15 := R_14+R_13; R_16 := R_14+R_11; R_10 = R_16+R_10; R_16 = pos_nodes[3][0];
    R_17 := R_16+R_14; R_11 = R_11+R_17; R_11 = R_9+R_11; R_9 = 8.0*R_11;
    R_17 = (-1.0)*R_17; R_12 = R_17+R_12; R_17 = 2.0*R_12; R_12 = 4.0*R_12;
    R_16 = (-1.0)*R_16; R_15 = R_15+R_16; R_14 = R_14+R_16; R_14 = R_13+R_14;
    R_10 = R_16+R_10; R_16 = (-4.0)*R_10; R_5 = R_16+R_5; R_10 = (-2.0)*R_10;
    R_8 = R_10+R_8; R_10 = pos_nodes[5][1]; R_16 = (-2.0)*R_10; R_13 = (-1.0)*R_10;
    R_18 := pos_nodes[7][1]; R_19 := R_10+R_18; R_19 = 4.0*R_19; R_19 = R_0+R_19;
    R_19 = R_14*R_19; R_13 = R_18+R_13; R_20 := R_3*R_13; R_21 := 8.0*R_13;
    R_22 := 4.0*R_13; R_13 = R_13*R_8; R_13 = (-1.0)*R_13; R_19 = R_13+R_19;
    R_19 = (-1.0)*R_19; R_13 = pos_nodes[6][1]; R_23 := (-1.0)*R_13; R_24 := pos_nodes[4][1];
    R_25 := R_24+R_13; R_26 := 4.0*R_25; R_26 = R_0+R_26; R_26 = R_15*R_26;
    R_25 = R_18+R_25; R_25 = (-16.0)*R_25; R_10 = R_24+R_10; R_10 = R_13+R_10;
    R_10 = R_18+R_10; R_10 = (-16.0)*R_10; R_18 = (-1.0)*R_24; R_18 = R_13+R_18;
    R_18 = (-8.0)*R_18; R_23 = R_24+R_23; R_24 = 4.0*R_23; R_13 = pos_nodes[1][1];
    R_0 = (-1.0)*R_13; R_27 := pos_nodes[2][1]; R_28 := R_13+R_27; R_29 := (-1.0)*R_27;
    R_30 := R_27+R_0; R_31 := pos_nodes[3][1]; R_32 := R_27+R_31; R_32 = R_32+R_0;
    R_33 := (-1.0)*R_31; R_34 := pos_nodes[0][1]; R_35 := R_34+R_31; R_35 = (-1.0)*R_35;
    R_28 = R_35+R_28; R_35 = 4.0*R_28; R_21 = R_35+R_21; R_21 = R_5*R_21;
    R_28 = 2.0*R_28; R_22 = R_28+R_22; R_3 = R_3*R_22; R_8 = R_22*R_8;
    R_22 = R_34+R_27; R_22 = R_0+R_22; R_22 = R_33+R_22; R_13 = R_34+R_13;
    R_27 = R_27+R_13; R_27 = R_31+R_27; R_16 = R_27+R_16; R_16 = 8.0*R_16;
    R_16 = R_1+R_16; R_16 = R_25+R_16; R_15 = R_16*R_15; R_15 = R_21+R_15;
    R_27 = 8.0*R_27; R_27 = R_1+R_27; R_27 = R_10+R_27; R_27 = R_14*R_27;
    R_8 = R_27+R_8; R_13 = R_33+R_13; R_13 = R_29+R_13; R_13 = (-4.0)*R_13;
    R_13 = R_18+R_13; R_18 = (-1.0)*R_34; R_32 = R_18+R_32; R_32 = 2.0*R_32;
    R_24 = R_32+R_24; R_33 = R_34+R_33; R_30 = R_33+R_30; R_33 = pos_nodes[7][0];
    R_6 = R_33+R_6; R_6 = (-16.0)*R_6; R_34 = (-1.0)*R_33; R_32 = pos_nodes[5][0];
    R_2 = R_2+R_32; R_2 = R_4+R_2; R_2 = R_33+R_2; R_2 = (-16.0)*R_2;
    R_4 = (-2.0)*R_32; R_11 = R_4+R_11; R_11 = 8.0*R_11; R_4 = (-1.0)*R_32;
    R_4 = R_33+R_4; R_4 = 8.0*R_4; R_4 = R_12+R_4; R_4 = R_13*R_4;
    R_34 = R_32+R_34; R_13 = R_23*R_34; R_13 = (-1.0)*R_13; R_13 = R_20+R_13;
    R_20 = (-4.0)*R_34; R_20 = R_17+R_20; R_23 = R_23*R_20; R_23 = (-1.0)*R_23;
    R_26 = R_23+R_26; R_20 = R_24*R_20; R_24 = R_34*R_24; R_33 = R_32+R_33;
    R_33 = 4.0*R_33; R_32 = pos_nodes[8][0]; R_34 = 32.0*R_32; R_9 = R_34+R_9;
    R_9 = R_2+R_9; R_9 = R_30*R_9; R_9 = R_20+R_9; R_15 = R_9+R_15;
    R_11 = R_34+R_11; R_11 = R_6+R_11; R_11 = R_22*R_11; R_11 = R_4+R_11;
    R_8 = R_11+R_8; R_8 = (-1.0)*R_8; R_15 = R_8+R_15; R_15 = (1.0/12.0)*R_15;
    R_32 = (-8.0)*R_32; R_7 = R_7+R_32; R_7 = R_22*R_7; R_7 = R_3+R_7;
    R_7 = (-1.0)*R_7; R_26 = R_7+R_26; R_26 = (1.0/12.0)*R_26; R_26 = R_13+R_26;
    R_33 = R_32+R_33; R_30 = R_33*R_30; R_24 = R_30+R_24; R_19 = R_24+R_19;
    R_15 = R_19+R_15; R_15 = (1.0/12.0)*R_15; R_26 = R_15+R_26; res := R_26;
    return res
#
def barycenter( var_inter, pos_nodes )
    res := Vec[ type_promote(var_inter[0],pos_nodes[0][0],mul), 2 ]()
    R_0 := pos_nodes[8][0]; R_1 := 4.0*R_0; R_2 := (-4.0)*R_0; R_3 := 16.0*R_0;
    R_4 := 8.0*R_0; R_5 := 32.0*R_0; R_6 := (-8.0)*R_0; R_7 := pos_nodes[1][1];
    R_8 := (-1.0)*R_7; R_9 := pos_nodes[3][1]; R_10 := (-1.0)*R_9; R_11 := pos_nodes[2][1];
    R_12 := (-1.0)*R_11; R_13 := R_7+R_11; R_14 := R_11+R_8; R_15 := R_11+R_9;
    R_15 = R_15+R_8; R_16 := pos_nodes[0][1]; R_17 := R_16+R_9; R_18 := R_8+R_17;
    R_18 = R_18+R_12; R_18 = (-2.0)*R_18; R_17 = (-1.0)*R_17; R_13 = R_17+R_13;
    R_17 = 4.0*R_13; R_13 = 2.0*R_13; R_7 = R_16+R_7; R_19 := R_10+R_7;
    R_19 = R_12+R_19; R_19 = (-2.0)*R_19; R_7 = R_11+R_7; R_7 = R_9+R_7;
    R_9 = 4.0*R_7; R_12 = 8.0*R_7; R_20 := R_16+R_11; R_20 = R_8+R_20;
    R_20 = R_10+R_20; R_10 = R_16+R_10; R_11 = R_11+R_10; R_8 = R_11+R_8;
    R_10 = R_14+R_10; R_16 = (-1.0)*R_16; R_15 = R_16+R_15; R_16 = 4.0*R_15;
    R_15 = 2.0*R_15; R_14 = pos_nodes[3][0]; R_11 = (-1.0)*R_14; R_21 := pos_nodes[1][0];
    R_22 := (-1.0)*R_21; R_23 := pos_nodes[2][0]; R_24 := R_21+R_23; R_25 := R_14+R_23;
    R_25 = R_22+R_25; R_26 := (-1.0)*R_23; R_27 := R_23+R_22; R_28 := pos_nodes[0][0];
    R_29 := (-1.0)*R_28; R_30 := R_24+R_29; R_30 = R_30+R_11; R_30 = (-2.0)*R_30;
    R_29 = R_25+R_29; R_25 = 4.0*R_29; R_29 = 2.0*R_29; R_31 := R_28+R_11;
    R_31 = R_31+R_27; R_32 := R_31*R_8; R_33 := R_31*R_20; R_14 = R_14+R_28;
    R_34 := (-1.0)*R_14; R_24 = R_34+R_24; R_34 = 2.0*R_24; R_24 = 4.0*R_24;
    R_21 = R_21+R_14; R_21 = R_23+R_21; R_23 = 4.0*R_21; R_3 = R_23+R_3;
    R_23 = 8.0*R_21; R_23 = R_5+R_23; R_26 = R_14+R_26; R_26 = R_22+R_26;
    R_22 = 2.0*R_26; R_14 = (-4.0)*R_26; R_26 = (-2.0)*R_26; R_27 = R_28+R_27;
    R_11 = R_27+R_11; R_27 = R_10*R_11; R_28 = pos_nodes[8][1]; R_35 := 8.0*R_28;
    R_36 := 4.0*R_28; R_37 := (-4.0)*R_28; R_38 := 16.0*R_28; R_9 = R_38+R_9;
    R_38 = 32.0*R_28; R_12 = R_38+R_12; R_39 := (-8.0)*R_28; R_40 := pos_nodes[5][0];
    R_41 := (-2.0)*R_40; R_21 = R_41+R_21; R_21 = 8.0*R_21; R_41 = R_5+R_21;
    R_42 := (-1.0)*R_40; R_43 := pos_nodes[7][0]; R_44 := (-1.0)*R_43; R_44 = R_40+R_44;
    R_45 := R_40+R_43; R_46 := (-2.0)*R_45; R_46 = R_1+R_46; R_1 = 2.0*R_45;
    R_1 = R_2+R_1; R_45 = 4.0*R_45; R_45 = R_6+R_45; R_47 := R_10*R_45;
    R_42 = R_43+R_42; R_48 := (-4.0)*R_42; R_30 = R_30+R_48; R_22 = R_48+R_22;
    R_48 = R_42*R_10; R_48 = (-1.0)*R_48; R_49 := 8.0*R_42; R_24 = R_24+R_49;
    R_50 := R_8*R_24; R_49 = R_14+R_49; R_14 = R_49*R_20; R_51 := 4.0*R_42;
    R_34 = R_51+R_34; R_52 := R_34*R_10; R_26 = R_51+R_26; R_51 = R_26*R_10;
    R_53 := pos_nodes[6][1]; R_54 := (-1.0)*R_53; R_55 := pos_nodes[4][1]; R_56 := (-1.0)*R_55;
    R_56 = R_53+R_56; R_56 = (-8.0)*R_56; R_16 = R_56+R_16; R_56 = R_24*R_16;
    R_57 := R_31*R_16; R_58 := R_49*R_16; R_59 := R_55+R_53; R_60 := 2.0*R_59;
    R_60 = R_60+R_37; R_61 := 4.0*R_59; R_61 = R_39+R_61; R_62 := R_34*R_61;
    R_63 := R_61*R_45; R_64 := R_26*R_61; R_65 := R_42*R_61; R_65 = (-1.0)*R_65;
    R_66 := R_61*R_11; R_54 = R_55+R_54; R_67 := R_34*R_54; R_67 = (-1.0)*R_67;
    R_67 = R_67+R_66; R_68 := R_54*R_45; R_68 = (-1.0)*R_68; R_68 = R_48+R_68;
    R_48 = R_54*R_11; R_48 = (-1.0)*R_48; R_48 = R_65+R_48; R_65 = 4.0*R_54;
    R_19 = R_19+R_65; R_69 := R_19*R_45; R_70 := R_19*R_11; R_71 := R_19*R_42;
    R_71 = (-1.0)*R_71; R_72 := R_47+R_71; R_73 := R_34*R_19; R_65 = R_15+R_65;
    R_15 = R_65*R_45; R_74 := R_65*R_11; R_75 := R_26*R_65; R_76 := R_65*R_42;
    R_76 = (-1.0)*R_76; R_76 = R_76+R_47; R_77 := R_26*R_54; R_77 = (-1.0)*R_77;
    R_78 := R_77+R_66; R_79 := R_54*R_42; R_80 := pos_nodes[5][1]; R_81 := (-2.0)*R_80;
    R_81 = R_7+R_81; R_81 = 8.0*R_81; R_55 = R_55+R_80; R_55 = R_53+R_55;
    R_53 = (-1.0)*R_80; R_7 = pos_nodes[7][1]; R_59 = R_7+R_59; R_59 = (-16.0)*R_59;
    R_59 = R_38+R_59; R_81 = R_59+R_81; R_59 = R_34*R_81; R_38 = R_81*R_45;
    R_82 := R_81*R_26; R_83 := R_81*R_42; R_83 = (-1.0)*R_83; R_84 := R_81*R_11;
    R_55 = R_7+R_55; R_85 := (-2.0)*R_55; R_85 = R_35+R_85; R_35 = (-8.0)*R_55;
    R_9 = R_35+R_9; R_35 = 2.0*R_55; R_35 = R_39+R_35; R_55 = (-16.0)*R_55;
    R_12 = R_55+R_12; R_55 = R_24*R_12; R_86 := R_49*R_12; R_87 := R_31*R_12;
    R_80 = R_80+R_7; R_88 := 2.0*R_80; R_37 = R_88+R_37; R_88 = (-2.0)*R_80;
    R_88 = R_36+R_88; R_80 = 4.0*R_80; R_80 = R_39+R_80; R_39 = R_80*R_24;
    R_36 = R_80*R_49; R_89 := R_31*R_80; R_53 = R_7+R_53; R_7 = R_53*R_24;
    R_7 = (-1.0)*R_7; R_90 := R_53*R_49; R_90 = (-1.0)*R_90; R_91 := R_31*R_53;
    R_91 = (-1.0)*R_91; R_92 := 8.0*R_53; R_92 = R_17+R_92; R_34 = R_34*R_92;
    R_42 = R_42*R_92; R_42 = (-1.0)*R_42; R_63 = R_42+R_63; R_42 = R_26*R_92;
    R_11 = R_92*R_11; R_45 = R_92*R_45; R_45 = R_83+R_45; R_83 = 4.0*R_53;
    R_18 = R_18+R_83; R_83 = R_13+R_83; R_24 = R_83*R_24; R_49 = R_83*R_49;
    R_13 = R_31*R_83; R_17 = pos_nodes[4][0]; R_40 = R_17+R_40; R_93 := (-1.0)*R_17;
    R_94 := pos_nodes[6][0]; R_95 := (-1.0)*R_94; R_95 = R_17+R_95; R_40 = R_94+R_40;
    R_40 = R_43+R_40; R_96 := (-8.0)*R_40; R_3 = R_96+R_3; R_96 = (-2.0)*R_40;
    R_96 = R_4+R_96; R_40 = (-16.0)*R_40; R_23 = R_40+R_23; R_40 = R_19*R_23;
    R_4 = R_81*R_23; R_97 := R_61*R_23; R_42 = R_42+R_97; R_98 := R_54*R_23;
    R_98 = (-1.0)*R_98; R_52 = R_52+R_98; R_51 = R_98+R_51; R_98 = R_23*R_92;
    R_59 = R_59+R_98; R_98 = R_82+R_98; R_82 = R_65*R_23; R_23 = R_10*R_23;
    R_73 = R_73+R_23; R_23 = R_75+R_23; R_17 = R_17+R_94; R_75 = 2.0*R_17;
    R_75 = R_2+R_75; R_2 = 4.0*R_17; R_6 = R_2+R_6; R_2 = R_8*R_6;
    R_99 := R_80*R_6; R_7 = R_7+R_99; R_90 = R_99+R_90; R_99 = R_6*R_12;
    R_24 = R_24+R_99; R_24 = (-1.0)*R_24; R_24 = R_34+R_24; R_24 = R_38+R_24;
    R_24 = R_97+R_24; R_99 = R_49+R_99; R_99 = (-1.0)*R_99; R_42 = R_99+R_42;
    R_42 = (-1.0)*R_42; R_99 = R_6*R_16; R_50 = R_99+R_50; R_99 = R_14+R_99;
    R_14 = R_83*R_6; R_14 = (-1.0)*R_14; R_49 = R_14+R_62; R_49 = R_49*R_54;
    R_97 = R_45+R_14; R_97 = R_70+R_97; R_64 = R_14+R_64; R_14 = R_64*R_95;
    R_64 = (-1.0)*R_64; R_34 = R_53*R_6; R_34 = (-1.0)*R_34; R_6 = R_6*R_20;
    R_17 = R_43+R_17; R_17 = (-16.0)*R_17; R_41 = R_17+R_41; R_43 = R_41*R_12;
    R_43 = (-1.0)*R_43; R_43 = R_43+R_4; R_43 = R_43*R_10; R_100 := R_41*R_16;
    R_101 := R_83*R_41; R_55 = R_101+R_55; R_55 = (-1.0)*R_55; R_59 = R_55+R_59;
    R_55 = R_59*R_19; R_55 = R_43+R_55; R_59 = R_59*R_54; R_59 = (-1.0)*R_59;
    R_43 = R_53*R_41; R_43 = (-1.0)*R_43; R_39 = R_43+R_39; R_43 = R_80*R_41;
    R_41 = R_8*R_41; R_41 = R_56+R_41; R_17 = R_5+R_17; R_21 = R_17+R_21;
    R_17 = R_21*R_12; R_17 = (-1.0)*R_17; R_4 = R_17+R_4; R_4 = R_31*R_4;
    R_17 = R_21*R_80; R_5 = R_21*R_83; R_86 = R_5+R_86; R_86 = (-1.0)*R_86;
    R_98 = R_86+R_98; R_86 = R_98*R_95; R_5 = R_21*R_16; R_56 = R_21*R_53;
    R_56 = (-1.0)*R_56; R_36 = R_56+R_36; R_21 = R_21*R_20; R_58 = R_21+R_58;
    R_93 = R_94+R_93; R_94 = R_8*R_93; R_94 = R_94+R_34; R_94 = (-1.0)*R_94;
    R_94 = R_48+R_94; R_21 = R_94*R_54; R_94 = R_19*R_94; R_56 = R_93*R_16;
    R_32 = R_32+R_56; R_7 = R_32+R_7; R_7 = (-1.0)*R_7; R_33 = R_56+R_33;
    R_33 = R_90+R_33; R_33 = (-1.0)*R_33; R_90 = R_93*R_12; R_13 = R_90+R_13;
    R_50 = R_50+R_13; R_50 = (-1.0)*R_50; R_13 = R_99+R_13; R_13 = (-1.0)*R_13;
    R_99 = R_80*R_93; R_91 = R_99+R_91; R_91 = (-1.0)*R_91; R_68 = R_91+R_68;
    R_91 = R_68*R_53; R_91 = R_21+R_91; R_21 = R_68*R_18; R_99 = R_26*R_68;
    R_68 = R_68*R_44; R_68 = (-1.0)*R_68; R_90 = R_93*R_20; R_90 = R_34+R_90;
    R_90 = (-1.0)*R_90; R_90 = R_48+R_90; R_48 = R_90*R_95; R_34 = R_93*R_83;
    R_2 = R_2+R_34; R_2 = (-1.0)*R_2; R_56 = R_67+R_2; R_37 = R_56*R_37;
    R_32 = R_56*R_60; R_32 = (-1.0)*R_32; R_56 = (-1.0)*R_56; R_34 = R_6+R_34;
    R_34 = (-1.0)*R_34; R_78 = R_34+R_78; R_6 = R_78*R_75; R_6 = (-1.0)*R_6;
    R_6 = R_14+R_6; R_1 = R_78*R_1; R_78 = (-1.0)*R_78; R_14 = (-8.0)*R_93;
    R_14 = R_25+R_14; R_25 = R_19*R_14; R_24 = R_25+R_24; R_25 = R_54*R_14;
    R_25 = (-1.0)*R_25; R_27 = R_25+R_27; R_27 = R_63+R_27; R_7 = R_27+R_7;
    R_7 = R_7*R_10; R_33 = R_27+R_33; R_33 = R_31*R_33; R_65 = R_65*R_14;
    R_65 = R_38+R_65; R_61 = R_61*R_14; R_38 = R_52+R_61; R_38 = R_11+R_38;
    R_11 = R_61+R_11; R_52 = R_52+R_11; R_52 = R_52+R_50; R_52 = R_52*R_53;
    R_52 = (-1.0)*R_52; R_52 = R_37+R_52; R_94 = R_52+R_94; R_94 = R_7+R_94;
    R_11 = R_51+R_11; R_11 = R_13+R_11; R_13 = R_11*R_44; R_30 = R_11*R_30;
    R_30 = R_86+R_30; R_81 = R_81*R_14; R_40 = R_40+R_81; R_81 = R_82+R_81;
    R_82 = R_10*R_14; R_70 = R_70+R_82; R_70 = R_45+R_70; R_74 = R_74+R_82;
    R_74 = R_45+R_74; R_14 = R_92*R_14; R_84 = R_14+R_84; R_73 = R_73+R_84;
    R_84 = R_23+R_84; R_23 = (-4.0)*R_93; R_23 = R_29+R_23; R_8 = R_8*R_23;
    R_8 = R_8+R_57; R_39 = R_8+R_39; R_39 = (-1.0)*R_39; R_70 = R_70+R_39;
    R_54 = R_70*R_54; R_54 = (-1.0)*R_54; R_94 = R_54+R_94; R_97 = R_39+R_97;
    R_62 = R_97+R_62; R_82 = R_62+R_82; R_82 = R_19*R_82; R_98 = R_98*R_23;
    R_90 = R_90*R_23; R_33 = R_90+R_33; R_16 = R_16*R_23; R_43 = R_43+R_16;
    R_43 = (-1.0)*R_43; R_24 = R_43+R_24; R_10 = R_24*R_10; R_16 = R_17+R_16;
    R_16 = (-1.0)*R_16; R_16 = R_65+R_16; R_16 = (-1.0)*R_16; R_42 = R_16+R_42;
    R_42 = R_31*R_42; R_80 = R_80*R_23; R_80 = (-1.0)*R_80; R_31 = R_80+R_69;
    R_31 = R_31*R_53; R_31 = R_49+R_31; R_31 = R_32+R_31; R_38 = R_80+R_38;
    R_38 = R_50+R_38; R_38 = R_69+R_38; R_38 = R_18*R_38; R_15 = R_80+R_15;
    R_80 = R_15*R_44; R_80 = (-1.0)*R_80; R_22 = R_15*R_22; R_30 = R_22+R_30;
    R_12 = R_23*R_12; R_100 = R_100+R_12; R_100 = (-1.0)*R_100; R_40 = R_100+R_40;
    R_18 = R_40*R_18; R_18 = R_55+R_18; R_40 = R_40*R_53; R_40 = (-1.0)*R_40;
    R_40 = R_59+R_40; R_12 = R_5+R_12; R_12 = (-1.0)*R_12; R_81 = R_12+R_81;
    R_26 = R_26*R_81; R_44 = R_81*R_44; R_44 = (-1.0)*R_44; R_30 = R_44+R_30;
    R_20 = R_20*R_23; R_57 = R_20+R_57; R_57 = R_36+R_57; R_57 = (-1.0)*R_57;
    R_57 = R_74+R_57; R_95 = R_57*R_95; R_95 = (-1.0)*R_95; R_95 = R_33+R_95;
    R_13 = R_95+R_13; R_13 = R_1+R_13; R_57 = (-1.0)*R_57; R_64 = R_57+R_64;
    R_64 = R_64*R_23; R_30 = R_64+R_30; R_42 = R_30+R_42; R_83 = R_83*R_23;
    R_83 = R_87+R_83; R_41 = R_41+R_83; R_41 = (-1.0)*R_41; R_73 = R_41+R_73;
    R_41 = R_73*R_9; R_18 = R_41+R_18; R_18 = (-1.0/6400.0)*R_18; R_35 = R_35*R_73;
    R_73 = (-1.0/12.0)*R_73; R_83 = R_58+R_83; R_83 = (-1.0)*R_83; R_84 = R_83+R_84;
    R_83 = R_84*R_3; R_83 = R_26+R_83; R_4 = R_83+R_4; R_4 = R_98+R_4;
    R_4 = (-1.0/6400.0)*R_4; R_98 = R_84*R_96; R_98 = R_42+R_98; R_84 = (-1.0/12.0)*R_84;
    R_23 = R_53*R_23; R_23 = (-1.0)*R_23; R_23 = R_89+R_23; R_23 = (-1.0)*R_23;
    R_67 = R_67+R_23; R_67 = R_47+R_67; R_67 = R_2+R_67; R_71 = R_67+R_71;
    R_71 = R_9*R_71; R_40 = R_71+R_40; R_40 = R_38+R_40; R_40 = R_82+R_40;
    R_40 = R_10+R_40; R_40 = R_35+R_40; R_40 = (-1.0/960.0)*R_40; R_72 = R_23+R_72;
    R_60 = R_60*R_72; R_88 = R_72*R_88; R_88 = R_31+R_88; R_88 = (1.0/80.0)*R_88;
    R_72 = (-1.0)*R_72; R_72 = R_73+R_72; R_56 = R_72+R_56; R_56 = (1.0/12.0)*R_56;
    R_76 = R_23+R_76; R_46 = R_76*R_46; R_6 = R_46+R_6; R_80 = R_6+R_80;
    R_80 = (1.0/80.0)*R_80; R_75 = R_76*R_75; R_13 = R_75+R_13; R_13 = R_99+R_13;
    R_76 = (-1.0)*R_76; R_78 = R_78+R_76; R_78 = R_3*R_78; R_98 = R_78+R_98;
    R_98 = (1.0/960.0)*R_98; R_84 = R_76+R_84; R_84 = (-1.0)*R_84; R_34 = R_84+R_34;
    R_34 = R_77+R_34; R_34 = R_66+R_34; R_34 = (-1.0/12.0)*R_34; R_53 = R_93*R_53;
    R_79 = R_53+R_79; R_85 = R_79*R_85; R_85 = R_91+R_85; R_85 = (1.0/12.0)*R_85;
    R_9 = R_79*R_9; R_94 = R_9+R_94; R_94 = R_21+R_94; R_94 = R_60+R_94;
    R_94 = (-1.0/144.0)*R_94; R_3 = R_79*R_3; R_13 = R_3+R_13; R_13 = (-1.0/144.0)*R_13;
    R_96 = R_79*R_96; R_96 = R_48+R_96; R_68 = R_96+R_68; R_68 = (1.0/12.0)*R_68;
    R_79 = (-1.0)*R_79; R_56 = R_79+R_56; R_28 = R_28*R_56; R_88 = R_28+R_88;
    R_94 = R_88+R_94; R_94 = R_40+R_94; R_18 = R_94+R_18; R_85 = R_18+R_85;
    R_56 = 1/R_56; R_85 = R_56*R_85; res[1] = R_85; R_34 = R_79+R_34;
    R_0 = R_0*R_34; R_80 = R_0+R_80; R_80 = R_4+R_80; R_80 = R_13+R_80;
    R_80 = R_98+R_80; R_80 = R_68+R_80; R_34 = 1/R_34; R_80 = R_34*R_80;
    res[0] = R_80; 
    return res
#
def inertia_operator_for_barycenter( var_inter, pos_nodes )
    R_0 := pos_nodes[8][0]; R_1 := 4.0*R_0; R_2 := 16.0*R_0; R_3 := 8.0*R_0;
    R_4 := 32.0*R_0; R_5 := (-4.0)*R_0; R_6 := (-8.0)*R_0; R_7 := pos_nodes[4][1];
    R_8 := (-1.0)*R_7; R_9 := pos_nodes[6][1]; R_10 := R_7+R_9; R_11 := 2.0*R_10;
    R_12 := 4.0*R_10; R_13 := (-1.0)*R_9; R_13 = R_7+R_13; R_14 := pow(R_13,2);
    R_15 := (-4.0)*R_13; R_16 := 4.0*R_13; R_8 = R_9+R_8; R_17 := (-8.0)*R_8;
    R_18 := (-4.0)*R_8; R_19 := pos_nodes[3][1]; R_20 := (-1.0)*R_19; R_21 := pos_nodes[0][1];
    R_22 := R_21+R_19; R_23 := (-1.0)*R_22; R_24 := (-1.0)*R_21; R_25 := R_21+R_20;
    R_26 := pos_nodes[1][1]; R_27 := R_21+R_26; R_28 := R_20+R_27; R_29 := (-1.0)*R_26;
    R_22 = R_29+R_22; R_30 := pos_nodes[2][1]; R_31 := R_21+R_30; R_31 = R_29+R_31;
    R_31 = R_20+R_31; R_32 := R_26+R_30; R_32 = R_23+R_32; R_23 = 4.0*R_32;
    R_32 = 2.0*R_32; R_27 = R_30+R_27; R_27 = R_19+R_27; R_33 := 4.0*R_27;
    R_34 := 8.0*R_27; R_35 := R_30+R_25; R_35 = R_35+R_29; R_36 := R_30+R_19;
    R_36 = R_36+R_29; R_36 = R_24+R_36; R_37 := (-2.0)*R_36; R_15 = R_37+R_15;
    R_15 = R_15*R_13; R_37 = 2.0*R_36; R_37 = R_37+R_16; R_36 = 4.0*R_36;
    R_36 = R_17+R_36; R_38 := (-1.0)*R_30; R_26 = R_26+R_38; R_26 = (-1.0)*R_26;
    R_26 = R_19+R_26; R_24 = R_26+R_24; R_24 = 2.0*R_24; R_24 = R_24+R_16;
    R_26 = pow(R_24,2); R_22 = R_22+R_38; R_22 = (-2.0)*R_22; R_28 = R_38+R_28;
    R_38 = (-4.0)*R_28; R_38 = R_17+R_38; R_28 = (-2.0)*R_28; R_16 = R_28+R_16;
    R_18 = R_28+R_18; R_29 = R_30+R_29; R_21 = R_21+R_29; R_20 = R_21+R_20;
    R_21 = R_20*R_24; R_30 = R_20*R_13; R_30 = (-1.0)*R_30; R_28 = pow(R_20,2);
    R_25 = R_29+R_25; R_29 = pos_nodes[5][0]; R_17 = (-2.0)*R_29; R_19 = (-1.0)*R_29;
    R_39 := pos_nodes[7][0]; R_40 := (-1.0)*R_39; R_40 = R_29+R_40; R_41 := pow(R_40,2);
    R_42 := R_29+R_39; R_43 := (-2.0)*R_42; R_43 = R_1+R_43; R_1 = 2.0*R_42;
    R_1 = R_5+R_1; R_44 := pow(R_1,2); R_45 := R_1*R_40; R_42 = 4.0*R_42;
    R_42 = R_6+R_42; R_46 := R_37*R_42; R_47 := R_13*R_42; R_47 = (-1.0)*R_47;
    R_48 := R_16*R_42; R_49 := R_25*R_42; R_50 := R_18*R_42; R_51 := R_8*R_42;
    R_19 = R_39+R_19; R_52 := R_19*R_8; R_52 = (-1.0)*R_52; R_53 := R_18*R_19;
    R_53 = (-1.0)*R_53; R_53 = R_49+R_53; R_54 := (-4.0)*R_19; R_55 := R_37*R_19;
    R_55 = (-1.0)*R_55; R_55 = R_55+R_49; R_56 := R_16*R_19; R_56 = (-1.0)*R_56;
    R_57 := R_49+R_56; R_58 := 4.0*R_19; R_59 := 8.0*R_19; R_60 := R_13*R_19;
    R_61 := R_19*R_25; R_61 = (-1.0)*R_61; R_47 = R_61+R_47; R_51 = R_61+R_51;
    R_61 = pos_nodes[6][0]; R_62 := (-1.0)*R_61; R_63 := pos_nodes[4][0]; R_29 = R_63+R_29;
    R_29 = R_61+R_29; R_29 = R_39+R_29; R_64 := (-8.0)*R_29; R_65 := (-2.0)*R_29;
    R_65 = R_3+R_65; R_29 = (-16.0)*R_29; R_3 = R_63+R_61; R_66 := 2.0*R_3;
    R_66 = R_5+R_66; R_5 = pow(R_66,2); R_67 := R_66*R_40; R_68 := R_1*R_66;
    R_69 := 4.0*R_3; R_6 = R_69+R_6; R_69 = R_6*R_38; R_70 := R_6*R_31;
    R_71 := R_6*R_36; R_72 := R_35*R_6; R_3 = R_39+R_3; R_3 = (-16.0)*R_3;
    R_39 = R_4+R_3; R_73 := (-1.0)*R_63; R_73 = R_61+R_73; R_61 = R_73*R_31;
    R_74 := R_35*R_73; R_75 := R_73*R_36; R_76 := (-8.0)*R_73; R_77 := (-4.0)*R_73;
    R_62 = R_63+R_62; R_63 = R_66*R_62; R_63 = (-1.0)*R_63; R_78 := pow(R_62,2);
    R_14 = R_78+R_14; R_78 = R_40*R_62; R_78 = (-1.0)*R_78; R_79 := R_1*R_62;
    R_79 = (-1.0)*R_79; R_80 := R_38*R_62; R_80 = (-1.0)*R_80; R_81 := R_62*R_31;
    R_81 = (-1.0)*R_81; R_82 := 4.0*R_62; R_83 := pos_nodes[8][1]; R_84 := 8.0*R_83;
    R_85 := 4.0*R_83; R_86 := 16.0*R_83; R_33 = R_86+R_33; R_86 = 32.0*R_83;
    R_34 = R_86+R_34; R_87 := (-4.0)*R_83; R_11 = R_11+R_87; R_88 := R_11*R_13;
    R_88 = (-1.0)*R_88; R_88 = R_63+R_88; R_63 = pow(R_11,2); R_63 = R_5+R_63;
    R_5 = R_11*R_20; R_89 := R_11*R_24; R_90 := (-8.0)*R_83; R_12 = R_90+R_12;
    R_91 := R_19*R_12; R_91 = (-1.0)*R_91; R_92 := R_12*R_42; R_93 := pos_nodes[5][1];
    R_94 := (-2.0)*R_93; R_94 = R_27+R_94; R_94 = 8.0*R_94; R_27 = R_86+R_94;
    R_7 = R_7+R_93; R_7 = R_9+R_7; R_9 = (-1.0)*R_93; R_95 := pos_nodes[7][1];
    R_10 = R_95+R_10; R_10 = (-16.0)*R_10; R_27 = R_10+R_27; R_96 := R_27*R_42;
    R_97 := R_27*R_19; R_97 = (-1.0)*R_97; R_10 = R_86+R_10; R_94 = R_10+R_94;
    R_10 = R_94*R_19; R_10 = (-1.0)*R_10; R_86 = R_94*R_42; R_7 = R_95+R_7;
    R_98 := (-2.0)*R_7; R_98 = R_84+R_98; R_84 = (-8.0)*R_7; R_33 = R_84+R_33;
    R_84 = R_33*R_13; R_84 = (-1.0)*R_84; R_99 := R_33*R_20; R_100 := R_33*R_24;
    R_101 := R_11*R_33; R_102 := pow(R_33,2); R_103 := 2.0*R_7; R_103 = R_90+R_103;
    R_7 = (-16.0)*R_7; R_34 = R_7+R_34; R_7 = R_62*R_34; R_7 = (-1.0)*R_7;
    R_104 := R_73*R_34; R_105 := R_6*R_34; R_106 := (-1.0)*R_95; R_106 = R_93+R_106;
    R_107 := R_33*R_106; R_108 := R_11*R_106; R_109 := R_106*R_13; R_109 = (-1.0)*R_109;
    R_110 := R_106*R_20; R_111 := R_106*R_24; R_112 := pow(R_106,2); R_41 = R_112+R_41;
    R_93 = R_93+R_95; R_112 = (-2.0)*R_93; R_112 = R_85+R_112; R_85 = 2.0*R_93;
    R_87 = R_85+R_87; R_85 = R_87*R_13; R_85 = (-1.0)*R_85; R_110 = R_85+R_110;
    R_85 = R_87*R_20; R_111 = R_85+R_111; R_85 = R_87*R_24; R_113 := R_33*R_87;
    R_114 := R_11*R_87; R_115 := pow(R_87,2); R_44 = R_115+R_44; R_115 = R_87*R_106;
    R_45 = R_115+R_45; R_93 = 4.0*R_93; R_93 = R_90+R_93; R_90 = R_93*R_6;
    R_115 = R_93*R_73; R_116 := R_93*R_62; R_116 = (-1.0)*R_116; R_9 = R_95+R_9;
    R_95 = R_9*R_62; R_95 = (-1.0)*R_95; R_52 = R_95+R_52; R_95 = R_52*R_63;
    R_117 := R_52*R_44; R_118 := R_9*R_6; R_118 = (-1.0)*R_118; R_81 = R_81+R_118;
    R_81 = (-1.0)*R_81; R_61 = R_118+R_61; R_61 = (-1.0)*R_61; R_118 = R_74+R_118;
    R_118 = (-1.0)*R_118; R_74 = 8.0*R_9; R_74 = R_23+R_74; R_19 = R_19*R_74;
    R_19 = (-1.0)*R_19; R_92 = R_19+R_92; R_42 = R_74*R_42; R_97 = R_42+R_97;
    R_42 = R_10+R_42; R_10 = 4.0*R_9; R_22 = R_22+R_10; R_19 = R_22*R_6;
    R_19 = (-1.0)*R_19; R_23 = R_22*R_62; R_23 = (-1.0)*R_23; R_23 = R_70+R_23;
    R_23 = (-1.0)*R_23; R_10 = R_32+R_10; R_32 = R_11*R_10; R_119 := R_33*R_10;
    R_120 := R_10*R_13; R_120 = (-1.0)*R_120; R_120 = R_5+R_120; R_5 = R_20*R_10;
    R_5 = R_89+R_5; R_84 = R_5+R_84; R_5 = R_24*R_10; R_99 = R_5+R_99;
    R_5 = pow(R_10,2); R_89 = R_87*R_10; R_121 := R_106*R_10; R_6 = R_10*R_6;
    R_6 = (-1.0)*R_6; R_122 := R_42+R_6; R_123 := R_73*R_10; R_70 = R_70+R_123;
    R_70 = (-1.0)*R_70; R_123 = R_72+R_123; R_123 = (-1.0)*R_123; R_73 = R_73*R_9;
    R_60 = R_73+R_60; R_73 = R_60*R_65; R_98 = R_60*R_98; R_72 = R_60*R_33;
    R_124 := (-1.0)*R_60; R_125 := pos_nodes[1][0]; R_126 := (-1.0)*R_125; R_127 := pos_nodes[2][0];
    R_128 := (-1.0)*R_127; R_129 := R_125+R_127; R_130 := R_127+R_126; R_131 := pos_nodes[3][0];
    R_132 := R_131+R_127; R_132 = R_126+R_132; R_133 := (-1.0)*R_131; R_134 := pos_nodes[0][0];
    R_135 := R_134+R_125; R_135 = R_135+R_128; R_135 = R_133+R_135; R_135 = (-4.0)*R_135;
    R_135 = R_135+R_76; R_136 := R_18*R_135; R_136 = R_96+R_136; R_96 = R_135*R_25;
    R_137 := R_135*R_8; R_138 := R_135*R_12; R_139 := R_135*R_27; R_135 = R_135*R_74;
    R_140 := R_134+R_130; R_140 = R_140+R_133; R_141 := R_18*R_140; R_141 = R_96+R_141;
    R_141 = R_97+R_141; R_97 = R_8*R_140; R_97 = R_91+R_97; R_97 = R_81+R_97;
    R_81 = R_97*R_88; R_96 = R_27*R_140; R_96 = R_135+R_96; R_135 = R_37*R_140;
    R_142 := R_13*R_140; R_142 = (-1.0)*R_142; R_142 = R_91+R_142; R_61 = R_142+R_61;
    R_91 = R_61*R_62; R_73 = R_91+R_73; R_118 = R_142+R_118; R_142 = R_118*R_13;
    R_118 = R_16*R_118; R_91 = R_25*R_140; R_137 = R_137+R_91; R_137 = R_92+R_137;
    R_143 := R_74*R_140; R_138 = R_143+R_138; R_144 := R_16*R_140; R_122 = R_144+R_122;
    R_145 := R_12*R_140; R_140 = R_94*R_140; R_131 = R_131+R_134; R_128 = R_131+R_128;
    R_128 = R_126+R_128; R_126 = 2.0*R_128; R_126 = R_54+R_126; R_146 := (-4.0)*R_128;
    R_146 = R_146+R_59; R_147 := R_9*R_146; R_147 = (-1.0)*R_147; R_147 = R_90+R_147;
    R_148 := R_10*R_146; R_148 = R_148+R_105; R_148 = (-1.0)*R_148; R_149 := R_146*R_31;
    R_149 = R_149+R_71; R_150 := R_146*R_34; R_151 := R_93*R_146; R_146 = R_146*R_36;
    R_128 = (-2.0)*R_128; R_128 = R_58+R_128; R_152 := R_128*R_66; R_32 = R_152+R_32;
    R_152 = R_128*R_27; R_153 := R_128*R_62; R_153 = (-1.0)*R_153; R_154 := pow(R_128,2);
    R_5 = R_154+R_5; R_154 = R_128*R_1; R_155 := R_128*R_40; R_155 = R_68+R_155;
    R_68 = R_128*R_8; R_68 = R_145+R_68; R_68 = R_23+R_68; R_44 = R_68*R_44;
    R_23 = R_128*R_18; R_156 := R_128*R_74; R_157 := R_128*R_25; R_158 := R_94*R_128;
    R_159 := R_128*R_12; R_19 = R_159+R_19; R_159 = R_6+R_159; R_160 := R_159*R_62;
    R_159 = (-1.0)*R_159; R_161 := R_128*R_37; R_162 := R_128*R_13; R_162 = (-1.0)*R_162;
    R_163 := R_162+R_145; R_163 = R_70+R_163; R_164 := R_163*R_66; R_164 = (-1.0)*R_164;
    R_164 = R_160+R_164; R_160 = R_163*R_1; R_163 = (-1.0)*R_163; R_125 = R_125+R_131;
    R_125 = R_127+R_125; R_127 = 4.0*R_125; R_2 = R_127+R_2; R_2 = R_64+R_2;
    R_64 = R_128*R_2; R_119 = R_64+R_119; R_64 = R_2*R_62; R_64 = (-1.0)*R_64;
    R_127 = R_66*R_2; R_101 = R_127+R_101; R_101 = 2.0*R_101; R_101 = R_5+R_101;
    R_5 = R_52*R_101; R_127 = pow(R_2,2); R_102 = R_127+R_102; R_102 = R_52*R_102;
    R_127 = R_2*R_40; R_127 = R_154+R_127; R_154 = R_1*R_2; R_113 = R_154+R_113;
    R_113 = 2.0*R_113; R_60 = R_60*R_2; R_154 = 8.0*R_125; R_154 = R_4+R_154;
    R_154 = R_29+R_154; R_27 = R_27*R_154; R_8 = R_8*R_154; R_8 = R_157+R_8;
    R_8 = R_138+R_8; R_18 = R_18*R_154; R_18 = R_139+R_18; R_139 = R_37*R_154;
    R_138 = R_94*R_154; R_29 = R_16*R_154; R_165 := R_154*R_74; R_152 = R_165+R_152;
    R_158 = R_158+R_165; R_166 := R_13*R_154; R_166 = (-1.0)*R_166; R_157 = R_166+R_157;
    R_167 := R_12*R_154; R_156 = R_156+R_167; R_148 = R_148+R_156; R_148 = (-1.0)*R_148;
    R_154 = R_25*R_154; R_23 = R_154+R_23; R_23 = R_96+R_23; R_161 = R_161+R_154;
    R_125 = R_17+R_125; R_125 = 8.0*R_125; R_39 = R_39+R_125; R_17 = R_39*R_22;
    R_96 = R_39*R_38; R_168 := R_39*R_34; R_168 = (-1.0)*R_168; R_27 = R_168+R_27;
    R_168 = R_168+R_138; R_169 := R_39*R_93; R_170 := R_39*R_10; R_150 = R_170+R_150;
    R_150 = (-1.0)*R_150; R_158 = R_150+R_158; R_150 = R_158*R_62; R_170 = R_39*R_36;
    R_171 := R_39*R_9; R_171 = (-1.0)*R_171; R_151 = R_171+R_151; R_39 = R_39*R_31;
    R_146 = R_39+R_146; R_125 = R_4+R_125; R_125 = R_3+R_125; R_3 = R_125*R_34;
    R_3 = (-1.0)*R_3; R_138 = R_3+R_138; R_138 = R_138*R_25; R_3 = R_125*R_36;
    R_4 = R_10*R_125; R_172 := R_9*R_125; R_172 = (-1.0)*R_172; R_173 := R_93*R_125;
    R_125 = R_35*R_125; R_131 = (-1.0)*R_131; R_131 = R_131+R_129; R_174 := 2.0*R_131;
    R_174 = R_58+R_174; R_58 = R_174*R_94; R_165 = R_58+R_165; R_58 = R_174*R_25;
    R_166 = R_58+R_166; R_58 = R_174*R_12; R_6 = R_6+R_58; R_6 = R_6*R_13;
    R_175 := R_174*R_74; R_176 := R_174*R_13; R_176 = (-1.0)*R_176; R_176 = R_176+R_145;
    R_177 := R_176+R_123; R_178 := R_177*R_87; R_179 := R_177*R_11; R_179 = (-1.0)*R_179;
    R_177 = (-1.0)*R_177; R_174 = R_174*R_16; R_154 = R_174+R_154; R_131 = 4.0*R_131;
    R_59 = R_131+R_59; R_131 = R_22*R_59; R_131 = R_105+R_131; R_131 = (-1.0)*R_131;
    R_131 = R_156+R_131; R_156 = R_59*R_31; R_156 = R_69+R_156; R_69 = R_38*R_59;
    R_69 = R_39+R_69; R_39 = R_9*R_59; R_39 = (-1.0)*R_39; R_90 = R_39+R_90;
    R_39 = R_59*R_34; R_17 = R_39+R_17; R_17 = (-1.0)*R_17; R_152 = R_17+R_152;
    R_39 = R_4+R_39; R_39 = (-1.0)*R_39; R_165 = R_39+R_165; R_39 = R_165*R_16;
    R_39 = R_138+R_39; R_165 = R_165*R_13; R_165 = (-1.0)*R_165; R_138 = R_35*R_59;
    R_138 = R_71+R_138; R_71 = R_93*R_59; R_171 = R_71+R_171; R_71 = R_172+R_71;
    R_172 = R_10*R_59; R_105 = R_172+R_105; R_105 = (-1.0)*R_105; R_105 = R_175+R_105;
    R_105 = R_86+R_105; R_105 = R_167+R_105; R_59 = R_59*R_36; R_125 = R_59+R_125;
    R_59 = (-1.0)*R_134; R_129 = R_129+R_59; R_129 = R_129+R_133; R_129 = (-2.0)*R_129;
    R_54 = R_129+R_54; R_59 = R_132+R_59; R_132 = 4.0*R_59; R_76 = R_132+R_76;
    R_37 = R_37*R_76; R_37 = R_86+R_37; R_86 = R_13*R_76; R_86 = (-1.0)*R_86;
    R_91 = R_86+R_91; R_91 = R_92+R_91; R_94 = R_94*R_76; R_139 = R_139+R_94;
    R_94 = R_29+R_94; R_12 = R_12*R_76; R_29 = R_12+R_143; R_157 = R_157+R_29;
    R_29 = R_166+R_29; R_12 = R_166+R_12; R_12 = R_143+R_12; R_143 = R_25*R_76;
    R_135 = R_135+R_143; R_135 = R_42+R_135; R_144 = R_144+R_143; R_144 = R_42+R_144;
    R_42 = R_16*R_76; R_105 = R_42+R_105; R_76 = R_74*R_76; R_140 = R_76+R_140;
    R_161 = R_161+R_140; R_140 = R_154+R_140; R_59 = 2.0*R_59; R_77 = R_59+R_77;
    R_154 = R_66*R_77; R_76 = R_128*R_77; R_74 = R_2*R_77; R_100 = R_74+R_100;
    R_100 = R_97*R_100; R_74 = R_40*R_77; R_42 = R_1*R_77; R_42 = R_85+R_42;
    R_85 = R_42*R_19; R_42 = R_42*R_97; R_166 = pow(R_77,2); R_26 = R_166+R_26;
    R_26 = R_113+R_26; R_113 = R_26*R_68; R_26 = R_26*R_52; R_166 = R_62*R_77;
    R_166 = (-1.0)*R_166; R_158 = R_158*R_77; R_61 = R_61*R_77; R_92 = R_31*R_77;
    R_86 = R_77*R_34; R_170 = R_170+R_86; R_170 = (-1.0)*R_170; R_139 = R_170+R_139;
    R_170 = R_128*R_139; R_139 = R_139*R_40; R_139 = (-1.0)*R_139; R_86 = R_3+R_86;
    R_86 = (-1.0)*R_86; R_94 = R_86+R_94; R_86 = R_94*R_22; R_86 = R_39+R_86;
    R_94 = R_94*R_9; R_94 = (-1.0)*R_94; R_94 = R_165+R_94; R_165 = R_93*R_77;
    R_165 = (-1.0)*R_165; R_46 = R_165+R_46; R_39 = R_46*R_40; R_39 = (-1.0)*R_39;
    R_126 = R_46*R_126; R_46 = R_165+R_48; R_46 = R_46*R_9; R_46 = R_6+R_46;
    R_46 = R_179+R_46; R_12 = R_165+R_12; R_165 = R_35*R_77; R_179 = R_36*R_77;
    R_6 = R_169+R_179; R_6 = (-1.0)*R_6; R_6 = R_37+R_6; R_6 = (-1.0)*R_6;
    R_148 = R_6+R_148; R_179 = R_173+R_179; R_179 = (-1.0)*R_179; R_105 = R_179+R_105;
    R_105 = R_105*R_25; R_179 = R_9*R_77; R_179 = (-1.0)*R_179; R_173 = R_10*R_77;
    R_59 = R_82+R_59; R_82 = R_59*R_38; R_169 = R_82+R_169; R_169 = (-1.0)*R_169;
    R_136 = R_169+R_136; R_169 = R_59*R_31; R_82 = R_59*R_34; R_82 = R_96+R_82;
    R_82 = (-1.0)*R_82; R_18 = R_82+R_18; R_82 = R_22*R_59; R_96 = R_59*R_9;
    R_96 = (-1.0)*R_96; R_59 = R_59*R_93; R_59 = (-1.0)*R_59; R_50 = R_59+R_50;
    R_59 = R_50*R_32; R_133 = R_134+R_133; R_130 = R_133+R_130; R_133 = R_130*R_66;
    R_153 = R_133+R_153; R_120 = R_153+R_120; R_153 = R_136*R_120; R_133 = R_130*R_128;
    R_133 = R_154+R_133; R_64 = R_133+R_64; R_84 = R_64+R_84; R_64 = R_97*R_84;
    R_133 = R_130*R_2; R_133 = R_76+R_133; R_99 = R_133+R_99; R_133 = R_130*R_77;
    R_133 = R_127+R_133; R_133 = R_21+R_133; R_89 = R_133+R_89; R_107 = R_89+R_107;
    R_89 = R_130*R_62; R_89 = (-1.0)*R_89; R_38 = R_130*R_38; R_38 = R_169+R_38;
    R_171 = R_38+R_171; R_171 = (-1.0)*R_171; R_141 = R_171+R_141; R_88 = R_141*R_88;
    R_84 = R_141*R_84; R_171 = R_130*R_40; R_171 = R_79+R_171; R_79 = R_130*R_1;
    R_74 = R_79+R_74; R_74 = R_111+R_74; R_111 = R_74*R_131; R_79 = R_130*R_22;
    R_79 = R_7+R_79; R_79 = R_156+R_79; R_79 = (-1.0)*R_79; R_8 = R_79+R_8;
    R_79 = R_107*R_8; R_156 = R_8*R_45; R_7 = pow(R_130,2); R_28 = R_7+R_28;
    R_168 = R_130*R_168; R_31 = R_130*R_31; R_80 = R_80+R_31; R_80 = R_90+R_80;
    R_80 = (-1.0)*R_80; R_137 = R_80+R_137; R_120 = R_137*R_120; R_99 = R_137*R_99;
    R_74 = R_74*R_137; R_31 = R_75+R_31; R_31 = R_147+R_31; R_31 = (-1.0)*R_31;
    R_31 = R_91+R_31; R_31 = R_130*R_31; R_31 = R_61+R_31; R_148 = R_130*R_148;
    R_35 = R_130*R_35; R_75 = R_35+R_75; R_90 = R_75+R_90; R_90 = (-1.0)*R_90;
    R_90 = R_91+R_90; R_25 = R_90*R_25; R_90 = R_130*R_10; R_90 = R_104+R_90;
    R_149 = R_149+R_90; R_149 = (-1.0)*R_149; R_157 = R_149+R_157; R_149 = R_157*R_40;
    R_54 = R_157*R_54; R_54 = R_150+R_54; R_54 = R_126+R_54; R_54 = R_139+R_54;
    R_90 = R_138+R_90; R_90 = (-1.0)*R_90; R_29 = R_29+R_90; R_29 = R_29*R_9;
    R_29 = (-1.0)*R_29; R_29 = R_178+R_29; R_118 = R_29+R_118; R_118 = R_25+R_118;
    R_12 = R_90+R_12; R_12 = R_48+R_12; R_12 = R_22*R_12; R_36 = R_130*R_36;
    R_92 = R_92+R_36; R_92 = R_151+R_92; R_92 = (-1.0)*R_92; R_92 = R_135+R_92;
    R_135 = R_92*R_62; R_135 = (-1.0)*R_135; R_135 = R_31+R_135; R_149 = R_135+R_149;
    R_149 = R_160+R_149; R_92 = (-1.0)*R_92; R_159 = R_92+R_159; R_159 = R_159*R_77;
    R_54 = R_159+R_54; R_148 = R_54+R_148; R_36 = R_165+R_36; R_71 = R_36+R_71;
    R_71 = (-1.0)*R_71; R_144 = R_144+R_71; R_144 = R_144*R_13; R_144 = (-1.0)*R_144;
    R_118 = R_144+R_118; R_118 = R_72+R_118; R_122 = R_71+R_122; R_58 = R_122+R_58;
    R_143 = R_58+R_143; R_143 = R_16*R_143; R_93 = R_130*R_93; R_96 = R_93+R_96;
    R_96 = (-1.0)*R_96; R_53 = R_96+R_53; R_63 = R_53*R_63; R_101 = R_53*R_101;
    R_179 = R_93+R_179; R_179 = (-1.0)*R_179; R_55 = R_179+R_55; R_43 = R_55*R_43;
    R_164 = R_43+R_164; R_39 = R_164+R_39; R_39 = (1.0/80.0)*R_39; R_164 = R_55*R_66;
    R_149 = R_164+R_149; R_55 = (-1.0)*R_55; R_163 = R_163+R_55; R_163 = R_2*R_163;
    R_176 = R_176+R_179; R_176 = R_49+R_176; R_176 = R_123+R_176; R_56 = R_176+R_56;
    R_56 = R_33*R_56; R_94 = R_56+R_94; R_94 = R_12+R_94; R_94 = R_143+R_94;
    R_94 = R_105+R_94; R_57 = R_179+R_57; R_179 = R_11*R_57; R_112 = R_57*R_112;
    R_112 = R_46+R_112; R_112 = (1.0/80.0)*R_112; R_57 = (-1.0)*R_57; R_34 = R_130*R_34;
    R_82 = R_34+R_82; R_82 = R_69+R_82; R_82 = (-1.0)*R_82; R_23 = R_82+R_23;
    R_173 = R_34+R_173; R_146 = R_146+R_173; R_146 = (-1.0)*R_146; R_161 = R_146+R_161;
    R_146 = R_161*R_2; R_146 = R_170+R_146; R_168 = R_146+R_168; R_168 = R_158+R_168;
    R_168 = (-1.0/6400.0)*R_168; R_65 = R_161*R_65; R_65 = R_148+R_65; R_65 = R_163+R_65;
    R_65 = (1.0/960.0)*R_65; R_161 = (-1.0/12.0)*R_161; R_161 = R_55+R_161; R_161 = (-1.0)*R_161;
    R_70 = R_161+R_70; R_70 = R_162+R_70; R_70 = R_145+R_70; R_70 = (-1.0/12.0)*R_70;
    R_70 = R_124+R_70; R_145 = R_0*R_70; R_39 = R_145+R_39; R_39 = R_168+R_39;
    R_70 = 1/R_70; R_173 = R_125+R_173; R_173 = (-1.0)*R_173; R_140 = R_173+R_140;
    R_173 = R_140*R_33; R_86 = R_173+R_86; R_86 = (-1.0/6400.0)*R_86; R_103 = R_103*R_140;
    R_94 = R_103+R_94; R_94 = (-1.0/960.0)*R_94; R_140 = (-1.0/12.0)*R_140; R_57 = R_140+R_57;
    R_177 = R_57+R_177; R_177 = (1.0/12.0)*R_177; R_177 = R_124+R_177; R_124 = R_83*R_177;
    R_112 = R_124+R_112; R_177 = 1/R_177; R_124 = R_130*R_9; R_124 = (-1.0)*R_124;
    R_115 = R_115+R_124; R_115 = (-1.0)*R_115; R_47 = R_115+R_47; R_115 = R_128*R_47;
    R_149 = R_115+R_149; R_149 = R_60+R_149; R_149 = (-1.0/144.0)*R_149; R_39 = R_149+R_39;
    R_39 = R_65+R_39; R_65 = R_47*R_40; R_65 = (-1.0)*R_65; R_65 = R_73+R_65;
    R_65 = (1.0/12.0)*R_65; R_39 = R_65+R_39; R_39 = R_70*R_39; R_39 = (-1.0)*R_39;
    R_39 = R_0+R_39; R_62 = R_39*R_62; R_62 = (-1.0)*R_62; R_66 = R_66*R_39;
    R_0 = pow(R_39,2); R_128 = R_128*R_39; R_128 = R_67+R_128; R_89 = R_128+R_89;
    R_89 = R_30+R_89; R_108 = R_89+R_108; R_130 = R_130*R_39; R_130 = R_78+R_130;
    R_77 = R_39*R_77; R_77 = R_171+R_77; R_2 = R_2*R_39; R_2 = R_155+R_2;
    R_166 = R_2+R_166; R_15 = R_166+R_15; R_114 = R_15+R_114; R_121 = R_114+R_121;
    R_1 = R_1*R_39; R_40 = R_39*R_40; R_9 = R_47*R_9; R_9 = R_142+R_9;
    R_98 = R_9+R_98; R_98 = (1.0/12.0)*R_98; R_22 = R_47*R_22; R_118 = R_22+R_118;
    R_118 = R_179+R_118; R_118 = (-1.0/144.0)*R_118; R_118 = R_112+R_118; R_118 = R_94+R_118;
    R_86 = R_118+R_86; R_98 = R_86+R_98; R_98 = R_177*R_98; R_98 = (-1.0)*R_98;
    R_98 = R_83+R_98; R_13 = R_13*R_98; R_13 = (-1.0)*R_13; R_62 = R_13+R_62;
    R_13 = R_62*R_19; R_81 = R_13+R_81; R_81 = 2.0*R_81; R_13 = R_62*R_97;
    R_13 = 2.0*R_13; R_83 = R_62*R_152; R_62 = R_62*R_141; R_11 = R_11*R_98;
    R_11 = R_66+R_11; R_11 = 2.0*R_11; R_14 = R_11+R_14; R_11 = R_14*R_68;
    R_95 = R_11+R_95; R_81 = R_95+R_81; R_81 = (1.0/80.0)*R_81; R_95 = R_14*R_52;
    R_11 = R_14*R_23; R_14 = R_14*R_53; R_66 = pow(R_98,2); R_0 = R_66+R_0;
    R_66 = R_52*R_0; R_177 = R_68*R_0; R_177 = R_13+R_177; R_177 = R_95+R_177;
    R_177 = (1.0/12.0)*R_177; R_66 = R_177+R_66; R_81 = R_66+R_81; R_66 = R_53*R_0;
    R_0 = R_23*R_0; R_10 = R_10*R_98; R_10 = R_108+R_10; R_108 = R_10*R_8;
    R_177 = R_10*R_18; R_79 = R_177+R_79; R_79 = R_59+R_79; R_59 = R_50*R_10;
    R_20 = R_20*R_98; R_20 = R_109+R_20; R_130 = R_20+R_130; R_131 = R_130*R_131;
    R_137 = R_130*R_137; R_27 = R_130*R_27; R_136 = R_130*R_136; R_24 = R_24*R_98;
    R_24 = R_110+R_24; R_77 = R_24+R_77; R_19 = R_77*R_19; R_97 = R_77*R_97;
    R_152 = R_77*R_152; R_141 = R_77*R_141; R_33 = R_33*R_98; R_33 = R_121+R_33;
    R_33 = 2.0*R_33; R_28 = R_33+R_28; R_33 = R_28*R_68; R_33 = R_11+R_33;
    R_33 = R_63+R_33; R_33 = R_5+R_33; R_5 = R_52*R_28; R_5 = R_14+R_5;
    R_14 = R_28*R_23; R_113 = R_14+R_113; R_113 = R_101+R_113; R_113 = R_102+R_113;
    R_28 = R_53*R_28; R_26 = R_28+R_26; R_26 = R_44+R_26; R_87 = R_87*R_98;
    R_1 = R_87+R_1; R_1 = 2.0*R_1; R_1 = R_41+R_1; R_52 = R_52*R_1;
    R_68 = R_68*R_1; R_5 = R_68+R_5; R_5 = R_0+R_5; R_23 = R_23*R_1;
    R_26 = R_23+R_26; R_1 = R_53*R_1; R_98 = R_106*R_98; R_40 = R_98+R_40;
    R_8 = R_8*R_40; R_18 = R_18*R_40; R_50 = R_50*R_40; R_116 = R_124+R_116;
    R_116 = (-1.0)*R_116; R_51 = R_116+R_51; R_32 = R_51*R_32; R_32 = R_108+R_32;
    R_32 = R_19+R_32; R_32 = R_131+R_32; R_32 = R_83+R_32; R_32 = R_88+R_32;
    R_32 = R_120+R_32; R_32 = R_64+R_32; R_32 = 2.0*R_32; R_32 = R_33+R_32;
    R_32 = (1.0/80.0)*R_32; R_40 = R_51*R_40; R_40 = 2.0*R_40; R_40 = R_52+R_40;
    R_66 = R_40+R_66; R_10 = R_51*R_10; R_62 = R_10+R_62; R_62 = R_137+R_62;
    R_62 = R_97+R_62; R_62 = R_8+R_62; R_62 = 2.0*R_62; R_62 = R_5+R_62;
    R_62 = (1.0/12.0)*R_62; R_66 = R_62+R_66; R_32 = R_66+R_32; R_32 = (1.0/12.0)*R_32;
    R_81 = R_32+R_81; R_119 = R_51*R_119; R_79 = R_119+R_79; R_79 = R_85+R_79;
    R_79 = R_111+R_79; R_79 = R_152+R_79; R_79 = R_27+R_79; R_79 = R_153+R_79;
    R_79 = R_84+R_79; R_79 = R_99+R_79; R_79 = R_100+R_79; R_79 = 2.0*R_79;
    R_79 = R_113+R_79; R_79 = (1.0/80.0)*R_79; R_107 = R_51*R_107; R_107 = R_59+R_107;
    R_107 = R_136+R_107; R_107 = R_141+R_107; R_107 = R_74+R_107; R_107 = R_42+R_107;
    R_107 = R_156+R_107; R_107 = R_18+R_107; R_107 = 2.0*R_107; R_107 = R_26+R_107;
    R_107 = (1.0/12.0)*R_107; R_117 = R_107+R_117; R_117 = R_1+R_117; R_79 = R_117+R_79;
    R_45 = R_51*R_45; R_50 = R_45+R_50; R_50 = 2.0*R_50; R_79 = R_50+R_79;
    R_79 = (1.0/80.0)*R_79; R_81 = R_79+R_81; res := R_81; 
    return res
