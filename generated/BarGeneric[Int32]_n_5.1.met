static const nvi := 1
static const nb_nodes := 6
static const nb_vertex_nodes := 2
static const center_of_var_inter := [ 1.0/2.0 ]
#
def interpolation( var_inter, val, interpolation_base )
    if interpolation_base == "lagrange"
        return val[0]*(1+((375.0/8.0+((625.0/8.0-625.0/24.0*var_inter[0])*var_inter[0]-2125.0/24.0)*var_inter[0])*var_inter[0]-137.0/12.0)*var_inter[0])+(25+((8875.0/24.0+(3125.0/24.0*var_inter[0]-4375.0/12.0)*var_inter[0])*var_inter[0]-1925.0/12.0)*var_inter[0])*var_inter[0]*val[1]+((2675.0/12.0+((8125.0/12.0-3125.0/12.0*var_inter[0])*var_inter[0]-7375.0/12.0)*var_inter[0])*var_inter[0]-25)*var_inter[0]*val[2]+val[3]*(50.0/3.0+((6125.0/12.0+(3125.0/12.0*var_inter[0]-625)*var_inter[0])*var_inter[0]-325.0/2.0)*var_inter[0])*var_inter[0]+val[4]*((1525.0/24.0+((6875.0/24.0-3125.0/24.0*var_inter[0])*var_inter[0]-5125.0/24.0)*var_inter[0])*var_inter[0]-25.0/4.0)*var_inter[0]+(1+((875.0/24.0+(625.0/24.0*var_inter[0]-625.0/12.0)*var_inter[0])*var_inter[0]-125.0/12.0)*var_inter[0])*var_inter[0]*val[5]
    else if interpolation_base == "hierarchical"
        return var_inter[0]*val[5]+val[0]*(1-var_inter[0])+(25+((8875.0/24.0+(3125.0/24.0*var_inter[0]-4375.0/12.0)*var_inter[0])*var_inter[0]-1925.0/12.0)*var_inter[0])*var_inter[0]*val[1]+((2675.0/12.0+((8125.0/12.0-3125.0/12.0*var_inter[0])*var_inter[0]-7375.0/12.0)*var_inter[0])*var_inter[0]-25)*var_inter[0]*val[2]+val[3]*(50.0/3.0+((6125.0/12.0+(3125.0/12.0*var_inter[0]-625)*var_inter[0])*var_inter[0]-325.0/2.0)*var_inter[0])*var_inter[0]+val[4]*((1525.0/24.0+((6875.0/24.0-3125.0/24.0*var_inter[0])*var_inter[0]-5125.0/24.0)*var_inter[0])*var_inter[0]-25.0/4.0)*var_inter[0]

#
def generic_interpolation( var_inter, val, interpolation_base, deg ) when deg == 5
    if interpolation_base == "lagrange"
        return (25+((8875.0/24.0+(3125.0/24.0*var_inter[0]-4375.0/12.0)*var_inter[0])*var_inter[0]-1925.0/12.0)*var_inter[0])*var_inter[0]*val[1]+(1+((375.0/8.0+((625.0/8.0-625.0/24.0*var_inter[0])*var_inter[0]-2125.0/24.0)*var_inter[0])*var_inter[0]-137.0/12.0)*var_inter[0])*val[0]+((2675.0/12.0+((8125.0/12.0-3125.0/12.0*var_inter[0])*var_inter[0]-7375.0/12.0)*var_inter[0])*var_inter[0]-25)*var_inter[0]*val[2]+(50.0/3.0+((6125.0/12.0+(3125.0/12.0*var_inter[0]-625)*var_inter[0])*var_inter[0]-325.0/2.0)*var_inter[0])*var_inter[0]*val[3]+val[4]*((1525.0/24.0+((6875.0/24.0-3125.0/24.0*var_inter[0])*var_inter[0]-5125.0/24.0)*var_inter[0])*var_inter[0]-25.0/4.0)*var_inter[0]+val[5]*(1+((875.0/24.0+(625.0/24.0*var_inter[0]-625.0/12.0)*var_inter[0])*var_inter[0]-125.0/12.0)*var_inter[0])*var_inter[0]
    else if interpolation_base == "hierarchical"
        return val[0]*(1-var_inter[0])+(25+((8875.0/24.0+(3125.0/24.0*var_inter[0]-4375.0/12.0)*var_inter[0])*var_inter[0]-1925.0/12.0)*var_inter[0])*var_inter[0]*val[1]+((2675.0/12.0+((8125.0/12.0-3125.0/12.0*var_inter[0])*var_inter[0]-7375.0/12.0)*var_inter[0])*var_inter[0]-25)*var_inter[0]*val[2]+(50.0/3.0+((6125.0/12.0+(3125.0/12.0*var_inter[0]-625)*var_inter[0])*var_inter[0]-325.0/2.0)*var_inter[0])*var_inter[0]*val[3]+val[4]*((1525.0/24.0+((6875.0/24.0-3125.0/24.0*var_inter[0])*var_inter[0]-5125.0/24.0)*var_inter[0])*var_inter[0]-25.0/4.0)*var_inter[0]+val[5]*var_inter[0]

#
def interpolation_vertex( var_inter, val_vertex )
    return val_vertex[0]*(1-var_inter[0])+var_inter[0]*val_vertex[1]
#
def nb_children( sub_nvi ) when sub_nvi==0
    return 1
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==0
    return child_var_inter
def type_child( sub_nvi, num_child ) when sub_nvi==0
    return BarGeneric[Int32]
def node_number_child( sub_nvi, num_child ) when sub_nvi==0
    return 0 .. 6
#
def nb_children( sub_nvi ) when sub_nvi==1
    return 2
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==1 and num_child==0
    return [0]
def type_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==0
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==0
    return [0]
def var_inter_from_child_var_inter( sub_nvi, num_child, child_var_inter ) when sub_nvi==1 and num_child==1
    return [1]
def type_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==1
    return NodalElement
def node_number_child( sub_nvi, num_child ) when sub_nvi==1 and num_child==1
    return [5]
def normal( var_inter, pos_nodes )
    assert( 0, "normal is defined only for nb_dim == nvi + 1" )
#
def jac_mat( var_inter, pos_nodes )
    res := Mat[ type_promote(var_inter[0],pos_nodes[0][0],mul), Gen[ 1, 1 ] ]()
    R_0 := pos_nodes[4][0]; R_1 := pos_nodes[2][0]; R_2 := pos_nodes[1][0]; R_3 := pos_nodes[0][0];
    R_4 := pos_nodes[3][0]; R_5 := pos_nodes[5][0]; R_6 := var_inter[0]; R_7 := (-15625.0/24.0)*R_6;
    R_7 = (6875.0/6.0)+R_7; R_7 = R_7*R_6; R_7 = -640.625+R_7; R_7 = R_7*R_6;
    R_7 = (1525.0/12.0)+R_7; R_7 = R_7*R_6; R_7 = -6.25+R_7; R_0 = R_7*R_0;
    R_7 = (-15625.0/12.0)*R_6; R_7 = (8125.0/3.0)+R_7; R_7 = R_7*R_6; R_7 = -1843.75+R_7;
    R_7 = R_7*R_6; R_7 = (2675.0/6.0)+R_7; R_7 = R_7*R_6; R_7 = (-25.0)+R_7;
    R_1 = R_7*R_1; R_7 = (15625.0/24.0)*R_6; R_7 = (-4375.0/3.0)+R_7; R_7 = R_7*R_6;
    R_7 = 1109.38+R_7; R_7 = R_7*R_6; R_7 = (-1925.0/6.0)+R_7; R_7 = R_7*R_6;
    R_7 = 25.0+R_7; R_2 = R_7*R_2; R_7 = (-3125.0/24.0)*R_6; R_7 = 312.5+R_7;
    R_7 = R_7*R_6; R_7 = -265.625+R_7; R_7 = R_7*R_6; R_7 = 93.75+R_7;
    R_7 = R_7*R_6; R_7 = (-137.0/12.0)+R_7; R_3 = R_7*R_3; R_2 = R_3+R_2;
    R_1 = R_2+R_1; R_2 = (15625.0/12.0)*R_6; R_2 = (-2500.0)+R_2; R_2 = R_2*R_6;
    R_2 = 1531.25+R_2; R_2 = R_2*R_6; R_2 = (-325.0)+R_2; R_2 = R_2*R_6;
    R_2 = (50.0/3.0)+R_2; R_4 = R_2*R_4; R_1 = R_4+R_1; R_0 = R_1+R_0;
    R_1 = (3125.0/24.0)*R_6; R_1 = (-625.0/3.0)+R_1; R_1 = R_1*R_6; R_1 = 109.375+R_1;
    R_1 = R_1*R_6; R_1 = (-125.0/6.0)+R_1; R_6 = R_1*R_6; R_6 = 1.0+R_6;
    R_5 = R_6*R_5; R_0 = R_5+R_0; res(0,0) = R_0; 
    return res
#
def jac( var_inter, pos_nodes )
    R_0 := pos_nodes[4][0]; R_1 := pos_nodes[2][0]; R_2 := pos_nodes[1][0]; R_3 := pos_nodes[0][0];
    R_4 := pos_nodes[3][0]; R_5 := pos_nodes[5][0]; R_6 := var_inter[0]; R_7 := (-15625.0/24.0)*R_6;
    R_7 = (6875.0/6.0)+R_7; R_7 = R_7*R_6; R_7 = -640.625+R_7; R_7 = R_7*R_6;
    R_7 = (1525.0/12.0)+R_7; R_7 = R_7*R_6; R_7 = -6.25+R_7; R_0 = R_7*R_0;
    R_7 = (-15625.0/12.0)*R_6; R_7 = (8125.0/3.0)+R_7; R_7 = R_7*R_6; R_7 = -1843.75+R_7;
    R_7 = R_7*R_6; R_7 = (2675.0/6.0)+R_7; R_7 = R_7*R_6; R_7 = (-25.0)+R_7;
    R_1 = R_7*R_1; R_7 = (15625.0/24.0)*R_6; R_7 = (-4375.0/3.0)+R_7; R_7 = R_7*R_6;
    R_7 = 1109.38+R_7; R_7 = R_7*R_6; R_7 = (-1925.0/6.0)+R_7; R_7 = R_7*R_6;
    R_7 = 25.0+R_7; R_2 = R_7*R_2; R_7 = (-3125.0/24.0)*R_6; R_7 = 312.5+R_7;
    R_7 = R_7*R_6; R_7 = -265.625+R_7; R_7 = R_7*R_6; R_7 = 93.75+R_7;
    R_7 = R_7*R_6; R_7 = (-137.0/12.0)+R_7; R_3 = R_7*R_3; R_2 = R_3+R_2;
    R_1 = R_2+R_1; R_2 = (15625.0/12.0)*R_6; R_2 = (-2500.0)+R_2; R_2 = R_2*R_6;
    R_2 = 1531.25+R_2; R_2 = R_2*R_6; R_2 = (-325.0)+R_2; R_2 = R_2*R_6;
    R_2 = (50.0/3.0)+R_2; R_4 = R_2*R_4; R_1 = R_4+R_1; R_0 = R_1+R_0;
    R_1 = (3125.0/24.0)*R_6; R_1 = (-625.0/3.0)+R_1; R_1 = R_1*R_6; R_1 = 109.375+R_1;
    R_1 = R_1*R_6; R_1 = (-125.0/6.0)+R_1; R_6 = R_1*R_6; R_6 = 1.0+R_6;
    R_5 = R_6*R_5; R_0 = R_5+R_0; res := R_0; 
    return res
#
def inv_jac_mat( var_inter, pos_nodes )
    res := Mat[ type_promote(var_inter[0],pos_nodes[0][0],mul), Gen[ 1, 1 ] ]()
    R_0 := pos_nodes[4][0]; R_1 := pos_nodes[2][0]; R_2 := pos_nodes[1][0]; R_3 := pos_nodes[0][0];
    R_4 := pos_nodes[3][0]; R_5 := pos_nodes[5][0]; R_6 := var_inter[0]; R_7 := (-15625.0/24.0)*R_6;
    R_7 = (6875.0/6.0)+R_7; R_7 = R_7*R_6; R_7 = -640.625+R_7; R_7 = R_7*R_6;
    R_7 = (1525.0/12.0)+R_7; R_7 = R_7*R_6; R_7 = -6.25+R_7; R_0 = R_7*R_0;
    R_7 = (-15625.0/12.0)*R_6; R_7 = (8125.0/3.0)+R_7; R_7 = R_7*R_6; R_7 = -1843.75+R_7;
    R_7 = R_7*R_6; R_7 = (2675.0/6.0)+R_7; R_7 = R_7*R_6; R_7 = (-25.0)+R_7;
    R_1 = R_7*R_1; R_7 = (15625.0/24.0)*R_6; R_7 = (-4375.0/3.0)+R_7; R_7 = R_7*R_6;
    R_7 = 1109.38+R_7; R_7 = R_7*R_6; R_7 = (-1925.0/6.0)+R_7; R_7 = R_7*R_6;
    R_7 = 25.0+R_7; R_2 = R_7*R_2; R_7 = (-3125.0/24.0)*R_6; R_7 = 312.5+R_7;
    R_7 = R_7*R_6; R_7 = -265.625+R_7; R_7 = R_7*R_6; R_7 = 93.75+R_7;
    R_7 = R_7*R_6; R_7 = (-137.0/12.0)+R_7; R_3 = R_7*R_3; R_2 = R_3+R_2;
    R_1 = R_2+R_1; R_2 = (15625.0/12.0)*R_6; R_2 = (-2500.0)+R_2; R_2 = R_2*R_6;
    R_2 = 1531.25+R_2; R_2 = R_2*R_6; R_2 = (-325.0)+R_2; R_2 = R_2*R_6;
    R_2 = (50.0/3.0)+R_2; R_4 = R_2*R_4; R_1 = R_4+R_1; R_0 = R_1+R_0;
    R_1 = (3125.0/24.0)*R_6; R_1 = (-625.0/3.0)+R_1; R_1 = R_1*R_6; R_1 = 109.375+R_1;
    R_1 = R_1*R_6; R_1 = (-125.0/6.0)+R_1; R_6 = R_1*R_6; R_6 = 1.0+R_6;
    R_5 = R_6*R_5; R_0 = R_5+R_0; R_0 = 1/R_0; res(0,0) = R_0;
    return res
#
def measure( var_inter, pos_nodes )
    R_0 := pos_nodes[0][0]; R_0 = (-1.0)*R_0; R_1 := pos_nodes[5][0]; R_0 = R_1+R_0;
    res := R_0; 
    return res
